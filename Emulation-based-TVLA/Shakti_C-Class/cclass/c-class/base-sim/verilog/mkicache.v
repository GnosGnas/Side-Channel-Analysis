//
// Generated by Bluespec Compiler, version 2021.07-1-gaf77efcd (build af77efcd)
//
// On Tue Dec  7 15:48:57 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_core_req_put               O     1
// core_resp_get                  O    41
// RDY_core_resp_get              O     1
// read_mem_req_get               O    43 reg
// RDY_read_mem_req_get           O     1 reg
// RDY_read_mem_resp_put          O     1
// nc_read_req_get                O    43 reg
// RDY_nc_read_req_get            O     1 reg
// RDY_nc_read_resp_put           O     1
// RDY_pa_from_tlb_put            O     1
// perf_counters                  O     5
// RDY_perf_counters              O     1 const
// RDY_cache_enable               O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// core_req_put                   I    68
// read_mem_resp_put              I    66
// nc_read_resp_put               I    34
// pa_from_tlb_put                I    39
// cache_enable_c                 I     1
// EN_core_req_put                I     1
// EN_read_mem_resp_put           I     1
// EN_nc_read_resp_put            I     1
// EN_pa_from_tlb_put             I     1
// EN_cache_enable                I     1
// EN_core_resp_get               I     1
// EN_read_mem_req_get            I     1
// EN_nc_read_req_get             I     1
//
// Combinational paths from inputs to outputs:
//   (nc_read_resp_put,
//    pa_from_tlb_put,
//    cache_enable_c,
//    EN_nc_read_resp_put,
//    EN_pa_from_tlb_put,
//    EN_cache_enable) -> RDY_core_resp_get
//   (nc_read_resp_put,
//    pa_from_tlb_put,
//    cache_enable_c,
//    EN_core_req_put,
//    EN_nc_read_resp_put,
//    EN_pa_from_tlb_put,
//    EN_cache_enable) -> perf_counters
//   (nc_read_resp_put,
//    pa_from_tlb_put,
//    cache_enable_c,
//    EN_nc_read_resp_put,
//    EN_pa_from_tlb_put,
//    EN_cache_enable) -> core_resp_get
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkicache(CLK,
		RST_N,

		core_req_put,
		EN_core_req_put,
		RDY_core_req_put,

		EN_core_resp_get,
		core_resp_get,
		RDY_core_resp_get,

		EN_read_mem_req_get,
		read_mem_req_get,
		RDY_read_mem_req_get,

		read_mem_resp_put,
		EN_read_mem_resp_put,
		RDY_read_mem_resp_put,

		EN_nc_read_req_get,
		nc_read_req_get,
		RDY_nc_read_req_get,

		nc_read_resp_put,
		EN_nc_read_resp_put,
		RDY_nc_read_resp_put,

		pa_from_tlb_put,
		EN_pa_from_tlb_put,
		RDY_pa_from_tlb_put,

		perf_counters,
		RDY_perf_counters,

		cache_enable_c,
		EN_cache_enable,
		RDY_cache_enable);
  input  CLK;
  input  RST_N;

  // action method core_req_put
  input  [67 : 0] core_req_put;
  input  EN_core_req_put;
  output RDY_core_req_put;

  // actionvalue method core_resp_get
  input  EN_core_resp_get;
  output [40 : 0] core_resp_get;
  output RDY_core_resp_get;

  // actionvalue method read_mem_req_get
  input  EN_read_mem_req_get;
  output [42 : 0] read_mem_req_get;
  output RDY_read_mem_req_get;

  // action method read_mem_resp_put
  input  [65 : 0] read_mem_resp_put;
  input  EN_read_mem_resp_put;
  output RDY_read_mem_resp_put;

  // actionvalue method nc_read_req_get
  input  EN_nc_read_req_get;
  output [42 : 0] nc_read_req_get;
  output RDY_nc_read_req_get;

  // action method nc_read_resp_put
  input  [33 : 0] nc_read_resp_put;
  input  EN_nc_read_resp_put;
  output RDY_nc_read_resp_put;

  // action method pa_from_tlb_put
  input  [38 : 0] pa_from_tlb_put;
  input  EN_pa_from_tlb_put;
  output RDY_pa_from_tlb_put;

  // value method perf_counters
  output [4 : 0] perf_counters;
  output RDY_perf_counters;

  // action method cache_enable
  input  cache_enable_c;
  input  EN_cache_enable;
  output RDY_cache_enable;

  // signals for module outputs
  wire [42 : 0] nc_read_req_get, read_mem_req_get;
  wire [40 : 0] core_resp_get;
  wire [4 : 0] perf_counters;
  wire RDY_cache_enable,
       RDY_core_req_put,
       RDY_core_resp_get,
       RDY_nc_read_req_get,
       RDY_nc_read_resp_put,
       RDY_pa_from_tlb_put,
       RDY_perf_counters,
       RDY_read_mem_req_get,
       RDY_read_mem_resp_put;

  // inlined wires
  wire [66 : 0] ff_read_mem_response_rv_port0__write_1,
		ff_read_mem_response_rv_port1__read,
		ff_read_mem_response_rv_port1__write_1,
		ff_read_mem_response_rv_port2__read;
  wire [41 : 0] ff_core_response_rv_port0__write_1,
		ff_core_response_rv_port1__read,
		ff_core_response_rv_port1__write_1,
		ff_core_response_rv_port2__read;
  wire [39 : 0] ff_from_tlb_rv_port0__write_1,
		ff_from_tlb_rv_port1__read,
		ff_from_tlb_rv_port1__write_1,
		ff_from_tlb_rv_port2__read;
  wire [34 : 0] ff_nc_read_response_rv_port0__write_1,
		ff_nc_read_response_rv_port1__read,
		ff_nc_read_response_rv_port1__write_1,
		ff_nc_read_response_rv_port2__read;
  wire [1 : 0] wr_fb_response_wget, wr_ram_response_wget;
  wire _write_RL_request_to_memory_EN_fb_valid_0_wget,
       _write_RL_request_to_memory_EN_fb_valid_1_wget,
       _write_RL_request_to_memory_EN_fb_valid_2_wget,
       _write_RL_request_to_memory_EN_fb_valid_3_wget,
       ff_core_response_rv_EN_port0__write,
       wr_fb_response_whas,
       wr_ram_hitword_whas,
       wr_ram_response_whas,
       wr_total_cache_misses_whas,
       wr_total_fb_hits_whas,
       wr_total_fbfills_whas,
       wr_total_nc_whas,
       wr_trap_from_tlb_whas;

  // register data_arr_0_rg_output_0
  reg [511 : 0] data_arr_0_rg_output_0;
  wire [511 : 0] data_arr_0_rg_output_0_D_IN;
  wire data_arr_0_rg_output_0_EN;

  // register data_arr_1_rg_output_0
  reg [511 : 0] data_arr_1_rg_output_0;
  wire [511 : 0] data_arr_1_rg_output_0_D_IN;
  wire data_arr_1_rg_output_0_EN;

  // register data_arr_2_rg_output_0
  reg [511 : 0] data_arr_2_rg_output_0;
  wire [511 : 0] data_arr_2_rg_output_0_D_IN;
  wire data_arr_2_rg_output_0_EN;

  // register data_arr_3_rg_output_0
  reg [511 : 0] data_arr_3_rg_output_0;
  wire [511 : 0] data_arr_3_rg_output_0_D_IN;
  wire data_arr_3_rg_output_0_EN;

  // register fb_addr_0
  reg [31 : 0] fb_addr_0;
  wire [31 : 0] fb_addr_0_D_IN;
  wire fb_addr_0_EN;

  // register fb_addr_1
  reg [31 : 0] fb_addr_1;
  wire [31 : 0] fb_addr_1_D_IN;
  wire fb_addr_1_EN;

  // register fb_addr_2
  reg [31 : 0] fb_addr_2;
  wire [31 : 0] fb_addr_2_D_IN;
  wire fb_addr_2_EN;

  // register fb_addr_3
  reg [31 : 0] fb_addr_3;
  wire [31 : 0] fb_addr_3_D_IN;
  wire fb_addr_3_EN;

  // register fb_dataline_0
  reg [511 : 0] fb_dataline_0;
  wire [511 : 0] fb_dataline_0_D_IN;
  wire fb_dataline_0_EN;

  // register fb_dataline_1
  reg [511 : 0] fb_dataline_1;
  wire [511 : 0] fb_dataline_1_D_IN;
  wire fb_dataline_1_EN;

  // register fb_dataline_2
  reg [511 : 0] fb_dataline_2;
  wire [511 : 0] fb_dataline_2_D_IN;
  wire fb_dataline_2_EN;

  // register fb_dataline_3
  reg [511 : 0] fb_dataline_3;
  wire [511 : 0] fb_dataline_3_D_IN;
  wire fb_dataline_3_EN;

  // register fb_enables_0
  reg [15 : 0] fb_enables_0;
  wire [15 : 0] fb_enables_0_D_IN;
  wire fb_enables_0_EN;

  // register fb_enables_1
  reg [15 : 0] fb_enables_1;
  wire [15 : 0] fb_enables_1_D_IN;
  wire fb_enables_1_EN;

  // register fb_enables_2
  reg [15 : 0] fb_enables_2;
  wire [15 : 0] fb_enables_2_D_IN;
  wire fb_enables_2_EN;

  // register fb_enables_3
  reg [15 : 0] fb_enables_3;
  wire [15 : 0] fb_enables_3_D_IN;
  wire fb_enables_3_EN;

  // register fb_err_0
  reg fb_err_0;
  wire fb_err_0_D_IN, fb_err_0_EN;

  // register fb_err_1
  reg fb_err_1;
  wire fb_err_1_D_IN, fb_err_1_EN;

  // register fb_err_2
  reg fb_err_2;
  wire fb_err_2_D_IN, fb_err_2_EN;

  // register fb_err_3
  reg fb_err_3;
  wire fb_err_3_D_IN, fb_err_3_EN;

  // register fb_valid_0
  reg fb_valid_0;
  reg fb_valid_0_D_IN;
  wire fb_valid_0_EN;

  // register fb_valid_1
  reg fb_valid_1;
  reg fb_valid_1_D_IN;
  wire fb_valid_1_EN;

  // register fb_valid_2
  reg fb_valid_2;
  reg fb_valid_2_D_IN;
  wire fb_valid_2_EN;

  // register fb_valid_3
  reg fb_valid_3;
  reg fb_valid_3_D_IN;
  wire fb_valid_3_EN;

  // register ff_core_response_rv
  reg [41 : 0] ff_core_response_rv;
  wire [41 : 0] ff_core_response_rv_D_IN;
  wire ff_core_response_rv_EN;

  // register ff_from_tlb_rv
  reg [39 : 0] ff_from_tlb_rv;
  wire [39 : 0] ff_from_tlb_rv_D_IN;
  wire ff_from_tlb_rv_EN;

  // register ff_nc_read_response_rv
  reg [34 : 0] ff_nc_read_response_rv;
  wire [34 : 0] ff_nc_read_response_rv_D_IN;
  wire ff_nc_read_response_rv_EN;

  // register ff_read_mem_response_rv
  reg [66 : 0] ff_read_mem_response_rv;
  wire [66 : 0] ff_read_mem_response_rv_D_IN;
  wire ff_read_mem_response_rv_EN;

  // register replacement_v_count_0
  reg [1 : 0] replacement_v_count_0;
  wire [1 : 0] replacement_v_count_0_D_IN;
  wire replacement_v_count_0_EN;

  // register replacement_v_count_1
  reg [1 : 0] replacement_v_count_1;
  wire [1 : 0] replacement_v_count_1_D_IN;
  wire replacement_v_count_1_EN;

  // register replacement_v_count_10
  reg [1 : 0] replacement_v_count_10;
  wire [1 : 0] replacement_v_count_10_D_IN;
  wire replacement_v_count_10_EN;

  // register replacement_v_count_11
  reg [1 : 0] replacement_v_count_11;
  wire [1 : 0] replacement_v_count_11_D_IN;
  wire replacement_v_count_11_EN;

  // register replacement_v_count_12
  reg [1 : 0] replacement_v_count_12;
  wire [1 : 0] replacement_v_count_12_D_IN;
  wire replacement_v_count_12_EN;

  // register replacement_v_count_13
  reg [1 : 0] replacement_v_count_13;
  wire [1 : 0] replacement_v_count_13_D_IN;
  wire replacement_v_count_13_EN;

  // register replacement_v_count_14
  reg [1 : 0] replacement_v_count_14;
  wire [1 : 0] replacement_v_count_14_D_IN;
  wire replacement_v_count_14_EN;

  // register replacement_v_count_15
  reg [1 : 0] replacement_v_count_15;
  wire [1 : 0] replacement_v_count_15_D_IN;
  wire replacement_v_count_15_EN;

  // register replacement_v_count_16
  reg [1 : 0] replacement_v_count_16;
  wire [1 : 0] replacement_v_count_16_D_IN;
  wire replacement_v_count_16_EN;

  // register replacement_v_count_17
  reg [1 : 0] replacement_v_count_17;
  wire [1 : 0] replacement_v_count_17_D_IN;
  wire replacement_v_count_17_EN;

  // register replacement_v_count_18
  reg [1 : 0] replacement_v_count_18;
  wire [1 : 0] replacement_v_count_18_D_IN;
  wire replacement_v_count_18_EN;

  // register replacement_v_count_19
  reg [1 : 0] replacement_v_count_19;
  wire [1 : 0] replacement_v_count_19_D_IN;
  wire replacement_v_count_19_EN;

  // register replacement_v_count_2
  reg [1 : 0] replacement_v_count_2;
  wire [1 : 0] replacement_v_count_2_D_IN;
  wire replacement_v_count_2_EN;

  // register replacement_v_count_20
  reg [1 : 0] replacement_v_count_20;
  wire [1 : 0] replacement_v_count_20_D_IN;
  wire replacement_v_count_20_EN;

  // register replacement_v_count_21
  reg [1 : 0] replacement_v_count_21;
  wire [1 : 0] replacement_v_count_21_D_IN;
  wire replacement_v_count_21_EN;

  // register replacement_v_count_22
  reg [1 : 0] replacement_v_count_22;
  wire [1 : 0] replacement_v_count_22_D_IN;
  wire replacement_v_count_22_EN;

  // register replacement_v_count_23
  reg [1 : 0] replacement_v_count_23;
  wire [1 : 0] replacement_v_count_23_D_IN;
  wire replacement_v_count_23_EN;

  // register replacement_v_count_24
  reg [1 : 0] replacement_v_count_24;
  wire [1 : 0] replacement_v_count_24_D_IN;
  wire replacement_v_count_24_EN;

  // register replacement_v_count_25
  reg [1 : 0] replacement_v_count_25;
  wire [1 : 0] replacement_v_count_25_D_IN;
  wire replacement_v_count_25_EN;

  // register replacement_v_count_26
  reg [1 : 0] replacement_v_count_26;
  wire [1 : 0] replacement_v_count_26_D_IN;
  wire replacement_v_count_26_EN;

  // register replacement_v_count_27
  reg [1 : 0] replacement_v_count_27;
  wire [1 : 0] replacement_v_count_27_D_IN;
  wire replacement_v_count_27_EN;

  // register replacement_v_count_28
  reg [1 : 0] replacement_v_count_28;
  wire [1 : 0] replacement_v_count_28_D_IN;
  wire replacement_v_count_28_EN;

  // register replacement_v_count_29
  reg [1 : 0] replacement_v_count_29;
  wire [1 : 0] replacement_v_count_29_D_IN;
  wire replacement_v_count_29_EN;

  // register replacement_v_count_3
  reg [1 : 0] replacement_v_count_3;
  wire [1 : 0] replacement_v_count_3_D_IN;
  wire replacement_v_count_3_EN;

  // register replacement_v_count_30
  reg [1 : 0] replacement_v_count_30;
  wire [1 : 0] replacement_v_count_30_D_IN;
  wire replacement_v_count_30_EN;

  // register replacement_v_count_31
  reg [1 : 0] replacement_v_count_31;
  wire [1 : 0] replacement_v_count_31_D_IN;
  wire replacement_v_count_31_EN;

  // register replacement_v_count_32
  reg [1 : 0] replacement_v_count_32;
  wire [1 : 0] replacement_v_count_32_D_IN;
  wire replacement_v_count_32_EN;

  // register replacement_v_count_33
  reg [1 : 0] replacement_v_count_33;
  wire [1 : 0] replacement_v_count_33_D_IN;
  wire replacement_v_count_33_EN;

  // register replacement_v_count_34
  reg [1 : 0] replacement_v_count_34;
  wire [1 : 0] replacement_v_count_34_D_IN;
  wire replacement_v_count_34_EN;

  // register replacement_v_count_35
  reg [1 : 0] replacement_v_count_35;
  wire [1 : 0] replacement_v_count_35_D_IN;
  wire replacement_v_count_35_EN;

  // register replacement_v_count_36
  reg [1 : 0] replacement_v_count_36;
  wire [1 : 0] replacement_v_count_36_D_IN;
  wire replacement_v_count_36_EN;

  // register replacement_v_count_37
  reg [1 : 0] replacement_v_count_37;
  wire [1 : 0] replacement_v_count_37_D_IN;
  wire replacement_v_count_37_EN;

  // register replacement_v_count_38
  reg [1 : 0] replacement_v_count_38;
  wire [1 : 0] replacement_v_count_38_D_IN;
  wire replacement_v_count_38_EN;

  // register replacement_v_count_39
  reg [1 : 0] replacement_v_count_39;
  wire [1 : 0] replacement_v_count_39_D_IN;
  wire replacement_v_count_39_EN;

  // register replacement_v_count_4
  reg [1 : 0] replacement_v_count_4;
  wire [1 : 0] replacement_v_count_4_D_IN;
  wire replacement_v_count_4_EN;

  // register replacement_v_count_40
  reg [1 : 0] replacement_v_count_40;
  wire [1 : 0] replacement_v_count_40_D_IN;
  wire replacement_v_count_40_EN;

  // register replacement_v_count_41
  reg [1 : 0] replacement_v_count_41;
  wire [1 : 0] replacement_v_count_41_D_IN;
  wire replacement_v_count_41_EN;

  // register replacement_v_count_42
  reg [1 : 0] replacement_v_count_42;
  wire [1 : 0] replacement_v_count_42_D_IN;
  wire replacement_v_count_42_EN;

  // register replacement_v_count_43
  reg [1 : 0] replacement_v_count_43;
  wire [1 : 0] replacement_v_count_43_D_IN;
  wire replacement_v_count_43_EN;

  // register replacement_v_count_44
  reg [1 : 0] replacement_v_count_44;
  wire [1 : 0] replacement_v_count_44_D_IN;
  wire replacement_v_count_44_EN;

  // register replacement_v_count_45
  reg [1 : 0] replacement_v_count_45;
  wire [1 : 0] replacement_v_count_45_D_IN;
  wire replacement_v_count_45_EN;

  // register replacement_v_count_46
  reg [1 : 0] replacement_v_count_46;
  wire [1 : 0] replacement_v_count_46_D_IN;
  wire replacement_v_count_46_EN;

  // register replacement_v_count_47
  reg [1 : 0] replacement_v_count_47;
  wire [1 : 0] replacement_v_count_47_D_IN;
  wire replacement_v_count_47_EN;

  // register replacement_v_count_48
  reg [1 : 0] replacement_v_count_48;
  wire [1 : 0] replacement_v_count_48_D_IN;
  wire replacement_v_count_48_EN;

  // register replacement_v_count_49
  reg [1 : 0] replacement_v_count_49;
  wire [1 : 0] replacement_v_count_49_D_IN;
  wire replacement_v_count_49_EN;

  // register replacement_v_count_5
  reg [1 : 0] replacement_v_count_5;
  wire [1 : 0] replacement_v_count_5_D_IN;
  wire replacement_v_count_5_EN;

  // register replacement_v_count_50
  reg [1 : 0] replacement_v_count_50;
  wire [1 : 0] replacement_v_count_50_D_IN;
  wire replacement_v_count_50_EN;

  // register replacement_v_count_51
  reg [1 : 0] replacement_v_count_51;
  wire [1 : 0] replacement_v_count_51_D_IN;
  wire replacement_v_count_51_EN;

  // register replacement_v_count_52
  reg [1 : 0] replacement_v_count_52;
  wire [1 : 0] replacement_v_count_52_D_IN;
  wire replacement_v_count_52_EN;

  // register replacement_v_count_53
  reg [1 : 0] replacement_v_count_53;
  wire [1 : 0] replacement_v_count_53_D_IN;
  wire replacement_v_count_53_EN;

  // register replacement_v_count_54
  reg [1 : 0] replacement_v_count_54;
  wire [1 : 0] replacement_v_count_54_D_IN;
  wire replacement_v_count_54_EN;

  // register replacement_v_count_55
  reg [1 : 0] replacement_v_count_55;
  wire [1 : 0] replacement_v_count_55_D_IN;
  wire replacement_v_count_55_EN;

  // register replacement_v_count_56
  reg [1 : 0] replacement_v_count_56;
  wire [1 : 0] replacement_v_count_56_D_IN;
  wire replacement_v_count_56_EN;

  // register replacement_v_count_57
  reg [1 : 0] replacement_v_count_57;
  wire [1 : 0] replacement_v_count_57_D_IN;
  wire replacement_v_count_57_EN;

  // register replacement_v_count_58
  reg [1 : 0] replacement_v_count_58;
  wire [1 : 0] replacement_v_count_58_D_IN;
  wire replacement_v_count_58_EN;

  // register replacement_v_count_59
  reg [1 : 0] replacement_v_count_59;
  wire [1 : 0] replacement_v_count_59_D_IN;
  wire replacement_v_count_59_EN;

  // register replacement_v_count_6
  reg [1 : 0] replacement_v_count_6;
  wire [1 : 0] replacement_v_count_6_D_IN;
  wire replacement_v_count_6_EN;

  // register replacement_v_count_60
  reg [1 : 0] replacement_v_count_60;
  wire [1 : 0] replacement_v_count_60_D_IN;
  wire replacement_v_count_60_EN;

  // register replacement_v_count_61
  reg [1 : 0] replacement_v_count_61;
  wire [1 : 0] replacement_v_count_61_D_IN;
  wire replacement_v_count_61_EN;

  // register replacement_v_count_62
  reg [1 : 0] replacement_v_count_62;
  wire [1 : 0] replacement_v_count_62_D_IN;
  wire replacement_v_count_62_EN;

  // register replacement_v_count_63
  reg [1 : 0] replacement_v_count_63;
  wire [1 : 0] replacement_v_count_63_D_IN;
  wire replacement_v_count_63_EN;

  // register replacement_v_count_7
  reg [1 : 0] replacement_v_count_7;
  wire [1 : 0] replacement_v_count_7_D_IN;
  wire replacement_v_count_7_EN;

  // register replacement_v_count_8
  reg [1 : 0] replacement_v_count_8;
  wire [1 : 0] replacement_v_count_8_D_IN;
  wire replacement_v_count_8_EN;

  // register replacement_v_count_9
  reg [1 : 0] replacement_v_count_9;
  wire [1 : 0] replacement_v_count_9_D_IN;
  wire replacement_v_count_9_EN;

  // register rg_fb_err
  reg rg_fb_err;
  wire rg_fb_err_D_IN, rg_fb_err_EN;

  // register rg_fbfillenable
  reg [15 : 0] rg_fbfillenable;
  wire [15 : 0] rg_fbfillenable_D_IN;
  wire rg_fbfillenable_EN;

  // register rg_fbmissallocate
  reg [1 : 0] rg_fbmissallocate;
  wire [1 : 0] rg_fbmissallocate_D_IN;
  wire rg_fbmissallocate_EN;

  // register rg_fbwriteback
  reg [1 : 0] rg_fbwriteback;
  wire [1 : 0] rg_fbwriteback_D_IN;
  wire rg_fbwriteback_EN;

  // register rg_fence_stall
  reg rg_fence_stall;
  wire rg_fence_stall_D_IN, rg_fence_stall_EN;

  // register rg_latest_index
  reg [5 : 0] rg_latest_index;
  wire [5 : 0] rg_latest_index_D_IN;
  wire rg_latest_index_EN;

  // register rg_miss_ongoing
  reg rg_miss_ongoing;
  wire rg_miss_ongoing_D_IN, rg_miss_ongoing_EN;

  // register rg_polling
  reg rg_polling;
  wire rg_polling_D_IN, rg_polling_EN;

  // register rg_replaylatest
  reg rg_replaylatest;
  wire rg_replaylatest_D_IN, rg_replaylatest_EN;

  // register rg_valid_0
  reg [3 : 0] rg_valid_0;
  wire [3 : 0] rg_valid_0_D_IN;
  wire rg_valid_0_EN;

  // register rg_valid_1
  reg [3 : 0] rg_valid_1;
  wire [3 : 0] rg_valid_1_D_IN;
  wire rg_valid_1_EN;

  // register rg_valid_10
  reg [3 : 0] rg_valid_10;
  wire [3 : 0] rg_valid_10_D_IN;
  wire rg_valid_10_EN;

  // register rg_valid_11
  reg [3 : 0] rg_valid_11;
  wire [3 : 0] rg_valid_11_D_IN;
  wire rg_valid_11_EN;

  // register rg_valid_12
  reg [3 : 0] rg_valid_12;
  wire [3 : 0] rg_valid_12_D_IN;
  wire rg_valid_12_EN;

  // register rg_valid_13
  reg [3 : 0] rg_valid_13;
  wire [3 : 0] rg_valid_13_D_IN;
  wire rg_valid_13_EN;

  // register rg_valid_14
  reg [3 : 0] rg_valid_14;
  wire [3 : 0] rg_valid_14_D_IN;
  wire rg_valid_14_EN;

  // register rg_valid_15
  reg [3 : 0] rg_valid_15;
  wire [3 : 0] rg_valid_15_D_IN;
  wire rg_valid_15_EN;

  // register rg_valid_16
  reg [3 : 0] rg_valid_16;
  wire [3 : 0] rg_valid_16_D_IN;
  wire rg_valid_16_EN;

  // register rg_valid_17
  reg [3 : 0] rg_valid_17;
  wire [3 : 0] rg_valid_17_D_IN;
  wire rg_valid_17_EN;

  // register rg_valid_18
  reg [3 : 0] rg_valid_18;
  wire [3 : 0] rg_valid_18_D_IN;
  wire rg_valid_18_EN;

  // register rg_valid_19
  reg [3 : 0] rg_valid_19;
  wire [3 : 0] rg_valid_19_D_IN;
  wire rg_valid_19_EN;

  // register rg_valid_2
  reg [3 : 0] rg_valid_2;
  wire [3 : 0] rg_valid_2_D_IN;
  wire rg_valid_2_EN;

  // register rg_valid_20
  reg [3 : 0] rg_valid_20;
  wire [3 : 0] rg_valid_20_D_IN;
  wire rg_valid_20_EN;

  // register rg_valid_21
  reg [3 : 0] rg_valid_21;
  wire [3 : 0] rg_valid_21_D_IN;
  wire rg_valid_21_EN;

  // register rg_valid_22
  reg [3 : 0] rg_valid_22;
  wire [3 : 0] rg_valid_22_D_IN;
  wire rg_valid_22_EN;

  // register rg_valid_23
  reg [3 : 0] rg_valid_23;
  wire [3 : 0] rg_valid_23_D_IN;
  wire rg_valid_23_EN;

  // register rg_valid_24
  reg [3 : 0] rg_valid_24;
  wire [3 : 0] rg_valid_24_D_IN;
  wire rg_valid_24_EN;

  // register rg_valid_25
  reg [3 : 0] rg_valid_25;
  wire [3 : 0] rg_valid_25_D_IN;
  wire rg_valid_25_EN;

  // register rg_valid_26
  reg [3 : 0] rg_valid_26;
  wire [3 : 0] rg_valid_26_D_IN;
  wire rg_valid_26_EN;

  // register rg_valid_27
  reg [3 : 0] rg_valid_27;
  wire [3 : 0] rg_valid_27_D_IN;
  wire rg_valid_27_EN;

  // register rg_valid_28
  reg [3 : 0] rg_valid_28;
  wire [3 : 0] rg_valid_28_D_IN;
  wire rg_valid_28_EN;

  // register rg_valid_29
  reg [3 : 0] rg_valid_29;
  wire [3 : 0] rg_valid_29_D_IN;
  wire rg_valid_29_EN;

  // register rg_valid_3
  reg [3 : 0] rg_valid_3;
  wire [3 : 0] rg_valid_3_D_IN;
  wire rg_valid_3_EN;

  // register rg_valid_30
  reg [3 : 0] rg_valid_30;
  wire [3 : 0] rg_valid_30_D_IN;
  wire rg_valid_30_EN;

  // register rg_valid_31
  reg [3 : 0] rg_valid_31;
  wire [3 : 0] rg_valid_31_D_IN;
  wire rg_valid_31_EN;

  // register rg_valid_32
  reg [3 : 0] rg_valid_32;
  wire [3 : 0] rg_valid_32_D_IN;
  wire rg_valid_32_EN;

  // register rg_valid_33
  reg [3 : 0] rg_valid_33;
  wire [3 : 0] rg_valid_33_D_IN;
  wire rg_valid_33_EN;

  // register rg_valid_34
  reg [3 : 0] rg_valid_34;
  wire [3 : 0] rg_valid_34_D_IN;
  wire rg_valid_34_EN;

  // register rg_valid_35
  reg [3 : 0] rg_valid_35;
  wire [3 : 0] rg_valid_35_D_IN;
  wire rg_valid_35_EN;

  // register rg_valid_36
  reg [3 : 0] rg_valid_36;
  wire [3 : 0] rg_valid_36_D_IN;
  wire rg_valid_36_EN;

  // register rg_valid_37
  reg [3 : 0] rg_valid_37;
  wire [3 : 0] rg_valid_37_D_IN;
  wire rg_valid_37_EN;

  // register rg_valid_38
  reg [3 : 0] rg_valid_38;
  wire [3 : 0] rg_valid_38_D_IN;
  wire rg_valid_38_EN;

  // register rg_valid_39
  reg [3 : 0] rg_valid_39;
  wire [3 : 0] rg_valid_39_D_IN;
  wire rg_valid_39_EN;

  // register rg_valid_4
  reg [3 : 0] rg_valid_4;
  wire [3 : 0] rg_valid_4_D_IN;
  wire rg_valid_4_EN;

  // register rg_valid_40
  reg [3 : 0] rg_valid_40;
  wire [3 : 0] rg_valid_40_D_IN;
  wire rg_valid_40_EN;

  // register rg_valid_41
  reg [3 : 0] rg_valid_41;
  wire [3 : 0] rg_valid_41_D_IN;
  wire rg_valid_41_EN;

  // register rg_valid_42
  reg [3 : 0] rg_valid_42;
  wire [3 : 0] rg_valid_42_D_IN;
  wire rg_valid_42_EN;

  // register rg_valid_43
  reg [3 : 0] rg_valid_43;
  wire [3 : 0] rg_valid_43_D_IN;
  wire rg_valid_43_EN;

  // register rg_valid_44
  reg [3 : 0] rg_valid_44;
  wire [3 : 0] rg_valid_44_D_IN;
  wire rg_valid_44_EN;

  // register rg_valid_45
  reg [3 : 0] rg_valid_45;
  wire [3 : 0] rg_valid_45_D_IN;
  wire rg_valid_45_EN;

  // register rg_valid_46
  reg [3 : 0] rg_valid_46;
  wire [3 : 0] rg_valid_46_D_IN;
  wire rg_valid_46_EN;

  // register rg_valid_47
  reg [3 : 0] rg_valid_47;
  wire [3 : 0] rg_valid_47_D_IN;
  wire rg_valid_47_EN;

  // register rg_valid_48
  reg [3 : 0] rg_valid_48;
  wire [3 : 0] rg_valid_48_D_IN;
  wire rg_valid_48_EN;

  // register rg_valid_49
  reg [3 : 0] rg_valid_49;
  wire [3 : 0] rg_valid_49_D_IN;
  wire rg_valid_49_EN;

  // register rg_valid_5
  reg [3 : 0] rg_valid_5;
  wire [3 : 0] rg_valid_5_D_IN;
  wire rg_valid_5_EN;

  // register rg_valid_50
  reg [3 : 0] rg_valid_50;
  wire [3 : 0] rg_valid_50_D_IN;
  wire rg_valid_50_EN;

  // register rg_valid_51
  reg [3 : 0] rg_valid_51;
  wire [3 : 0] rg_valid_51_D_IN;
  wire rg_valid_51_EN;

  // register rg_valid_52
  reg [3 : 0] rg_valid_52;
  wire [3 : 0] rg_valid_52_D_IN;
  wire rg_valid_52_EN;

  // register rg_valid_53
  reg [3 : 0] rg_valid_53;
  wire [3 : 0] rg_valid_53_D_IN;
  wire rg_valid_53_EN;

  // register rg_valid_54
  reg [3 : 0] rg_valid_54;
  wire [3 : 0] rg_valid_54_D_IN;
  wire rg_valid_54_EN;

  // register rg_valid_55
  reg [3 : 0] rg_valid_55;
  wire [3 : 0] rg_valid_55_D_IN;
  wire rg_valid_55_EN;

  // register rg_valid_56
  reg [3 : 0] rg_valid_56;
  wire [3 : 0] rg_valid_56_D_IN;
  wire rg_valid_56_EN;

  // register rg_valid_57
  reg [3 : 0] rg_valid_57;
  wire [3 : 0] rg_valid_57_D_IN;
  wire rg_valid_57_EN;

  // register rg_valid_58
  reg [3 : 0] rg_valid_58;
  wire [3 : 0] rg_valid_58_D_IN;
  wire rg_valid_58_EN;

  // register rg_valid_59
  reg [3 : 0] rg_valid_59;
  wire [3 : 0] rg_valid_59_D_IN;
  wire rg_valid_59_EN;

  // register rg_valid_6
  reg [3 : 0] rg_valid_6;
  wire [3 : 0] rg_valid_6_D_IN;
  wire rg_valid_6_EN;

  // register rg_valid_60
  reg [3 : 0] rg_valid_60;
  wire [3 : 0] rg_valid_60_D_IN;
  wire rg_valid_60_EN;

  // register rg_valid_61
  reg [3 : 0] rg_valid_61;
  wire [3 : 0] rg_valid_61_D_IN;
  wire rg_valid_61_EN;

  // register rg_valid_62
  reg [3 : 0] rg_valid_62;
  wire [3 : 0] rg_valid_62_D_IN;
  wire rg_valid_62_EN;

  // register rg_valid_63
  reg [3 : 0] rg_valid_63;
  wire [3 : 0] rg_valid_63_D_IN;
  wire rg_valid_63_EN;

  // register rg_valid_7
  reg [3 : 0] rg_valid_7;
  wire [3 : 0] rg_valid_7_D_IN;
  wire rg_valid_7_EN;

  // register rg_valid_8
  reg [3 : 0] rg_valid_8;
  wire [3 : 0] rg_valid_8_D_IN;
  wire rg_valid_8_EN;

  // register rg_valid_9
  reg [3 : 0] rg_valid_9;
  wire [3 : 0] rg_valid_9_D_IN;
  wire rg_valid_9_EN;

  // register tag_arr_0_rg_output_0
  reg [19 : 0] tag_arr_0_rg_output_0;
  wire [19 : 0] tag_arr_0_rg_output_0_D_IN;
  wire tag_arr_0_rg_output_0_EN;

  // register tag_arr_1_rg_output_0
  reg [19 : 0] tag_arr_1_rg_output_0;
  wire [19 : 0] tag_arr_1_rg_output_0_D_IN;
  wire tag_arr_1_rg_output_0_EN;

  // register tag_arr_2_rg_output_0
  reg [19 : 0] tag_arr_2_rg_output_0;
  wire [19 : 0] tag_arr_2_rg_output_0_D_IN;
  wire tag_arr_2_rg_output_0_EN;

  // register tag_arr_3_rg_output_0
  reg [19 : 0] tag_arr_3_rg_output_0;
  wire [19 : 0] tag_arr_3_rg_output_0_D_IN;
  wire tag_arr_3_rg_output_0_EN;

  // ports of submodule data_arr_0_ram_single_0
  reg [511 : 0] data_arr_0_ram_single_0_dina;
  reg [5 : 0] data_arr_0_ram_single_0_addra;
  wire [511 : 0] data_arr_0_ram_single_0_douta;
  wire data_arr_0_ram_single_0_ena, data_arr_0_ram_single_0_wea;

  // ports of submodule data_arr_1_ram_single_0
  reg [511 : 0] data_arr_1_ram_single_0_dina;
  reg [5 : 0] data_arr_1_ram_single_0_addra;
  wire [511 : 0] data_arr_1_ram_single_0_douta;
  wire data_arr_1_ram_single_0_ena, data_arr_1_ram_single_0_wea;

  // ports of submodule data_arr_2_ram_single_0
  reg [511 : 0] data_arr_2_ram_single_0_dina;
  reg [5 : 0] data_arr_2_ram_single_0_addra;
  wire [511 : 0] data_arr_2_ram_single_0_douta;
  wire data_arr_2_ram_single_0_ena, data_arr_2_ram_single_0_wea;

  // ports of submodule data_arr_3_ram_single_0
  reg [511 : 0] data_arr_3_ram_single_0_dina;
  reg [5 : 0] data_arr_3_ram_single_0_addra;
  wire [511 : 0] data_arr_3_ram_single_0_douta;
  wire data_arr_3_ram_single_0_ena, data_arr_3_ram_single_0_wea;

  // ports of submodule ff_core_request
  wire [67 : 0] ff_core_request_D_IN, ff_core_request_D_OUT;
  wire ff_core_request_CLR,
       ff_core_request_DEQ,
       ff_core_request_EMPTY_N,
       ff_core_request_ENQ,
       ff_core_request_FULL_N;

  // ports of submodule ff_fb_fillindex
  wire [1 : 0] ff_fb_fillindex_D_IN, ff_fb_fillindex_D_OUT;
  wire ff_fb_fillindex_CLR,
       ff_fb_fillindex_DEQ,
       ff_fb_fillindex_EMPTY_N,
       ff_fb_fillindex_ENQ,
       ff_fb_fillindex_FULL_N;

  // ports of submodule ff_nc_read_request
  wire [42 : 0] ff_nc_read_request_D_IN, ff_nc_read_request_D_OUT;
  wire ff_nc_read_request_CLR,
       ff_nc_read_request_DEQ,
       ff_nc_read_request_EMPTY_N,
       ff_nc_read_request_ENQ,
       ff_nc_read_request_FULL_N;

  // ports of submodule ff_read_mem_request
  wire [42 : 0] ff_read_mem_request_D_IN, ff_read_mem_request_D_OUT;
  wire ff_read_mem_request_CLR,
       ff_read_mem_request_DEQ,
       ff_read_mem_request_EMPTY_N,
       ff_read_mem_request_ENQ,
       ff_read_mem_request_FULL_N;

  // ports of submodule tag_arr_0_ram_single_0
  reg [5 : 0] tag_arr_0_ram_single_0_addra;
  wire [19 : 0] tag_arr_0_ram_single_0_dina, tag_arr_0_ram_single_0_douta;
  wire tag_arr_0_ram_single_0_ena, tag_arr_0_ram_single_0_wea;

  // ports of submodule tag_arr_1_ram_single_0
  reg [5 : 0] tag_arr_1_ram_single_0_addra;
  wire [19 : 0] tag_arr_1_ram_single_0_dina, tag_arr_1_ram_single_0_douta;
  wire tag_arr_1_ram_single_0_ena, tag_arr_1_ram_single_0_wea;

  // ports of submodule tag_arr_2_ram_single_0
  reg [5 : 0] tag_arr_2_ram_single_0_addra;
  wire [19 : 0] tag_arr_2_ram_single_0_dina, tag_arr_2_ram_single_0_douta;
  wire tag_arr_2_ram_single_0_ena, tag_arr_2_ram_single_0_wea;

  // ports of submodule tag_arr_3_ram_single_0
  reg [5 : 0] tag_arr_3_ram_single_0_addra;
  wire [19 : 0] tag_arr_3_ram_single_0_dina, tag_arr_3_ram_single_0_douta;
  wire tag_arr_3_ram_single_0_ena, tag_arr_3_ram_single_0_wea;

  // rule scheduling signals
  wire CAN_FIRE_RL_check_fb_for_corerequest,
       CAN_FIRE_RL_data_arr_0_capture_output,
       CAN_FIRE_RL_data_arr_1_capture_output,
       CAN_FIRE_RL_data_arr_2_capture_output,
       CAN_FIRE_RL_data_arr_3_capture_output,
       CAN_FIRE_RL_display_stuff,
       CAN_FIRE_RL_fence_operation,
       CAN_FIRE_RL_receive_nc_response,
       CAN_FIRE_RL_release_from_FB,
       CAN_FIRE_RL_replay_latest_request,
       CAN_FIRE_RL_request_to_memory,
       CAN_FIRE_RL_respond_to_core,
       CAN_FIRE_RL_rg_fb_err__dreg_update,
       CAN_FIRE_RL_tag_arr_0_capture_output,
       CAN_FIRE_RL_tag_arr_1_capture_output,
       CAN_FIRE_RL_tag_arr_2_capture_output,
       CAN_FIRE_RL_tag_arr_3_capture_output,
       CAN_FIRE_RL_tag_match,
       CAN_FIRE_RL_update_fb_with_memory_response,
       CAN_FIRE_cache_enable,
       CAN_FIRE_core_req_put,
       CAN_FIRE_core_resp_get,
       CAN_FIRE_nc_read_req_get,
       CAN_FIRE_nc_read_resp_put,
       CAN_FIRE_pa_from_tlb_put,
       CAN_FIRE_read_mem_req_get,
       CAN_FIRE_read_mem_resp_put,
       WILL_FIRE_RL_check_fb_for_corerequest,
       WILL_FIRE_RL_data_arr_0_capture_output,
       WILL_FIRE_RL_data_arr_1_capture_output,
       WILL_FIRE_RL_data_arr_2_capture_output,
       WILL_FIRE_RL_data_arr_3_capture_output,
       WILL_FIRE_RL_display_stuff,
       WILL_FIRE_RL_fence_operation,
       WILL_FIRE_RL_receive_nc_response,
       WILL_FIRE_RL_release_from_FB,
       WILL_FIRE_RL_replay_latest_request,
       WILL_FIRE_RL_request_to_memory,
       WILL_FIRE_RL_respond_to_core,
       WILL_FIRE_RL_rg_fb_err__dreg_update,
       WILL_FIRE_RL_tag_arr_0_capture_output,
       WILL_FIRE_RL_tag_arr_1_capture_output,
       WILL_FIRE_RL_tag_arr_2_capture_output,
       WILL_FIRE_RL_tag_arr_3_capture_output,
       WILL_FIRE_RL_tag_match,
       WILL_FIRE_RL_update_fb_with_memory_response,
       WILL_FIRE_cache_enable,
       WILL_FIRE_core_req_put,
       WILL_FIRE_core_resp_get,
       WILL_FIRE_nc_read_req_get,
       WILL_FIRE_nc_read_resp_put,
       WILL_FIRE_pa_from_tlb_put,
       WILL_FIRE_read_mem_req_get,
       WILL_FIRE_read_mem_resp_put;

  // inputs to muxes for submodule ports
  reg [511 : 0] MUX_data_arr_0_ram_single_0_request_3__VAL_1;
  wire [15 : 0] MUX_fb_enables_0_write_1__VAL_1;
  wire [3 : 0] MUX_rg_valid_0_write_1__VAL_1;
  wire [1 : 0] MUX_replacement_v_count_10_write_1__VAL_1;
  wire MUX_data_arr_0_ram_single_0_request_1__SEL_1,
       MUX_data_arr_1_ram_single_0_request_1__SEL_1,
       MUX_data_arr_2_ram_single_0_request_1__SEL_1,
       MUX_data_arr_3_ram_single_0_request_1__SEL_1,
       MUX_fb_enables_0_write_1__SEL_1,
       MUX_fb_enables_0_write_1__SEL_2,
       MUX_fb_enables_1_write_1__SEL_1,
       MUX_fb_enables_1_write_1__SEL_2,
       MUX_fb_enables_2_write_1__SEL_1,
       MUX_fb_enables_2_write_1__SEL_2,
       MUX_fb_enables_3_write_1__SEL_1,
       MUX_fb_enables_3_write_1__SEL_2,
       MUX_fb_valid_0_write_1__SEL_1,
       MUX_fb_valid_1_write_1__SEL_1,
       MUX_fb_valid_2_write_1__SEL_1,
       MUX_fb_valid_3_write_1__SEL_1,
       MUX_replacement_v_count_0_write_1__SEL_1,
       MUX_replacement_v_count_1_write_1__SEL_1,
       MUX_replacement_v_count_10_write_1__SEL_1,
       MUX_replacement_v_count_11_write_1__SEL_1,
       MUX_replacement_v_count_12_write_1__SEL_1,
       MUX_replacement_v_count_13_write_1__SEL_1,
       MUX_replacement_v_count_14_write_1__SEL_1,
       MUX_replacement_v_count_15_write_1__SEL_1,
       MUX_replacement_v_count_16_write_1__SEL_1,
       MUX_replacement_v_count_17_write_1__SEL_1,
       MUX_replacement_v_count_18_write_1__SEL_1,
       MUX_replacement_v_count_19_write_1__SEL_1,
       MUX_replacement_v_count_2_write_1__SEL_1,
       MUX_replacement_v_count_20_write_1__SEL_1,
       MUX_replacement_v_count_21_write_1__SEL_1,
       MUX_replacement_v_count_22_write_1__SEL_1,
       MUX_replacement_v_count_23_write_1__SEL_1,
       MUX_replacement_v_count_24_write_1__SEL_1,
       MUX_replacement_v_count_25_write_1__SEL_1,
       MUX_replacement_v_count_26_write_1__SEL_1,
       MUX_replacement_v_count_27_write_1__SEL_1,
       MUX_replacement_v_count_28_write_1__SEL_1,
       MUX_replacement_v_count_29_write_1__SEL_1,
       MUX_replacement_v_count_3_write_1__SEL_1,
       MUX_replacement_v_count_30_write_1__SEL_1,
       MUX_replacement_v_count_31_write_1__SEL_1,
       MUX_replacement_v_count_32_write_1__SEL_1,
       MUX_replacement_v_count_33_write_1__SEL_1,
       MUX_replacement_v_count_34_write_1__SEL_1,
       MUX_replacement_v_count_35_write_1__SEL_1,
       MUX_replacement_v_count_36_write_1__SEL_1,
       MUX_replacement_v_count_37_write_1__SEL_1,
       MUX_replacement_v_count_38_write_1__SEL_1,
       MUX_replacement_v_count_39_write_1__SEL_1,
       MUX_replacement_v_count_4_write_1__SEL_1,
       MUX_replacement_v_count_40_write_1__SEL_1,
       MUX_replacement_v_count_41_write_1__SEL_1,
       MUX_replacement_v_count_42_write_1__SEL_1,
       MUX_replacement_v_count_43_write_1__SEL_1,
       MUX_replacement_v_count_44_write_1__SEL_1,
       MUX_replacement_v_count_45_write_1__SEL_1,
       MUX_replacement_v_count_46_write_1__SEL_1,
       MUX_replacement_v_count_47_write_1__SEL_1,
       MUX_replacement_v_count_48_write_1__SEL_1,
       MUX_replacement_v_count_49_write_1__SEL_1,
       MUX_replacement_v_count_5_write_1__SEL_1,
       MUX_replacement_v_count_50_write_1__SEL_1,
       MUX_replacement_v_count_51_write_1__SEL_1,
       MUX_replacement_v_count_52_write_1__SEL_1,
       MUX_replacement_v_count_53_write_1__SEL_1,
       MUX_replacement_v_count_54_write_1__SEL_1,
       MUX_replacement_v_count_55_write_1__SEL_1,
       MUX_replacement_v_count_56_write_1__SEL_1,
       MUX_replacement_v_count_57_write_1__SEL_1,
       MUX_replacement_v_count_58_write_1__SEL_1,
       MUX_replacement_v_count_59_write_1__SEL_1,
       MUX_replacement_v_count_6_write_1__SEL_1,
       MUX_replacement_v_count_60_write_1__SEL_1,
       MUX_replacement_v_count_61_write_1__SEL_1,
       MUX_replacement_v_count_62_write_1__SEL_1,
       MUX_replacement_v_count_63_write_1__SEL_1,
       MUX_replacement_v_count_7_write_1__SEL_1,
       MUX_replacement_v_count_8_write_1__SEL_1,
       MUX_replacement_v_count_9_write_1__SEL_1,
       MUX_rg_replaylatest_write_1__SEL_1,
       MUX_rg_valid_0_write_1__SEL_1,
       MUX_rg_valid_1_write_1__SEL_1,
       MUX_rg_valid_10_write_1__SEL_1,
       MUX_rg_valid_11_write_1__SEL_1,
       MUX_rg_valid_12_write_1__SEL_1,
       MUX_rg_valid_13_write_1__SEL_1,
       MUX_rg_valid_14_write_1__SEL_1,
       MUX_rg_valid_15_write_1__SEL_1,
       MUX_rg_valid_16_write_1__SEL_1,
       MUX_rg_valid_17_write_1__SEL_1,
       MUX_rg_valid_18_write_1__SEL_1,
       MUX_rg_valid_19_write_1__SEL_1,
       MUX_rg_valid_2_write_1__SEL_1,
       MUX_rg_valid_20_write_1__SEL_1,
       MUX_rg_valid_21_write_1__SEL_1,
       MUX_rg_valid_22_write_1__SEL_1,
       MUX_rg_valid_23_write_1__SEL_1,
       MUX_rg_valid_24_write_1__SEL_1,
       MUX_rg_valid_25_write_1__SEL_1,
       MUX_rg_valid_26_write_1__SEL_1,
       MUX_rg_valid_27_write_1__SEL_1,
       MUX_rg_valid_28_write_1__SEL_1,
       MUX_rg_valid_29_write_1__SEL_1,
       MUX_rg_valid_3_write_1__SEL_1,
       MUX_rg_valid_30_write_1__SEL_1,
       MUX_rg_valid_31_write_1__SEL_1,
       MUX_rg_valid_32_write_1__SEL_1,
       MUX_rg_valid_33_write_1__SEL_1,
       MUX_rg_valid_34_write_1__SEL_1,
       MUX_rg_valid_35_write_1__SEL_1,
       MUX_rg_valid_36_write_1__SEL_1,
       MUX_rg_valid_37_write_1__SEL_1,
       MUX_rg_valid_38_write_1__SEL_1,
       MUX_rg_valid_39_write_1__SEL_1,
       MUX_rg_valid_4_write_1__SEL_1,
       MUX_rg_valid_40_write_1__SEL_1,
       MUX_rg_valid_41_write_1__SEL_1,
       MUX_rg_valid_42_write_1__SEL_1,
       MUX_rg_valid_43_write_1__SEL_1,
       MUX_rg_valid_44_write_1__SEL_1,
       MUX_rg_valid_45_write_1__SEL_1,
       MUX_rg_valid_46_write_1__SEL_1,
       MUX_rg_valid_47_write_1__SEL_1,
       MUX_rg_valid_48_write_1__SEL_1,
       MUX_rg_valid_49_write_1__SEL_1,
       MUX_rg_valid_5_write_1__SEL_1,
       MUX_rg_valid_50_write_1__SEL_1,
       MUX_rg_valid_51_write_1__SEL_1,
       MUX_rg_valid_52_write_1__SEL_1,
       MUX_rg_valid_53_write_1__SEL_1,
       MUX_rg_valid_54_write_1__SEL_1,
       MUX_rg_valid_55_write_1__SEL_1,
       MUX_rg_valid_56_write_1__SEL_1,
       MUX_rg_valid_57_write_1__SEL_1,
       MUX_rg_valid_58_write_1__SEL_1,
       MUX_rg_valid_59_write_1__SEL_1,
       MUX_rg_valid_6_write_1__SEL_1,
       MUX_rg_valid_60_write_1__SEL_1,
       MUX_rg_valid_61_write_1__SEL_1,
       MUX_rg_valid_62_write_1__SEL_1,
       MUX_rg_valid_63_write_1__SEL_1,
       MUX_rg_valid_7_write_1__SEL_1,
       MUX_rg_valid_8_write_1__SEL_1,
       MUX_rg_valid_9_write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d1420;
  reg TASK_testplusargs___d1421;
  reg TASK_testplusargs___d1422;
  reg [63 : 0] v__h117667;
  reg TASK_testplusargs___d13;
  reg TASK_testplusargs___d14;
  reg TASK_testplusargs___d15;
  reg [63 : 0] v__h15379;
  reg TASK_testplusargs___d35;
  reg TASK_testplusargs___d36;
  reg TASK_testplusargs___d37;
  reg [63 : 0] v__h16138;
  reg TASK_testplusargs___d49;
  reg TASK_testplusargs___d50;
  reg TASK_testplusargs___d51;
  reg [63 : 0] v__h23885;
  reg TASK_testplusargs___d1412;
  reg TASK_testplusargs___d1413;
  reg TASK_testplusargs___d1414;
  reg [63 : 0] v__h116441;
  reg TASK_testplusargs___d258;
  reg TASK_testplusargs___d259;
  reg TASK_testplusargs___d260;
  reg [63 : 0] v__h27534;
  reg TASK_testplusargs___d268;
  reg TASK_testplusargs___d269;
  reg TASK_testplusargs___d270;
  reg [63 : 0] v__h27709;
  reg TASK_testplusargs___d277;
  reg TASK_testplusargs___d278;
  reg TASK_testplusargs___d279;
  reg [63 : 0] v__h27870;
  reg TASK_testplusargs___d380;
  reg TASK_testplusargs___d381;
  reg TASK_testplusargs___d382;
  reg [63 : 0] v__h29383;
  reg TASK_testplusargs___d388;
  reg TASK_testplusargs___d389;
  reg TASK_testplusargs___d390;
  reg [63 : 0] v__h29556;
  reg TASK_testplusargs___d86;
  reg TASK_testplusargs___d87;
  reg TASK_testplusargs___d88;
  reg [63 : 0] v__h24222;
  reg TASK_testplusargs___d432;
  reg TASK_testplusargs___d433;
  reg TASK_testplusargs___d434;
  reg [63 : 0] v__h29997;
  reg TASK_testplusargs___d441;
  reg TASK_testplusargs___d442;
  reg TASK_testplusargs___d443;
  reg [63 : 0] v__h30169;
  reg TASK_testplusargs___d448;
  reg TASK_testplusargs___d449;
  reg TASK_testplusargs___d450;
  reg [63 : 0] v__h30314;
  reg TASK_testplusargs___d1400;
  reg TASK_testplusargs___d1401;
  reg TASK_testplusargs___d1402;
  reg [63 : 0] v__h115266;
  reg TASK_testplusargs___d1057;
  reg TASK_testplusargs___d1058;
  reg TASK_testplusargs___d1059;
  reg [63 : 0] v__h101885;
  reg TASK_testplusargs___d1069;
  reg TASK_testplusargs___d1070;
  reg TASK_testplusargs___d1071;
  reg [63 : 0] v__h102048;
  reg __duses223;
  reg TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d265;
  reg TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d267;
  reg TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d275;
  reg TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d276;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d386;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d387;
  reg NOT_wr_cache_enable_wget__1_43_OR_ff_from_tlb__ETC___d437;
  reg wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d446;
  reg wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d453;
  reg TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1063;
  reg TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1065;
  reg TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1066;
  reg TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1068;
  reg SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1405;
  reg TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1428;
  reg TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1430;
  reg TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1432;
  reg TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1434;
  // synopsys translate_on

  // remaining internal signals
  reg [511 : 0] y__h34518;
  reg [31 : 0] SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090,
	       SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479;
  reg [15 : 0] SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476,
	       x__h102445;
  reg [3 : 0] SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202,
	      valid__h102521;
  reg [1 : 0] SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187;
  reg SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117,
      SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106;
  wire [511 : 0] IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d250,
		 IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d251,
		 IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d252,
		 IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d367,
		 IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d368,
		 _theResult_____1__h34412,
		 _theResult_____2_fst__h28214,
		 hitline__h25940,
		 x__h27279,
		 x__h29067,
		 x__h34515,
		 x__h34517,
		 y__h34516,
		 y__h97613;
  wire [31 : 0] _theResult_____2_snd__h24297,
		v__h23994,
		we__h34621,
		we__h34650,
		we__h34679,
		we__h34708,
		we__h34737,
		we__h34766,
		we__h34795,
		we__h34824,
		we__h34853,
		we__h34882,
		we__h34911,
		we__h34940,
		we__h34969,
		we__h34998,
		we__h35027,
		we__h35056,
		word___1__h24298,
		word__h24123,
		x_address__h30413,
		y_avValue_snd__h24103,
		y_avValue_snd__h24118;
  wire [15 : 0] _theResult_____2__h31006,
		temp__h31122,
		w__h31147,
		w__h31206,
		x__h31151;
  wire [8 : 0] block_offset__h24880;
  wire [5 : 0] v_cause__h24421;
  wire [3 : 0] IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d220,
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d224,
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d228,
	       IF_fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_ETC___d329,
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d333,
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d337,
	       _theResult_____1_fst__h26347,
	       _theResult_____1_fst__h26472,
	       _theResult_____1_fst__h26597,
	       _theResult_____2_snd_snd_fst__h28797,
	       _theResult_____2_snd_snd_fst__h28814,
	       _theResult_____2_snd_snd_fst__h28831,
	       fbhit__h28168,
	       hit__h25939,
	       x__h112623,
	       x__h31299;
  wire [2 : 0] x__h27960,
	       x__h27972,
	       x__h27984,
	       x__h29648,
	       x__h29660,
	       x__h29672,
	       y__h27961,
	       y__h27973,
	       y__h27985,
	       y__h29649,
	       y__h29661,
	       y__h29673;
  wire [1 : 0] IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68,
	       IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73,
	       IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64,
	       v__h102518;
  wire IF_IF_wr_fb_response_whas__6_THEN_wr_fb_respon_ETC___d112,
       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d324,
       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d356,
       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d377,
       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d326,
       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d358,
       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d378,
       IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d328,
       IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d360,
       IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d79,
       NOT_0_CONCAT_IF_SEL_ARR_rg_valid_0_36_rg_valid_ETC___d291,
       NOT_0_CONCAT_IF_fb_addr_3_96_BITS_31_TO_6_97_E_ETC___d406,
       NOT_fb_valid_0_9_6_AND_NOT_fb_valid_1_0_7_AND__ETC___d32,
       NOT_fb_valid_0_9_6_OR_NOT_fb_valid_1_0_7_OR_NO_ETC___d422,
       NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095,
       SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093,
       fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318,
       fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321,
       fb_enables_1_14_BIT_ff_core_request_first__3_B_ETC___d315,
       fb_enables_2_08_BIT_ff_core_request_first__3_B_ETC___d309,
       fb_enables_3_01_BIT_ff_core_request_first__3_B_ETC___d303,
       fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25,
       fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103,
       ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429,
       x_wget__h14793;

  // action method core_req_put
  assign RDY_core_req_put =
	     !ff_core_response_rv[41] && !rg_replaylatest &&
	     !rg_fence_stall &&
	     NOT_fb_valid_0_9_6_OR_NOT_fb_valid_1_0_7_OR_NO_ETC___d422 &&
	     ff_core_request_FULL_N ;
  assign CAN_FIRE_core_req_put = RDY_core_req_put ;
  assign WILL_FIRE_core_req_put = EN_core_req_put ;

  // actionvalue method core_resp_get
  assign core_resp_get = ff_core_response_rv_port1__read[40:0] ;
  assign RDY_core_resp_get = ff_core_response_rv_port1__read[41] ;
  assign CAN_FIRE_core_resp_get = ff_core_response_rv_port1__read[41] ;
  assign WILL_FIRE_core_resp_get = EN_core_resp_get ;

  // actionvalue method read_mem_req_get
  assign read_mem_req_get = ff_read_mem_request_D_OUT ;
  assign RDY_read_mem_req_get = ff_read_mem_request_EMPTY_N ;
  assign CAN_FIRE_read_mem_req_get = ff_read_mem_request_EMPTY_N ;
  assign WILL_FIRE_read_mem_req_get = EN_read_mem_req_get ;

  // action method read_mem_resp_put
  assign RDY_read_mem_resp_put = !ff_read_mem_response_rv[66] ;
  assign CAN_FIRE_read_mem_resp_put = !ff_read_mem_response_rv[66] ;
  assign WILL_FIRE_read_mem_resp_put = EN_read_mem_resp_put ;

  // actionvalue method nc_read_req_get
  assign nc_read_req_get = ff_nc_read_request_D_OUT ;
  assign RDY_nc_read_req_get = ff_nc_read_request_EMPTY_N ;
  assign CAN_FIRE_nc_read_req_get = ff_nc_read_request_EMPTY_N ;
  assign WILL_FIRE_nc_read_req_get = EN_nc_read_req_get ;

  // action method nc_read_resp_put
  assign RDY_nc_read_resp_put = !ff_nc_read_response_rv[34] ;
  assign CAN_FIRE_nc_read_resp_put = !ff_nc_read_response_rv[34] ;
  assign WILL_FIRE_nc_read_resp_put = EN_nc_read_resp_put ;

  // action method pa_from_tlb_put
  assign RDY_pa_from_tlb_put = !ff_from_tlb_rv[39] ;
  assign CAN_FIRE_pa_from_tlb_put = !ff_from_tlb_rv[39] ;
  assign WILL_FIRE_pa_from_tlb_put = EN_pa_from_tlb_put ;

  // value method perf_counters
  assign perf_counters =
	     { wr_total_fbfills_whas,
	       wr_total_nc_whas,
	       wr_total_fb_hits_whas,
	       wr_total_cache_misses_whas,
	       EN_core_req_put } ;
  assign RDY_perf_counters = 1'd1 ;

  // action method cache_enable
  assign RDY_cache_enable = 1'd1 ;
  assign CAN_FIRE_cache_enable = 1'd1 ;
  assign WILL_FIRE_cache_enable = EN_cache_enable ;

  // submodule data_arr_0_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd512),
	     .MEMSIZE(32'd64)) data_arr_0_ram_single_0(.clka(CLK),
						       .addra(data_arr_0_ram_single_0_addra),
						       .dina(data_arr_0_ram_single_0_dina),
						       .wea(data_arr_0_ram_single_0_wea),
						       .ena(data_arr_0_ram_single_0_ena),
						       .douta(data_arr_0_ram_single_0_douta));

  // submodule data_arr_1_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd512),
	     .MEMSIZE(32'd64)) data_arr_1_ram_single_0(.clka(CLK),
						       .addra(data_arr_1_ram_single_0_addra),
						       .dina(data_arr_1_ram_single_0_dina),
						       .wea(data_arr_1_ram_single_0_wea),
						       .ena(data_arr_1_ram_single_0_ena),
						       .douta(data_arr_1_ram_single_0_douta));

  // submodule data_arr_2_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd512),
	     .MEMSIZE(32'd64)) data_arr_2_ram_single_0(.clka(CLK),
						       .addra(data_arr_2_ram_single_0_addra),
						       .dina(data_arr_2_ram_single_0_dina),
						       .wea(data_arr_2_ram_single_0_wea),
						       .ena(data_arr_2_ram_single_0_ena),
						       .douta(data_arr_2_ram_single_0_douta));

  // submodule data_arr_3_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd512),
	     .MEMSIZE(32'd64)) data_arr_3_ram_single_0(.clka(CLK),
						       .addra(data_arr_3_ram_single_0_addra),
						       .dina(data_arr_3_ram_single_0_dina),
						       .wea(data_arr_3_ram_single_0_wea),
						       .ena(data_arr_3_ram_single_0_ena),
						       .douta(data_arr_3_ram_single_0_douta));

  // submodule ff_core_request
  FIFO2 #(.width(32'd68), .guarded(1'd1)) ff_core_request(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(ff_core_request_D_IN),
							  .ENQ(ff_core_request_ENQ),
							  .DEQ(ff_core_request_DEQ),
							  .CLR(ff_core_request_CLR),
							  .D_OUT(ff_core_request_D_OUT),
							  .FULL_N(ff_core_request_FULL_N),
							  .EMPTY_N(ff_core_request_EMPTY_N));

  // submodule ff_fb_fillindex
  FIFO2 #(.width(32'd2), .guarded(1'd1)) ff_fb_fillindex(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(ff_fb_fillindex_D_IN),
							 .ENQ(ff_fb_fillindex_ENQ),
							 .DEQ(ff_fb_fillindex_DEQ),
							 .CLR(ff_fb_fillindex_CLR),
							 .D_OUT(ff_fb_fillindex_D_OUT),
							 .FULL_N(ff_fb_fillindex_FULL_N),
							 .EMPTY_N(ff_fb_fillindex_EMPTY_N));

  // submodule ff_nc_read_request
  FIFO2 #(.width(32'd43), .guarded(1'd1)) ff_nc_read_request(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(ff_nc_read_request_D_IN),
							     .ENQ(ff_nc_read_request_ENQ),
							     .DEQ(ff_nc_read_request_DEQ),
							     .CLR(ff_nc_read_request_CLR),
							     .D_OUT(ff_nc_read_request_D_OUT),
							     .FULL_N(ff_nc_read_request_FULL_N),
							     .EMPTY_N(ff_nc_read_request_EMPTY_N));

  // submodule ff_read_mem_request
  FIFO2 #(.width(32'd43), .guarded(1'd1)) ff_read_mem_request(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(ff_read_mem_request_D_IN),
							      .ENQ(ff_read_mem_request_ENQ),
							      .DEQ(ff_read_mem_request_DEQ),
							      .CLR(ff_read_mem_request_CLR),
							      .D_OUT(ff_read_mem_request_D_OUT),
							      .FULL_N(ff_read_mem_request_FULL_N),
							      .EMPTY_N(ff_read_mem_request_EMPTY_N));

  // submodule tag_arr_0_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd20),
	     .MEMSIZE(32'd64)) tag_arr_0_ram_single_0(.clka(CLK),
						      .addra(tag_arr_0_ram_single_0_addra),
						      .dina(tag_arr_0_ram_single_0_dina),
						      .wea(tag_arr_0_ram_single_0_wea),
						      .ena(tag_arr_0_ram_single_0_ena),
						      .douta(tag_arr_0_ram_single_0_douta));

  // submodule tag_arr_1_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd20),
	     .MEMSIZE(32'd64)) tag_arr_1_ram_single_0(.clka(CLK),
						      .addra(tag_arr_1_ram_single_0_addra),
						      .dina(tag_arr_1_ram_single_0_dina),
						      .wea(tag_arr_1_ram_single_0_wea),
						      .ena(tag_arr_1_ram_single_0_ena),
						      .douta(tag_arr_1_ram_single_0_douta));

  // submodule tag_arr_2_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd20),
	     .MEMSIZE(32'd64)) tag_arr_2_ram_single_0(.clka(CLK),
						      .addra(tag_arr_2_ram_single_0_addra),
						      .dina(tag_arr_2_ram_single_0_dina),
						      .wea(tag_arr_2_ram_single_0_wea),
						      .ena(tag_arr_2_ram_single_0_ena),
						      .douta(tag_arr_2_ram_single_0_douta));

  // submodule tag_arr_3_ram_single_0
  bram_1rw #(.ADDR_WIDTH(32'd6),
	     .DATA_WIDTH(32'd20),
	     .MEMSIZE(32'd64)) tag_arr_3_ram_single_0(.clka(CLK),
						      .addra(tag_arr_3_ram_single_0_addra),
						      .dina(tag_arr_3_ram_single_0_dina),
						      .wea(tag_arr_3_ram_single_0_wea),
						      .ena(tag_arr_3_ram_single_0_ena),
						      .douta(tag_arr_3_ram_single_0_douta));

  // rule RL_display_stuff
  assign CAN_FIRE_RL_display_stuff = EN_cache_enable ;
  assign WILL_FIRE_RL_display_stuff = EN_cache_enable ;

  // rule RL_fence_operation
  assign CAN_FIRE_RL_fence_operation =
	     ff_core_request_EMPTY_N && ff_core_request_D_OUT[1] &&
	     rg_fence_stall &&
	     NOT_fb_valid_0_9_6_AND_NOT_fb_valid_1_0_7_AND__ETC___d32 ;
  assign WILL_FIRE_RL_fence_operation = CAN_FIRE_RL_fence_operation ;

  // rule RL_receive_nc_response
  assign CAN_FIRE_RL_receive_nc_response =
	     ff_nc_read_response_rv_port1__read[34] ;
  assign WILL_FIRE_RL_receive_nc_response = CAN_FIRE_RL_receive_nc_response ;

  // rule RL_replay_latest_request
  assign CAN_FIRE_RL_replay_latest_request = rg_replaylatest ;
  assign WILL_FIRE_RL_replay_latest_request = rg_replaylatest ;

  // rule RL_data_arr_0_capture_output
  assign CAN_FIRE_RL_data_arr_0_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_data_arr_0_capture_output = 1'd1 ;

  // rule RL_tag_arr_0_capture_output
  assign CAN_FIRE_RL_tag_arr_0_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_tag_arr_0_capture_output = 1'd1 ;

  // rule RL_data_arr_1_capture_output
  assign CAN_FIRE_RL_data_arr_1_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_data_arr_1_capture_output = 1'd1 ;

  // rule RL_tag_arr_1_capture_output
  assign CAN_FIRE_RL_tag_arr_1_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_tag_arr_1_capture_output = 1'd1 ;

  // rule RL_data_arr_2_capture_output
  assign CAN_FIRE_RL_data_arr_2_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_data_arr_2_capture_output = 1'd1 ;

  // rule RL_tag_arr_2_capture_output
  assign CAN_FIRE_RL_tag_arr_2_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_tag_arr_2_capture_output = 1'd1 ;

  // rule RL_data_arr_3_capture_output
  assign CAN_FIRE_RL_data_arr_3_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_data_arr_3_capture_output = 1'd1 ;

  // rule RL_tag_arr_3_capture_output
  assign CAN_FIRE_RL_tag_arr_3_capture_output = 1'd1 ;
  assign WILL_FIRE_RL_tag_arr_3_capture_output = 1'd1 ;

  // rule RL_tag_match
  assign CAN_FIRE_RL_tag_match =
	     ff_from_tlb_rv_port1__read[39] && ff_core_request_EMPTY_N &&
	     EN_cache_enable &&
	     !ff_core_response_rv[41] &&
	     !rg_miss_ongoing &&
	     !rg_polling &&
	     !ff_core_request_D_OUT[1] ;
  assign WILL_FIRE_RL_tag_match = CAN_FIRE_RL_tag_match ;

  // rule RL_check_fb_for_corerequest
  assign CAN_FIRE_RL_check_fb_for_corerequest =
	     ff_from_tlb_rv_port1__read[39] && EN_cache_enable &&
	     ff_core_request_EMPTY_N &&
	     !ff_core_response_rv[41] &&
	     !ff_core_request_D_OUT[1] ;
  assign WILL_FIRE_RL_check_fb_for_corerequest =
	     CAN_FIRE_RL_check_fb_for_corerequest ;

  // rule RL_respond_to_core
  assign CAN_FIRE_RL_respond_to_core =
	     ff_from_tlb_rv_port1__read[39] && ff_core_request_EMPTY_N &&
	     !ff_core_response_rv[41] &&
	     IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d79 ;
  assign WILL_FIRE_RL_respond_to_core = CAN_FIRE_RL_respond_to_core ;

  // rule RL_request_to_memory
  assign CAN_FIRE_RL_request_to_memory =
	     ff_from_tlb_rv_port1__read[39] && EN_cache_enable &&
	     ff_nc_read_request_FULL_N &&
	     ff_read_mem_request_FULL_N &&
	     ff_fb_fillindex_FULL_N &&
	     IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 ==
	     2'd1 &&
	     !rg_miss_ongoing &&
	     IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 ==
	     2'd1 &&
	     IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 !=
	     2'd0 &&
	     NOT_fb_valid_0_9_6_OR_NOT_fb_valid_1_0_7_OR_NO_ETC___d422 &&
	     !wr_trap_from_tlb_whas ;
  assign WILL_FIRE_RL_request_to_memory = CAN_FIRE_RL_request_to_memory ;

  // rule RL_release_from_FB
  assign CAN_FIRE_RL_release_from_FB =
	     (fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 ||
	      NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 ||
	      rg_fence_stall) &&
	     !rg_replaylatest &&
	     fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	     SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	     x__h102445 == 16'd65535 ;
  assign WILL_FIRE_RL_release_from_FB =
	     CAN_FIRE_RL_release_from_FB && !EN_core_req_put ;

  // rule RL_update_fb_with_memory_response
  assign CAN_FIRE_RL_update_fb_with_memory_response =
	     ff_read_mem_response_rv_port1__read[66] &&
	     ff_fb_fillindex_EMPTY_N ;
  assign WILL_FIRE_RL_update_fb_with_memory_response =
	     CAN_FIRE_RL_update_fb_with_memory_response ;

  // rule RL_rg_fb_err__dreg_update
  assign CAN_FIRE_RL_rg_fb_err__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_rg_fb_err__dreg_update = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_data_arr_0_ram_single_0_request_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_data_arr_1_ram_single_0_request_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_data_arr_2_ram_single_0_request_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_data_arr_3_ram_single_0_request_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_fb_enables_0_write_1__SEL_1 =
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd0 ;
  assign MUX_fb_enables_0_write_1__SEL_2 =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd0 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign MUX_fb_enables_1_write_1__SEL_1 =
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd1 ;
  assign MUX_fb_enables_1_write_1__SEL_2 =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd1 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign MUX_fb_enables_2_write_1__SEL_1 =
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd2 ;
  assign MUX_fb_enables_2_write_1__SEL_2 =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd2 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign MUX_fb_enables_3_write_1__SEL_1 =
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd3 ;
  assign MUX_fb_enables_3_write_1__SEL_2 =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd3 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign MUX_fb_valid_0_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd0 ;
  assign MUX_fb_valid_1_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd1 ;
  assign MUX_fb_valid_2_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd2 ;
  assign MUX_fb_valid_3_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd3 ;
  assign MUX_replacement_v_count_0_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_1_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_10_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd10 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_11_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd11 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_12_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd12 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_13_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd13 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_14_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd14 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_15_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd15 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_16_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd16 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_17_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd17 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_18_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd18 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_19_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd19 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_2_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_20_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd20 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_21_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd21 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_22_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd22 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_23_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd23 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_24_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd24 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_25_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd25 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_26_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd26 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_27_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd27 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_28_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd28 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_29_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd29 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_3_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_30_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd30 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_31_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd31 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_32_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd32 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_33_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd33 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_34_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd34 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_35_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd35 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_36_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd36 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_37_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd37 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_38_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd38 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_39_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd39 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_4_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd4 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_40_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd40 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_41_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd41 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_42_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd42 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_43_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd43 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_44_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd44 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_45_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd45 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_46_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd46 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_47_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd47 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_48_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd48 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_49_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd49 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_5_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd5 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_50_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd50 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_51_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd51 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_52_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd52 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_53_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd53 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_54_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd54 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_55_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd55 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_56_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd56 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_57_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd57 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_58_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd58 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_59_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd59 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_6_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd6 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_60_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd60 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_61_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd61 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_62_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd62 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_63_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd63 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_7_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd7 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_8_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd8 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_replacement_v_count_9_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd9 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ;
  assign MUX_rg_replaylatest_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 ;
  assign MUX_rg_valid_0_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_1_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_10_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd10 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_11_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd11 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_12_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd12 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_13_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd13 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_14_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd14 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_15_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd15 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_16_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd16 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_17_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd17 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_18_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd18 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_19_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd19 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_2_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_20_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd20 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_21_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd21 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_22_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd22 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_23_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd23 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_24_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd24 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_25_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd25 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_26_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd26 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_27_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd27 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_28_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd28 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_29_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd29 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_3_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_30_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd30 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_31_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd31 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_32_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd32 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_33_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd33 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_34_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd34 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_35_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd35 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_36_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd36 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_37_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd37 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_38_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd38 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_39_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd39 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_4_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd4 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_40_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd40 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_41_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd41 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_42_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd42 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_43_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd43 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_44_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd44 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_45_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd45 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_46_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd46 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_47_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd47 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_48_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd48 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_49_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd49 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_5_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd5 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_50_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd50 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_51_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd51 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_52_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd52 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_53_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd53 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_54_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd54 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_55_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd55 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_56_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd56 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_57_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd57 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_58_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd58 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_59_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd59 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_6_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd6 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_60_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd60 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_61_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd61 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_62_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd62 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_63_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd63 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_7_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd7 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_8_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd8 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign MUX_rg_valid_9_write_1__SEL_1 =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd9 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  always@(rg_fbwriteback or
	  fb_dataline_0 or fb_dataline_1 or fb_dataline_2 or fb_dataline_3)
  begin
    case (rg_fbwriteback)
      2'd0: MUX_data_arr_0_ram_single_0_request_3__VAL_1 = fb_dataline_0;
      2'd1: MUX_data_arr_0_ram_single_0_request_3__VAL_1 = fb_dataline_1;
      2'd2: MUX_data_arr_0_ram_single_0_request_3__VAL_1 = fb_dataline_2;
      2'd3: MUX_data_arr_0_ram_single_0_request_3__VAL_1 = fb_dataline_3;
    endcase
  end
  assign MUX_fb_enables_0_write_1__VAL_1 =
	     SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 |
	     _theResult_____2__h31006 ;
  assign MUX_replacement_v_count_10_write_1__VAL_1 =
	     SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 -
	     2'd1 ;
  assign MUX_rg_valid_0_write_1__VAL_1 = valid__h102521 | x__h112623 ;

  // inlined wires
  assign wr_total_cache_misses_whas =
	     WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign wr_total_fb_hits_whas =
	     WILL_FIRE_RL_respond_to_core &&
	     IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 !=
	     2'd0 &&
	     IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 ==
	     2'd0 &&
	     !rg_miss_ongoing ;
  assign wr_total_nc_whas =
	     WILL_FIRE_RL_request_to_memory &&
	     (!cache_enable_c ||
	      ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429) ;
  assign wr_total_fbfills_whas =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ;
  assign wr_ram_response_wget =
	     (hit__h25939 != 4'd0 && cache_enable_c) ? 2'd0 : 2'd1 ;
  assign wr_ram_response_whas =
	     WILL_FIRE_RL_tag_match && !ff_from_tlb_rv_port1__read[6] ;
  assign wr_ram_hitword_whas =
	     WILL_FIRE_RL_tag_match && !ff_from_tlb_rv_port1__read[6] &&
	     hit__h25939 != 4'd0 &&
	     cache_enable_c ;
  assign wr_fb_response_wget =
	     cache_enable_c ?
	       (IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d328 ?
		  2'd0 :
		  2'd1) :
	       2'd1 ;
  assign wr_fb_response_whas =
	     WILL_FIRE_RL_check_fb_for_corerequest &&
	     (IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d328 ||
	      fbhit__h28168 == 4'd0 ||
	      !cache_enable_c) ;
  assign wr_trap_from_tlb_whas =
	     WILL_FIRE_RL_tag_match && ff_from_tlb_rv_port1__read[6] ;
  assign _write_RL_request_to_memory_EN_fb_valid_0_wget =
	     rg_fbmissallocate == 2'd0 && cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign _write_RL_request_to_memory_EN_fb_valid_1_wget =
	     rg_fbmissallocate == 2'd1 && cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign _write_RL_request_to_memory_EN_fb_valid_2_wget =
	     rg_fbmissallocate == 2'd2 && cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign _write_RL_request_to_memory_EN_fb_valid_3_wget =
	     rg_fbmissallocate == 2'd3 && cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ;
  assign ff_core_response_rv_EN_port0__write =
	     ff_from_tlb_rv_port1__read[39] && ff_core_request_EMPTY_N &&
	     !ff_core_response_rv[41] &&
	     IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d79 ;
  assign ff_core_response_rv_port0__write_1 =
	     { 1'd1,
	       word__h24123,
	       IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 !=
	       2'd0 &&
	       IF_IF_wr_fb_response_whas__6_THEN_wr_fb_respon_ETC___d112 ||
	       ff_from_tlb_rv_port1__read[6],
	       v_cause__h24421,
	       ff_core_request_D_OUT[3:2] } ;
  assign ff_core_response_rv_port1__read =
	     ff_core_response_rv_EN_port0__write ?
	       ff_core_response_rv_port0__write_1 :
	       ff_core_response_rv ;
  assign ff_core_response_rv_port1__write_1 =
	     { 1'd0,
	       41'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_core_response_rv_port2__read =
	     EN_core_resp_get ?
	       ff_core_response_rv_port1__write_1 :
	       ff_core_response_rv_port1__read ;
  assign ff_read_mem_response_rv_port0__write_1 =
	     { 1'd1, read_mem_resp_put } ;
  assign ff_read_mem_response_rv_port1__read =
	     EN_read_mem_resp_put ?
	       ff_read_mem_response_rv_port0__write_1 :
	       ff_read_mem_response_rv ;
  assign ff_read_mem_response_rv_port1__write_1 =
	     { 1'd0,
	       66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_read_mem_response_rv_port2__read =
	     CAN_FIRE_RL_update_fb_with_memory_response ?
	       ff_read_mem_response_rv_port1__write_1 :
	       ff_read_mem_response_rv_port1__read ;
  assign ff_nc_read_response_rv_port0__write_1 = { 1'd1, nc_read_resp_put } ;
  assign ff_nc_read_response_rv_port1__read =
	     EN_nc_read_resp_put ?
	       ff_nc_read_response_rv_port0__write_1 :
	       ff_nc_read_response_rv ;
  assign ff_nc_read_response_rv_port1__write_1 =
	     { 1'd0,
	       34'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_nc_read_response_rv_port2__read =
	     ff_nc_read_response_rv_port1__read[34] ?
	       ff_nc_read_response_rv_port1__write_1 :
	       ff_nc_read_response_rv_port1__read ;
  assign ff_from_tlb_rv_port0__write_1 = { 1'd1, pa_from_tlb_put } ;
  assign ff_from_tlb_rv_port1__read =
	     EN_pa_from_tlb_put ?
	       ff_from_tlb_rv_port0__write_1 :
	       ff_from_tlb_rv ;
  assign ff_from_tlb_rv_port1__write_1 =
	     { 1'd0,
	       39'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_from_tlb_rv_port2__read =
	     CAN_FIRE_RL_respond_to_core ?
	       ff_from_tlb_rv_port1__write_1 :
	       ff_from_tlb_rv_port1__read ;

  // register data_arr_0_rg_output_0
  assign data_arr_0_rg_output_0_D_IN = data_arr_0_ram_single_0_douta ;
  assign data_arr_0_rg_output_0_EN = 1'b1 ;

  // register data_arr_1_rg_output_0
  assign data_arr_1_rg_output_0_D_IN = data_arr_1_ram_single_0_douta ;
  assign data_arr_1_rg_output_0_EN = 1'b1 ;

  // register data_arr_2_rg_output_0
  assign data_arr_2_rg_output_0_D_IN = data_arr_2_ram_single_0_douta ;
  assign data_arr_2_rg_output_0_EN = 1'b1 ;

  // register data_arr_3_rg_output_0
  assign data_arr_3_rg_output_0_D_IN = data_arr_3_ram_single_0_douta ;
  assign data_arr_3_rg_output_0_EN = 1'b1 ;

  // register fb_addr_0
  assign fb_addr_0_D_IN = x_address__h30413 ;
  assign fb_addr_0_EN = MUX_fb_enables_0_write_1__SEL_2 ;

  // register fb_addr_1
  assign fb_addr_1_D_IN = x_address__h30413 ;
  assign fb_addr_1_EN = MUX_fb_enables_1_write_1__SEL_2 ;

  // register fb_addr_2
  assign fb_addr_2_D_IN = x_address__h30413 ;
  assign fb_addr_2_EN = MUX_fb_enables_2_write_1__SEL_2 ;

  // register fb_addr_3
  assign fb_addr_3_D_IN = x_address__h30413 ;
  assign fb_addr_3_EN = MUX_fb_enables_3_write_1__SEL_2 ;

  // register fb_dataline_0
  assign fb_dataline_0_D_IN = x__h34515 | y__h34516 ;
  assign fb_dataline_0_EN = MUX_fb_enables_0_write_1__SEL_1 ;

  // register fb_dataline_1
  assign fb_dataline_1_D_IN = fb_dataline_0_D_IN ;
  assign fb_dataline_1_EN = MUX_fb_enables_1_write_1__SEL_1 ;

  // register fb_dataline_2
  assign fb_dataline_2_D_IN = fb_dataline_0_D_IN ;
  assign fb_dataline_2_EN = MUX_fb_enables_2_write_1__SEL_1 ;

  // register fb_dataline_3
  assign fb_dataline_3_D_IN = fb_dataline_0_D_IN ;
  assign fb_dataline_3_EN = MUX_fb_enables_3_write_1__SEL_1 ;

  // register fb_enables_0
  assign fb_enables_0_D_IN =
	     MUX_fb_enables_0_write_1__SEL_1 ?
	       MUX_fb_enables_0_write_1__VAL_1 :
	       16'd0 ;
  assign fb_enables_0_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd0 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd0 ;

  // register fb_enables_1
  assign fb_enables_1_D_IN =
	     MUX_fb_enables_1_write_1__SEL_1 ?
	       MUX_fb_enables_0_write_1__VAL_1 :
	       16'd0 ;
  assign fb_enables_1_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd1 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd1 ;

  // register fb_enables_2
  assign fb_enables_2_D_IN =
	     MUX_fb_enables_2_write_1__SEL_1 ?
	       MUX_fb_enables_0_write_1__VAL_1 :
	       16'd0 ;
  assign fb_enables_2_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd2 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd2 ;

  // register fb_enables_3
  assign fb_enables_3_D_IN =
	     MUX_fb_enables_3_write_1__SEL_1 ?
	       MUX_fb_enables_0_write_1__VAL_1 :
	       16'd0 ;
  assign fb_enables_3_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd3 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_fb_fillindex_D_OUT == 2'd3 ;

  // register fb_err_0
  assign fb_err_0_D_IN = ff_read_mem_response_rv_port1__read[0] ;
  assign fb_err_0_EN = MUX_fb_enables_0_write_1__SEL_1 ;

  // register fb_err_1
  assign fb_err_1_D_IN = ff_read_mem_response_rv_port1__read[0] ;
  assign fb_err_1_EN = MUX_fb_enables_1_write_1__SEL_1 ;

  // register fb_err_2
  assign fb_err_2_D_IN = ff_read_mem_response_rv_port1__read[0] ;
  assign fb_err_2_EN = MUX_fb_enables_2_write_1__SEL_1 ;

  // register fb_err_3
  assign fb_err_3_D_IN = ff_read_mem_response_rv_port1__read[0] ;
  assign fb_err_3_EN = MUX_fb_enables_3_write_1__SEL_1 ;

  // register fb_valid_0
  always@(MUX_fb_valid_0_write_1__SEL_1 or
	  MUX_fb_enables_0_write_1__SEL_2 or WILL_FIRE_RL_fence_operation)
  case (1'b1)
    MUX_fb_valid_0_write_1__SEL_1: fb_valid_0_D_IN = 1'd0;
    MUX_fb_enables_0_write_1__SEL_2: fb_valid_0_D_IN = 1'd1;
    WILL_FIRE_RL_fence_operation: fb_valid_0_D_IN = 1'd0;
    default: fb_valid_0_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign fb_valid_0_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd0 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd0 ||
	     WILL_FIRE_RL_fence_operation ;

  // register fb_valid_1
  always@(MUX_fb_valid_1_write_1__SEL_1 or
	  MUX_fb_enables_1_write_1__SEL_2 or WILL_FIRE_RL_fence_operation)
  case (1'b1)
    MUX_fb_valid_1_write_1__SEL_1: fb_valid_1_D_IN = 1'd0;
    MUX_fb_enables_1_write_1__SEL_2: fb_valid_1_D_IN = 1'd1;
    WILL_FIRE_RL_fence_operation: fb_valid_1_D_IN = 1'd0;
    default: fb_valid_1_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign fb_valid_1_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd1 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd1 ||
	     WILL_FIRE_RL_fence_operation ;

  // register fb_valid_2
  always@(MUX_fb_valid_2_write_1__SEL_1 or
	  MUX_fb_enables_2_write_1__SEL_2 or WILL_FIRE_RL_fence_operation)
  case (1'b1)
    MUX_fb_valid_2_write_1__SEL_1: fb_valid_2_D_IN = 1'd0;
    MUX_fb_enables_2_write_1__SEL_2: fb_valid_2_D_IN = 1'd1;
    WILL_FIRE_RL_fence_operation: fb_valid_2_D_IN = 1'd0;
    default: fb_valid_2_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign fb_valid_2_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd2 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd2 ||
	     WILL_FIRE_RL_fence_operation ;

  // register fb_valid_3
  always@(MUX_fb_valid_3_write_1__SEL_1 or
	  MUX_fb_enables_3_write_1__SEL_2 or WILL_FIRE_RL_fence_operation)
  case (1'b1)
    MUX_fb_valid_3_write_1__SEL_1: fb_valid_3_D_IN = 1'd0;
    MUX_fb_enables_3_write_1__SEL_2: fb_valid_3_D_IN = 1'd1;
    WILL_FIRE_RL_fence_operation: fb_valid_3_D_IN = 1'd0;
    default: fb_valid_3_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign fb_valid_3_EN =
	     WILL_FIRE_RL_request_to_memory && rg_fbmissallocate == 2'd3 &&
	     cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 ||
	     WILL_FIRE_RL_release_from_FB && rg_fbwriteback == 2'd3 ||
	     WILL_FIRE_RL_fence_operation ;

  // register ff_core_response_rv
  assign ff_core_response_rv_D_IN = ff_core_response_rv_port2__read ;
  assign ff_core_response_rv_EN = 1'b1 ;

  // register ff_from_tlb_rv
  assign ff_from_tlb_rv_D_IN = ff_from_tlb_rv_port2__read ;
  assign ff_from_tlb_rv_EN = 1'b1 ;

  // register ff_nc_read_response_rv
  assign ff_nc_read_response_rv_D_IN = ff_nc_read_response_rv_port2__read ;
  assign ff_nc_read_response_rv_EN = 1'b1 ;

  // register ff_read_mem_response_rv
  assign ff_read_mem_response_rv_D_IN = ff_read_mem_response_rv_port2__read ;
  assign ff_read_mem_response_rv_EN = 1'b1 ;

  // register replacement_v_count_0
  assign replacement_v_count_0_D_IN =
	     MUX_replacement_v_count_0_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_0_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_1
  assign replacement_v_count_1_D_IN =
	     MUX_replacement_v_count_1_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_1_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_10
  assign replacement_v_count_10_D_IN =
	     MUX_replacement_v_count_10_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_10_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd10 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_11
  assign replacement_v_count_11_D_IN =
	     MUX_replacement_v_count_11_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_11_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd11 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_12
  assign replacement_v_count_12_D_IN =
	     MUX_replacement_v_count_12_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_12_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd12 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_13
  assign replacement_v_count_13_D_IN =
	     MUX_replacement_v_count_13_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_13_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd13 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_14
  assign replacement_v_count_14_D_IN =
	     MUX_replacement_v_count_14_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_14_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd14 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_15
  assign replacement_v_count_15_D_IN =
	     MUX_replacement_v_count_15_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_15_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd15 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_16
  assign replacement_v_count_16_D_IN =
	     MUX_replacement_v_count_16_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_16_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd16 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_17
  assign replacement_v_count_17_D_IN =
	     MUX_replacement_v_count_17_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_17_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd17 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_18
  assign replacement_v_count_18_D_IN =
	     MUX_replacement_v_count_18_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_18_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd18 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_19
  assign replacement_v_count_19_D_IN =
	     MUX_replacement_v_count_19_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_19_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd19 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_2
  assign replacement_v_count_2_D_IN =
	     MUX_replacement_v_count_2_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_2_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_20
  assign replacement_v_count_20_D_IN =
	     MUX_replacement_v_count_20_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_20_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd20 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_21
  assign replacement_v_count_21_D_IN =
	     MUX_replacement_v_count_21_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_21_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd21 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_22
  assign replacement_v_count_22_D_IN =
	     MUX_replacement_v_count_22_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_22_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd22 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_23
  assign replacement_v_count_23_D_IN =
	     MUX_replacement_v_count_23_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_23_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd23 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_24
  assign replacement_v_count_24_D_IN =
	     MUX_replacement_v_count_24_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_24_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd24 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_25
  assign replacement_v_count_25_D_IN =
	     MUX_replacement_v_count_25_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_25_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd25 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_26
  assign replacement_v_count_26_D_IN =
	     MUX_replacement_v_count_26_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_26_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd26 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_27
  assign replacement_v_count_27_D_IN =
	     MUX_replacement_v_count_27_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_27_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd27 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_28
  assign replacement_v_count_28_D_IN =
	     MUX_replacement_v_count_28_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_28_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd28 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_29
  assign replacement_v_count_29_D_IN =
	     MUX_replacement_v_count_29_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_29_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd29 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_3
  assign replacement_v_count_3_D_IN =
	     MUX_replacement_v_count_3_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_3_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_30
  assign replacement_v_count_30_D_IN =
	     MUX_replacement_v_count_30_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_30_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd30 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_31
  assign replacement_v_count_31_D_IN =
	     MUX_replacement_v_count_31_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_31_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd31 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_32
  assign replacement_v_count_32_D_IN =
	     MUX_replacement_v_count_32_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_32_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd32 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_33
  assign replacement_v_count_33_D_IN =
	     MUX_replacement_v_count_33_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_33_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd33 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_34
  assign replacement_v_count_34_D_IN =
	     MUX_replacement_v_count_34_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_34_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd34 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_35
  assign replacement_v_count_35_D_IN =
	     MUX_replacement_v_count_35_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_35_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd35 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_36
  assign replacement_v_count_36_D_IN =
	     MUX_replacement_v_count_36_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_36_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd36 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_37
  assign replacement_v_count_37_D_IN =
	     MUX_replacement_v_count_37_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_37_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd37 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_38
  assign replacement_v_count_38_D_IN =
	     MUX_replacement_v_count_38_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_38_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd38 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_39
  assign replacement_v_count_39_D_IN =
	     MUX_replacement_v_count_39_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_39_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd39 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_4
  assign replacement_v_count_4_D_IN =
	     MUX_replacement_v_count_4_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_4_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd4 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_40
  assign replacement_v_count_40_D_IN =
	     MUX_replacement_v_count_40_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_40_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd40 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_41
  assign replacement_v_count_41_D_IN =
	     MUX_replacement_v_count_41_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_41_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd41 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_42
  assign replacement_v_count_42_D_IN =
	     MUX_replacement_v_count_42_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_42_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd42 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_43
  assign replacement_v_count_43_D_IN =
	     MUX_replacement_v_count_43_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_43_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd43 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_44
  assign replacement_v_count_44_D_IN =
	     MUX_replacement_v_count_44_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_44_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd44 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_45
  assign replacement_v_count_45_D_IN =
	     MUX_replacement_v_count_45_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_45_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd45 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_46
  assign replacement_v_count_46_D_IN =
	     MUX_replacement_v_count_46_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_46_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd46 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_47
  assign replacement_v_count_47_D_IN =
	     MUX_replacement_v_count_47_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_47_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd47 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_48
  assign replacement_v_count_48_D_IN =
	     MUX_replacement_v_count_48_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_48_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd48 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_49
  assign replacement_v_count_49_D_IN =
	     MUX_replacement_v_count_49_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_49_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd49 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_5
  assign replacement_v_count_5_D_IN =
	     MUX_replacement_v_count_5_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_5_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd5 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_50
  assign replacement_v_count_50_D_IN =
	     MUX_replacement_v_count_50_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_50_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd50 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_51
  assign replacement_v_count_51_D_IN =
	     MUX_replacement_v_count_51_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_51_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd51 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_52
  assign replacement_v_count_52_D_IN =
	     MUX_replacement_v_count_52_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_52_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd52 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_53
  assign replacement_v_count_53_D_IN =
	     MUX_replacement_v_count_53_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_53_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd53 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_54
  assign replacement_v_count_54_D_IN =
	     MUX_replacement_v_count_54_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_54_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd54 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_55
  assign replacement_v_count_55_D_IN =
	     MUX_replacement_v_count_55_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_55_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd55 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_56
  assign replacement_v_count_56_D_IN =
	     MUX_replacement_v_count_56_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_56_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd56 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_57
  assign replacement_v_count_57_D_IN =
	     MUX_replacement_v_count_57_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_57_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd57 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_58
  assign replacement_v_count_58_D_IN =
	     MUX_replacement_v_count_58_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_58_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd58 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_59
  assign replacement_v_count_59_D_IN =
	     MUX_replacement_v_count_59_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_59_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd59 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_6
  assign replacement_v_count_6_D_IN =
	     MUX_replacement_v_count_6_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_6_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd6 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_60
  assign replacement_v_count_60_D_IN =
	     MUX_replacement_v_count_60_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_60_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd60 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_61
  assign replacement_v_count_61_D_IN =
	     MUX_replacement_v_count_61_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_61_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd61 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_62
  assign replacement_v_count_62_D_IN =
	     MUX_replacement_v_count_62_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_62_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd62 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_63
  assign replacement_v_count_63_D_IN =
	     MUX_replacement_v_count_63_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_63_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd63 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_7
  assign replacement_v_count_7_D_IN =
	     MUX_replacement_v_count_7_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_7_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd7 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_8
  assign replacement_v_count_8_D_IN =
	     MUX_replacement_v_count_8_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_8_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd8 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register replacement_v_count_9
  assign replacement_v_count_9_D_IN =
	     MUX_replacement_v_count_9_write_1__SEL_1 ?
	       MUX_replacement_v_count_10_write_1__VAL_1 :
	       2'd3 ;
  assign replacement_v_count_9_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd9 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     valid__h102521 == 4'd15 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_fb_err
  assign rg_fb_err_D_IN =
	     CAN_FIRE_RL_update_fb_with_memory_response &&
	     ff_read_mem_response_rv_port1__read[0] ;
  assign rg_fb_err_EN = 1'd1 ;

  // register rg_fbfillenable
  assign rg_fbfillenable_D_IN =
	     { _theResult_____2__h31006[13:0],
	       _theResult_____2__h31006[15:14] } ;
  assign rg_fbfillenable_EN = CAN_FIRE_RL_update_fb_with_memory_response ;

  // register rg_fbmissallocate
  assign rg_fbmissallocate_D_IN = rg_fbmissallocate + 2'd1 ;
  assign rg_fbmissallocate_EN = wr_total_cache_misses_whas ;

  // register rg_fbwriteback
  assign rg_fbwriteback_D_IN = rg_fbwriteback + 2'd1 ;
  assign rg_fbwriteback_EN = WILL_FIRE_RL_release_from_FB ;

  // register rg_fence_stall
  assign rg_fence_stall_D_IN = EN_core_req_put && core_req_put[1] ;
  assign rg_fence_stall_EN = EN_core_req_put || WILL_FIRE_RL_fence_operation ;

  // register rg_latest_index
  assign rg_latest_index_D_IN = core_req_put[15:10] ;
  assign rg_latest_index_EN = EN_core_req_put ;

  // register rg_miss_ongoing
  assign rg_miss_ongoing_D_IN = !WILL_FIRE_RL_respond_to_core ;
  assign rg_miss_ongoing_EN =
	     WILL_FIRE_RL_respond_to_core || WILL_FIRE_RL_request_to_memory ;

  // register rg_polling
  assign rg_polling_D_IN =
	     fbhit__h28168 != 4'd0 &&
	     IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d360 ;
  assign rg_polling_EN = CAN_FIRE_RL_check_fb_for_corerequest ;

  // register rg_replaylatest
  assign rg_replaylatest_D_IN = MUX_rg_replaylatest_write_1__SEL_1 ;
  assign rg_replaylatest_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	     fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 ||
	     rg_replaylatest ;

  // register rg_valid_0
  assign rg_valid_0_D_IN =
	     MUX_rg_valid_0_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_0_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_1
  assign rg_valid_1_D_IN =
	     MUX_rg_valid_1_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_1_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_10
  assign rg_valid_10_D_IN =
	     MUX_rg_valid_10_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_10_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd10 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_11
  assign rg_valid_11_D_IN =
	     MUX_rg_valid_11_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_11_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd11 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_12
  assign rg_valid_12_D_IN =
	     MUX_rg_valid_12_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_12_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd12 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_13
  assign rg_valid_13_D_IN =
	     MUX_rg_valid_13_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_13_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd13 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_14
  assign rg_valid_14_D_IN =
	     MUX_rg_valid_14_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_14_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd14 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_15
  assign rg_valid_15_D_IN =
	     MUX_rg_valid_15_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_15_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd15 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_16
  assign rg_valid_16_D_IN =
	     MUX_rg_valid_16_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_16_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd16 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_17
  assign rg_valid_17_D_IN =
	     MUX_rg_valid_17_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_17_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd17 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_18
  assign rg_valid_18_D_IN =
	     MUX_rg_valid_18_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_18_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd18 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_19
  assign rg_valid_19_D_IN =
	     MUX_rg_valid_19_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_19_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd19 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_2
  assign rg_valid_2_D_IN =
	     MUX_rg_valid_2_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_2_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_20
  assign rg_valid_20_D_IN =
	     MUX_rg_valid_20_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_20_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd20 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_21
  assign rg_valid_21_D_IN =
	     MUX_rg_valid_21_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_21_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd21 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_22
  assign rg_valid_22_D_IN =
	     MUX_rg_valid_22_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_22_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd22 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_23
  assign rg_valid_23_D_IN =
	     MUX_rg_valid_23_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_23_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd23 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_24
  assign rg_valid_24_D_IN =
	     MUX_rg_valid_24_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_24_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd24 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_25
  assign rg_valid_25_D_IN =
	     MUX_rg_valid_25_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_25_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd25 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_26
  assign rg_valid_26_D_IN =
	     MUX_rg_valid_26_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_26_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd26 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_27
  assign rg_valid_27_D_IN =
	     MUX_rg_valid_27_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_27_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd27 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_28
  assign rg_valid_28_D_IN =
	     MUX_rg_valid_28_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_28_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd28 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_29
  assign rg_valid_29_D_IN =
	     MUX_rg_valid_29_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_29_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd29 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_3
  assign rg_valid_3_D_IN =
	     MUX_rg_valid_3_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_3_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_30
  assign rg_valid_30_D_IN =
	     MUX_rg_valid_30_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_30_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd30 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_31
  assign rg_valid_31_D_IN =
	     MUX_rg_valid_31_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_31_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd31 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_32
  assign rg_valid_32_D_IN =
	     MUX_rg_valid_32_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_32_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd32 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_33
  assign rg_valid_33_D_IN =
	     MUX_rg_valid_33_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_33_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd33 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_34
  assign rg_valid_34_D_IN =
	     MUX_rg_valid_34_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_34_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd34 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_35
  assign rg_valid_35_D_IN =
	     MUX_rg_valid_35_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_35_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd35 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_36
  assign rg_valid_36_D_IN =
	     MUX_rg_valid_36_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_36_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd36 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_37
  assign rg_valid_37_D_IN =
	     MUX_rg_valid_37_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_37_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd37 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_38
  assign rg_valid_38_D_IN =
	     MUX_rg_valid_38_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_38_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd38 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_39
  assign rg_valid_39_D_IN =
	     MUX_rg_valid_39_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_39_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd39 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_4
  assign rg_valid_4_D_IN =
	     MUX_rg_valid_4_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_4_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd4 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_40
  assign rg_valid_40_D_IN =
	     MUX_rg_valid_40_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_40_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd40 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_41
  assign rg_valid_41_D_IN =
	     MUX_rg_valid_41_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_41_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd41 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_42
  assign rg_valid_42_D_IN =
	     MUX_rg_valid_42_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_42_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd42 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_43
  assign rg_valid_43_D_IN =
	     MUX_rg_valid_43_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_43_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd43 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_44
  assign rg_valid_44_D_IN =
	     MUX_rg_valid_44_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_44_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd44 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_45
  assign rg_valid_45_D_IN =
	     MUX_rg_valid_45_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_45_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd45 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_46
  assign rg_valid_46_D_IN =
	     MUX_rg_valid_46_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_46_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd46 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_47
  assign rg_valid_47_D_IN =
	     MUX_rg_valid_47_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_47_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd47 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_48
  assign rg_valid_48_D_IN =
	     MUX_rg_valid_48_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_48_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd48 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_49
  assign rg_valid_49_D_IN =
	     MUX_rg_valid_49_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_49_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd49 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_5
  assign rg_valid_5_D_IN =
	     MUX_rg_valid_5_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_5_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd5 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_50
  assign rg_valid_50_D_IN =
	     MUX_rg_valid_50_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_50_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd50 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_51
  assign rg_valid_51_D_IN =
	     MUX_rg_valid_51_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_51_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd51 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_52
  assign rg_valid_52_D_IN =
	     MUX_rg_valid_52_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_52_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd52 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_53
  assign rg_valid_53_D_IN =
	     MUX_rg_valid_53_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_53_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd53 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_54
  assign rg_valid_54_D_IN =
	     MUX_rg_valid_54_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_54_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd54 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_55
  assign rg_valid_55_D_IN =
	     MUX_rg_valid_55_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_55_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd55 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_56
  assign rg_valid_56_D_IN =
	     MUX_rg_valid_56_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_56_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd56 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_57
  assign rg_valid_57_D_IN =
	     MUX_rg_valid_57_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_57_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd57 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_58
  assign rg_valid_58_D_IN =
	     MUX_rg_valid_58_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_58_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd58 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_59
  assign rg_valid_59_D_IN =
	     MUX_rg_valid_59_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_59_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd59 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_6
  assign rg_valid_6_D_IN =
	     MUX_rg_valid_6_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_6_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd6 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_60
  assign rg_valid_60_D_IN =
	     MUX_rg_valid_60_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_60_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd60 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_61
  assign rg_valid_61_D_IN =
	     MUX_rg_valid_61_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_61_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd61 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_62
  assign rg_valid_62_D_IN =
	     MUX_rg_valid_62_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_62_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd62 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_63
  assign rg_valid_63_D_IN =
	     MUX_rg_valid_63_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_63_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd63 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_7
  assign rg_valid_7_D_IN =
	     MUX_rg_valid_7_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_7_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd7 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_8
  assign rg_valid_8_D_IN =
	     MUX_rg_valid_8_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_8_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd8 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register rg_valid_9
  assign rg_valid_9_D_IN =
	     MUX_rg_valid_9_write_1__SEL_1 ?
	       MUX_rg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign rg_valid_9_EN =
	     WILL_FIRE_RL_release_from_FB &&
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     6'd9 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     WILL_FIRE_RL_fence_operation ;

  // register tag_arr_0_rg_output_0
  assign tag_arr_0_rg_output_0_D_IN = tag_arr_0_ram_single_0_douta ;
  assign tag_arr_0_rg_output_0_EN = 1'b1 ;

  // register tag_arr_1_rg_output_0
  assign tag_arr_1_rg_output_0_D_IN = tag_arr_1_ram_single_0_douta ;
  assign tag_arr_1_rg_output_0_EN = 1'b1 ;

  // register tag_arr_2_rg_output_0
  assign tag_arr_2_rg_output_0_D_IN = tag_arr_2_ram_single_0_douta ;
  assign tag_arr_2_rg_output_0_EN = 1'b1 ;

  // register tag_arr_3_rg_output_0
  assign tag_arr_3_rg_output_0_D_IN = tag_arr_3_ram_single_0_douta ;
  assign tag_arr_3_rg_output_0_EN = 1'b1 ;

  // submodule data_arr_0_ram_single_0
  always@(MUX_data_arr_0_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_0_ram_single_0_request_1__SEL_1:
	  data_arr_0_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: data_arr_0_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: data_arr_0_ram_single_0_addra = core_req_put[15:10];
      default: data_arr_0_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(MUX_data_arr_0_ram_single_0_request_1__SEL_1 or
	  MUX_data_arr_0_ram_single_0_request_3__VAL_1 or
	  rg_replaylatest or EN_core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_0_ram_single_0_request_1__SEL_1:
	  data_arr_0_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      rg_replaylatest:
	  data_arr_0_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      EN_core_req_put:
	  data_arr_0_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      default: data_arr_0_ram_single_0_dina =
		   512'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign data_arr_0_ram_single_0_wea = !rg_replaylatest && !EN_core_req_put ;
  assign data_arr_0_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule data_arr_1_ram_single_0
  always@(MUX_data_arr_1_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_1_ram_single_0_request_1__SEL_1:
	  data_arr_1_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: data_arr_1_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: data_arr_1_ram_single_0_addra = core_req_put[15:10];
      default: data_arr_1_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(MUX_data_arr_1_ram_single_0_request_1__SEL_1 or
	  MUX_data_arr_0_ram_single_0_request_3__VAL_1 or
	  rg_replaylatest or EN_core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_1_ram_single_0_request_1__SEL_1:
	  data_arr_1_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      rg_replaylatest:
	  data_arr_1_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      EN_core_req_put:
	  data_arr_1_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      default: data_arr_1_ram_single_0_dina =
		   512'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign data_arr_1_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign data_arr_1_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule data_arr_2_ram_single_0
  always@(MUX_data_arr_2_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_2_ram_single_0_request_1__SEL_1:
	  data_arr_2_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: data_arr_2_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: data_arr_2_ram_single_0_addra = core_req_put[15:10];
      default: data_arr_2_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(MUX_data_arr_2_ram_single_0_request_1__SEL_1 or
	  MUX_data_arr_0_ram_single_0_request_3__VAL_1 or
	  rg_replaylatest or EN_core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_2_ram_single_0_request_1__SEL_1:
	  data_arr_2_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      rg_replaylatest:
	  data_arr_2_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      EN_core_req_put:
	  data_arr_2_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      default: data_arr_2_ram_single_0_dina =
		   512'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign data_arr_2_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign data_arr_2_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule data_arr_3_ram_single_0
  always@(MUX_data_arr_3_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_3_ram_single_0_request_1__SEL_1:
	  data_arr_3_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: data_arr_3_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: data_arr_3_ram_single_0_addra = core_req_put[15:10];
      default: data_arr_3_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(MUX_data_arr_3_ram_single_0_request_1__SEL_1 or
	  MUX_data_arr_0_ram_single_0_request_3__VAL_1 or
	  rg_replaylatest or EN_core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_3_ram_single_0_request_1__SEL_1:
	  data_arr_3_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      rg_replaylatest:
	  data_arr_3_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      EN_core_req_put:
	  data_arr_3_ram_single_0_dina =
	      MUX_data_arr_0_ram_single_0_request_3__VAL_1;
      default: data_arr_3_ram_single_0_dina =
		   512'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign data_arr_3_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign data_arr_3_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule ff_core_request
  assign ff_core_request_D_IN = core_req_put ;
  assign ff_core_request_ENQ = EN_core_req_put ;
  assign ff_core_request_DEQ =
	     WILL_FIRE_RL_fence_operation || WILL_FIRE_RL_respond_to_core ;
  assign ff_core_request_CLR = 1'b0 ;

  // submodule ff_fb_fillindex
  assign ff_fb_fillindex_D_IN = rg_fbmissallocate ;
  assign ff_fb_fillindex_ENQ = wr_total_cache_misses_whas ;
  assign ff_fb_fillindex_DEQ =
	     WILL_FIRE_RL_update_fb_with_memory_response &&
	     ff_read_mem_response_rv_port1__read[1] ;
  assign ff_fb_fillindex_CLR = 1'b0 ;

  // submodule ff_nc_read_request
  assign ff_nc_read_request_D_IN =
	     { ff_from_tlb_rv_port1__read[38:7], 11'd2 } ;
  assign ff_nc_read_request_ENQ = wr_total_nc_whas ;
  assign ff_nc_read_request_DEQ = EN_nc_read_req_get ;
  assign ff_nc_read_request_CLR = 1'b0 ;

  // submodule ff_read_mem_request
  assign ff_read_mem_request_D_IN = { x_address__h30413, 11'd59 } ;
  assign ff_read_mem_request_ENQ = wr_total_cache_misses_whas ;
  assign ff_read_mem_request_DEQ = EN_read_mem_req_get ;
  assign ff_read_mem_request_CLR = 1'b0 ;

  // submodule tag_arr_0_ram_single_0
  always@(MUX_data_arr_0_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_0_ram_single_0_request_1__SEL_1:
	  tag_arr_0_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: tag_arr_0_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: tag_arr_0_ram_single_0_addra = core_req_put[15:10];
      default: tag_arr_0_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign tag_arr_0_ram_single_0_dina =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[31:12] ;
  assign tag_arr_0_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign tag_arr_0_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd0 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule tag_arr_1_ram_single_0
  always@(MUX_data_arr_1_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_1_ram_single_0_request_1__SEL_1:
	  tag_arr_1_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: tag_arr_1_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: tag_arr_1_ram_single_0_addra = core_req_put[15:10];
      default: tag_arr_1_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign tag_arr_1_ram_single_0_dina =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[31:12] ;
  assign tag_arr_1_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign tag_arr_1_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd1 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule tag_arr_2_ram_single_0
  always@(MUX_data_arr_2_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_2_ram_single_0_request_1__SEL_1:
	  tag_arr_2_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: tag_arr_2_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: tag_arr_2_ram_single_0_addra = core_req_put[15:10];
      default: tag_arr_2_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign tag_arr_2_ram_single_0_dina =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[31:12] ;
  assign tag_arr_2_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign tag_arr_2_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd2 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // submodule tag_arr_3_ram_single_0
  always@(MUX_data_arr_3_ram_single_0_request_1__SEL_1 or
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_replaylatest or
	  rg_latest_index or EN_core_req_put or core_req_put)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_data_arr_3_ram_single_0_request_1__SEL_1:
	  tag_arr_3_ram_single_0_addra =
	      SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6];
      rg_replaylatest: tag_arr_3_ram_single_0_addra = rg_latest_index;
      EN_core_req_put: tag_arr_3_ram_single_0_addra = core_req_put[15:10];
      default: tag_arr_3_ram_single_0_addra =
		   6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign tag_arr_3_ram_single_0_dina =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[31:12] ;
  assign tag_arr_3_ram_single_0_wea = data_arr_0_ram_single_0_wea ;
  assign tag_arr_3_ram_single_0_ena =
	     WILL_FIRE_RL_release_from_FB && v__h102518 == 2'd3 &&
	     SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 ||
	     rg_replaylatest ||
	     EN_core_req_put ;

  // remaining internal signals
  assign IF_IF_wr_fb_response_whas__6_THEN_wr_fb_respon_ETC___d112 =
	     (IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 ==
	      2'd0) ?
	       CAN_FIRE_RL_check_fb_for_corerequest && x_wget__h14793 :
	       IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 ==
	       2'd0 &&
	       ff_nc_read_response_rv_port1__read[34] &&
	       ff_nc_read_response_rv_port1__read[0] ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d220 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[0] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_0_ram_single_0_douta) ?
	       4'd1 :
	       4'd0 ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d224 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[1] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_1_ram_single_0_douta) ?
	       _theResult_____1_fst__h26597 :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d220 ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d228 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[2] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_2_ram_single_0_douta) ?
	       _theResult_____1_fst__h26472 :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d224 ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d250 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[0] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_0_ram_single_0_douta) ?
	       data_arr_0_ram_single_0_douta :
	       512'd0 ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d251 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[1] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_1_ram_single_0_douta) ?
	       data_arr_1_ram_single_0_douta :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d250 ;
  assign IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d252 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[2] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_2_ram_single_0_douta) ?
	       data_arr_2_ram_single_0_douta :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d251 ;
  assign IF_fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_ETC___d329 =
	     (fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 &&
	      fb_valid_0) ?
	       4'd1 :
	       4'd0 ;
  assign IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d324 =
	     (fb_addr_1[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_1) ?
	       fb_enables_1_14_BIT_ff_core_request_first__3_B_ETC___d315 ||
	       fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 &&
	       fb_valid_0 &&
	       fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321 :
	       fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 &&
	       fb_valid_0 &&
	       fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321 ;
  assign IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d333 =
	     (fb_addr_1[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_1) ?
	       _theResult_____2_snd_snd_fst__h28831 :
	       IF_fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_ETC___d329 ;
  assign IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d356 =
	     (fb_addr_1[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_1) ?
	       !fb_enables_1_14_BIT_ff_core_request_first__3_B_ETC___d315 &&
	       (!fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 ||
		!fb_valid_0 ||
		!fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321) :
	       !fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 ||
	       !fb_valid_0 ||
	       !fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321 ;
  assign IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d367 =
	     (fb_addr_1[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_1) ?
	       fb_dataline_1 :
	       ((fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 &&
		 fb_valid_0) ?
		  fb_dataline_0 :
		  512'd0) ;
  assign IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d377 =
	     (fb_addr_1[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_1) ?
	       fb_err_1 :
	       fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 &&
	       fb_valid_0 &&
	       fb_err_0 ;
  assign IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d326 =
	     (fb_addr_2[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_2) ?
	       fb_enables_2_08_BIT_ff_core_request_first__3_B_ETC___d309 ||
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d324 :
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d324 ;
  assign IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d337 =
	     (fb_addr_2[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_2) ?
	       _theResult_____2_snd_snd_fst__h28814 :
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d333 ;
  assign IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d358 =
	     (fb_addr_2[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_2) ?
	       !fb_enables_2_08_BIT_ff_core_request_first__3_B_ETC___d309 &&
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d356 :
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d356 ;
  assign IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d368 =
	     (fb_addr_2[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_2) ?
	       fb_dataline_2 :
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d367 ;
  assign IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d378 =
	     (fb_addr_2[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_2) ?
	       fb_err_2 :
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d377 ;
  assign IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d328 =
	     (fb_addr_3[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_3) ?
	       fb_enables_3_01_BIT_ff_core_request_first__3_B_ETC___d303 ||
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d326 :
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d326 ;
  assign IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d360 =
	     (fb_addr_3[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_3) ?
	       !fb_enables_3_01_BIT_ff_core_request_first__3_B_ETC___d303 &&
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d358 :
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d358 ;
  assign IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 =
	     wr_fb_response_whas ? wr_fb_response_wget : 2'd2 ;
  assign IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 =
	     ff_nc_read_response_rv_port1__read[34] ? 2'd0 : 2'd2 ;
  assign IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 =
	     wr_ram_response_whas ? wr_ram_response_wget : 2'd2 ;
  assign IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d79 =
	     IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 ==
	     2'd0 ||
	     IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 ==
	     2'd0 ||
	     IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 ==
	     2'd0 ||
	     wr_trap_from_tlb_whas ;
  assign NOT_0_CONCAT_IF_SEL_ARR_rg_valid_0_36_rg_valid_ETC___d291 =
	     x__h27960 + y__h27961 > 3'd1 ;
  assign NOT_0_CONCAT_IF_fb_addr_3_96_BITS_31_TO_6_97_E_ETC___d406 =
	     x__h29648 + y__h29649 > 3'd1 ;
  assign NOT_fb_valid_0_9_6_AND_NOT_fb_valid_1_0_7_AND__ETC___d32 =
	     !fb_valid_0 && !fb_valid_1 && !fb_valid_2 && !fb_valid_3 ;
  assign NOT_fb_valid_0_9_6_OR_NOT_fb_valid_1_0_7_OR_NO_ETC___d422 =
	     !fb_valid_0 || !fb_valid_1 || !fb_valid_2 || !fb_valid_3 ;
  assign NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 =
	     (!ff_core_request_EMPTY_N || !EN_core_req_put) &&
	     !SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 ;
  assign SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6] ==
	     rg_latest_index ;
  assign _theResult_____1__h34412 =
	     { we__h34621,
	       we__h34650,
	       we__h34679,
	       we__h34708,
	       we__h34737,
	       we__h34766,
	       we__h34795,
	       we__h34824,
	       we__h34853,
	       we__h34882,
	       we__h34911,
	       we__h34940,
	       we__h34969,
	       we__h34998,
	       we__h35027,
	       we__h35056 } ;
  assign _theResult_____1_fst__h26347 =
	     { 1'd1,
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d228[2:0] } ;
  assign _theResult_____1_fst__h26472 =
	     { IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d224[3],
	       1'd1,
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d224[1:0] } ;
  assign _theResult_____1_fst__h26597 =
	     { IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d220[3:2],
	       1'd1,
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d220[0] } ;
  assign _theResult_____2__h31006 =
	     (SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 ==
	      16'd0) ?
	       temp__h31122 :
	       rg_fbfillenable ;
  assign _theResult_____2_fst__h28214 =
	     (fb_addr_3[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_3) ?
	       fb_dataline_3 :
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d368 ;
  assign _theResult_____2_snd__h24297 =
	     (IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 ==
	      2'd0) ?
	       word___1__h24298 :
	       32'd0 ;
  assign _theResult_____2_snd_snd_fst__h28797 =
	     { 1'd1,
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d337[2:0] } ;
  assign _theResult_____2_snd_snd_fst__h28814 =
	     { IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d333[3],
	       1'd1,
	       IF_fb_addr_1_10_BITS_31_TO_6_11_EQ_ff_from_tlb_ETC___d333[1:0] } ;
  assign _theResult_____2_snd_snd_fst__h28831 =
	     { IF_fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_ETC___d329[3:2],
	       1'd1,
	       IF_fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_ETC___d329[0] } ;
  assign block_offset__h24880 = { ff_core_request_D_OUT[9:4], 3'b0 } ;
  assign fb_addr_0_16_BITS_31_TO_6_17_EQ_ff_from_tlb_rv_ETC___d318 =
	     fb_addr_0[31:6] == ff_from_tlb_rv_port1__read[38:13] ;
  assign fb_enables_0_20_BIT_ff_core_request_first__3_B_ETC___d321 =
	     fb_enables_0[ff_core_request_D_OUT[9:6]] ;
  assign fb_enables_1_14_BIT_ff_core_request_first__3_B_ETC___d315 =
	     fb_enables_1[ff_core_request_D_OUT[9:6]] ;
  assign fb_enables_2_08_BIT_ff_core_request_first__3_B_ETC___d309 =
	     fb_enables_2[ff_core_request_D_OUT[9:6]] ;
  assign fb_enables_3_01_BIT_ff_core_request_first__3_B_ETC___d303 =
	     fb_enables_3[ff_core_request_D_OUT[9:6]] ;
  assign fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 =
	     fb_valid_0 && fb_valid_1 && fb_valid_2 && fb_valid_3 ;
  assign fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 =
	     fb_valid_0 || fb_valid_1 || fb_valid_2 || fb_valid_3 ;
  assign fbhit__h28168 =
	     (fb_addr_3[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_3) ?
	       _theResult_____2_snd_snd_fst__h28797 :
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d337 ;
  assign ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 =
	     ff_from_tlb_rv_port1__read[38:7] < 32'h80000000 ;
  assign hit__h25939 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[3] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_3_ram_single_0_douta) ?
	       _theResult_____1_fst__h26347 :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d228 ;
  assign hitline__h25940 =
	     (SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202[3] &&
	      ff_from_tlb_rv_port1__read[38:19] ==
	      tag_arr_3_ram_single_0_douta) ?
	       data_arr_3_ram_single_0_douta :
	       IF_SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_vali_ETC___d252 ;
  assign temp__h31122 = w__h31147 | x__h31151 ;
  assign v__h102518 =
	     (valid__h102521 == 4'd15) ?
	       SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 :
	       (valid__h102521[3] ?
		  (valid__h102521[2] ?
		     (valid__h102521[1] ? 2'd0 : 2'd1) :
		     2'd2) :
		  2'd3) ;
  assign v__h23994 = wr_ram_hitword_whas ? x__h27279[31:0] : 32'd0 ;
  assign v_cause__h24421 =
	     (!ff_from_tlb_rv_port1__read[6] &&
	      IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 !=
	      2'd0 &&
	      IF_IF_wr_fb_response_whas__6_THEN_wr_fb_respon_ETC___d112) ?
	       6'd1 :
	       ff_from_tlb_rv_port1__read[5:0] ;
  assign w__h31147 = w__h31206 | w__h31206 ;
  assign w__h31206 =
	     16'd1 <<
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479[5:2] ;
  assign we__h34621 = {32{_theResult_____2__h31006[15]}} ;
  assign we__h34650 = {32{_theResult_____2__h31006[14]}} ;
  assign we__h34679 = {32{_theResult_____2__h31006[13]}} ;
  assign we__h34708 = {32{_theResult_____2__h31006[12]}} ;
  assign we__h34737 = {32{_theResult_____2__h31006[11]}} ;
  assign we__h34766 = {32{_theResult_____2__h31006[10]}} ;
  assign we__h34795 = {32{_theResult_____2__h31006[9]}} ;
  assign we__h34824 = {32{_theResult_____2__h31006[8]}} ;
  assign we__h34853 = {32{_theResult_____2__h31006[7]}} ;
  assign we__h34882 = {32{_theResult_____2__h31006[6]}} ;
  assign we__h34911 = {32{_theResult_____2__h31006[5]}} ;
  assign we__h34940 = {32{_theResult_____2__h31006[4]}} ;
  assign we__h34969 = {32{_theResult_____2__h31006[3]}} ;
  assign we__h34998 = {32{_theResult_____2__h31006[2]}} ;
  assign we__h35027 = {32{_theResult_____2__h31006[1]}} ;
  assign we__h35056 = {32{_theResult_____2__h31006[0]}} ;
  assign word___1__h24298 =
	     ff_nc_read_response_rv_port1__read[34] ?
	       ff_nc_read_response_rv_port1__read[33:2] :
	       32'd0 ;
  assign word__h24123 =
	     (IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 ==
	      2'd0) ?
	       v__h23994 :
	       y_avValue_snd__h24118 ;
  assign x__h112623 = 4'd1 << v__h102518 ;
  assign x__h27279 = hitline__h25940 >> block_offset__h24880 ;
  assign x__h27960 = x__h27972 + y__h27973 ;
  assign x__h27972 = x__h27984 + y__h27985 ;
  assign x__h27984 = { 2'd0, hit__h25939[3] } ;
  assign x__h29067 = _theResult_____2_fst__h28214 >> block_offset__h24880 ;
  assign x__h29648 = x__h29660 + y__h29661 ;
  assign x__h29660 = x__h29672 + y__h29673 ;
  assign x__h29672 = { 2'd0, fbhit__h28168[3] } ;
  assign x__h31151 = 16'd1 << x__h31299 ;
  assign x__h31299 =
	     SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479[5:2] +
	     4'd1 ;
  assign x__h34515 = x__h34517 & y__h34518 ;
  assign x__h34517 =
	     { ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[15],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[14],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[13],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[12],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[11],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[10],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[9],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[8],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[7],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[6],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[5],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[4],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[3],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[2],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[1],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0],
	       ~_theResult_____2__h31006[0] } ;
  assign x_address__h30413 = { ff_from_tlb_rv_port1__read[38:10], 3'd0 } ;
  assign x_wget__h14793 =
	     (fb_addr_3[31:6] == ff_from_tlb_rv_port1__read[38:13] &&
	      fb_valid_3) ?
	       fb_err_3 :
	       IF_fb_addr_2_04_BITS_31_TO_6_05_EQ_ff_from_tlb_ETC___d378 ;
  assign y__h27961 = { 2'd0, hit__h25939[0] } ;
  assign y__h27973 = { 2'd0, hit__h25939[1] } ;
  assign y__h27985 = { 2'd0, hit__h25939[2] } ;
  assign y__h29649 = { 2'd0, fbhit__h28168[0] } ;
  assign y__h29661 = { 2'd0, fbhit__h28168[1] } ;
  assign y__h29673 = { 2'd0, fbhit__h28168[2] } ;
  assign y__h34516 = _theResult_____1__h34412 & y__h97613 ;
  assign y__h97613 = {8{ff_read_mem_response_rv_port1__read[65:2]}} ;
  assign y_avValue_snd__h24103 =
	     CAN_FIRE_RL_check_fb_for_corerequest ? x__h29067[31:0] : 32'd0 ;
  assign y_avValue_snd__h24118 =
	     (IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 ==
	      2'd0) ?
	       y_avValue_snd__h24103 :
	       _theResult_____2_snd__h24297 ;
  always@(ff_fb_fillindex_D_OUT or
	  fb_dataline_0 or fb_dataline_1 or fb_dataline_2 or fb_dataline_3)
  begin
    case (ff_fb_fillindex_D_OUT)
      2'd0: y__h34518 = fb_dataline_0;
      2'd1: y__h34518 = fb_dataline_1;
      2'd2: y__h34518 = fb_dataline_2;
      2'd3: y__h34518 = fb_dataline_3;
    endcase
  end
  always@(rg_fbwriteback or
	  fb_enables_0 or fb_enables_1 or fb_enables_2 or fb_enables_3)
  begin
    case (rg_fbwriteback)
      2'd0: x__h102445 = fb_enables_0;
      2'd1: x__h102445 = fb_enables_1;
      2'd2: x__h102445 = fb_enables_2;
      2'd3: x__h102445 = fb_enables_3;
    endcase
  end
  always@(ff_core_request_D_OUT or
	  rg_valid_0 or
	  rg_valid_1 or
	  rg_valid_2 or
	  rg_valid_3 or
	  rg_valid_4 or
	  rg_valid_5 or
	  rg_valid_6 or
	  rg_valid_7 or
	  rg_valid_8 or
	  rg_valid_9 or
	  rg_valid_10 or
	  rg_valid_11 or
	  rg_valid_12 or
	  rg_valid_13 or
	  rg_valid_14 or
	  rg_valid_15 or
	  rg_valid_16 or
	  rg_valid_17 or
	  rg_valid_18 or
	  rg_valid_19 or
	  rg_valid_20 or
	  rg_valid_21 or
	  rg_valid_22 or
	  rg_valid_23 or
	  rg_valid_24 or
	  rg_valid_25 or
	  rg_valid_26 or
	  rg_valid_27 or
	  rg_valid_28 or
	  rg_valid_29 or
	  rg_valid_30 or
	  rg_valid_31 or
	  rg_valid_32 or
	  rg_valid_33 or
	  rg_valid_34 or
	  rg_valid_35 or
	  rg_valid_36 or
	  rg_valid_37 or
	  rg_valid_38 or
	  rg_valid_39 or
	  rg_valid_40 or
	  rg_valid_41 or
	  rg_valid_42 or
	  rg_valid_43 or
	  rg_valid_44 or
	  rg_valid_45 or
	  rg_valid_46 or
	  rg_valid_47 or
	  rg_valid_48 or
	  rg_valid_49 or
	  rg_valid_50 or
	  rg_valid_51 or
	  rg_valid_52 or
	  rg_valid_53 or
	  rg_valid_54 or
	  rg_valid_55 or
	  rg_valid_56 or
	  rg_valid_57 or
	  rg_valid_58 or
	  rg_valid_59 or
	  rg_valid_60 or rg_valid_61 or rg_valid_62 or rg_valid_63)
  begin
    case (ff_core_request_D_OUT[15:10])
      6'd0:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_0;
      6'd1:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_1;
      6'd2:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_2;
      6'd3:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_3;
      6'd4:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_4;
      6'd5:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_5;
      6'd6:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_6;
      6'd7:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_7;
      6'd8:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_8;
      6'd9:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_9;
      6'd10:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_10;
      6'd11:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_11;
      6'd12:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_12;
      6'd13:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_13;
      6'd14:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_14;
      6'd15:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_15;
      6'd16:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_16;
      6'd17:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_17;
      6'd18:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_18;
      6'd19:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_19;
      6'd20:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_20;
      6'd21:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_21;
      6'd22:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_22;
      6'd23:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_23;
      6'd24:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_24;
      6'd25:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_25;
      6'd26:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_26;
      6'd27:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_27;
      6'd28:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_28;
      6'd29:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_29;
      6'd30:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_30;
      6'd31:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_31;
      6'd32:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_32;
      6'd33:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_33;
      6'd34:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_34;
      6'd35:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_35;
      6'd36:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_36;
      6'd37:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_37;
      6'd38:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_38;
      6'd39:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_39;
      6'd40:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_40;
      6'd41:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_41;
      6'd42:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_42;
      6'd43:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_43;
      6'd44:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_44;
      6'd45:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_45;
      6'd46:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_46;
      6'd47:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_47;
      6'd48:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_48;
      6'd49:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_49;
      6'd50:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_50;
      6'd51:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_51;
      6'd52:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_52;
      6'd53:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_53;
      6'd54:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_54;
      6'd55:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_55;
      6'd56:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_56;
      6'd57:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_57;
      6'd58:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_58;
      6'd59:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_59;
      6'd60:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_60;
      6'd61:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_61;
      6'd62:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_62;
      6'd63:
	  SEL_ARR_rg_valid_0_36_rg_valid_1_37_rg_valid_2_ETC___d202 =
	      rg_valid_63;
    endcase
  end
  always@(ff_fb_fillindex_D_OUT or
	  fb_addr_0 or fb_addr_1 or fb_addr_2 or fb_addr_3)
  begin
    case (ff_fb_fillindex_D_OUT)
      2'd0:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479 =
	      fb_addr_0;
      2'd1:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479 =
	      fb_addr_1;
      2'd2:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479 =
	      fb_addr_2;
      2'd3:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479 =
	      fb_addr_3;
    endcase
  end
  always@(ff_fb_fillindex_D_OUT or
	  fb_enables_0 or fb_enables_1 or fb_enables_2 or fb_enables_3)
  begin
    case (ff_fb_fillindex_D_OUT)
      2'd0:
	  SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 =
	      fb_enables_0;
      2'd1:
	  SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 =
	      fb_enables_1;
      2'd2:
	  SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 =
	      fb_enables_2;
      2'd3:
	  SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 =
	      fb_enables_3;
    endcase
  end
  always@(rg_fbwriteback or fb_addr_0 or fb_addr_1 or fb_addr_2 or fb_addr_3)
  begin
    case (rg_fbwriteback)
      2'd0:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 =
	      fb_addr_0;
      2'd1:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 =
	      fb_addr_1;
      2'd2:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 =
	      fb_addr_2;
      2'd3:
	  SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 =
	      fb_addr_3;
    endcase
  end
  always@(SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  rg_valid_0 or
	  rg_valid_1 or
	  rg_valid_2 or
	  rg_valid_3 or
	  rg_valid_4 or
	  rg_valid_5 or
	  rg_valid_6 or
	  rg_valid_7 or
	  rg_valid_8 or
	  rg_valid_9 or
	  rg_valid_10 or
	  rg_valid_11 or
	  rg_valid_12 or
	  rg_valid_13 or
	  rg_valid_14 or
	  rg_valid_15 or
	  rg_valid_16 or
	  rg_valid_17 or
	  rg_valid_18 or
	  rg_valid_19 or
	  rg_valid_20 or
	  rg_valid_21 or
	  rg_valid_22 or
	  rg_valid_23 or
	  rg_valid_24 or
	  rg_valid_25 or
	  rg_valid_26 or
	  rg_valid_27 or
	  rg_valid_28 or
	  rg_valid_29 or
	  rg_valid_30 or
	  rg_valid_31 or
	  rg_valid_32 or
	  rg_valid_33 or
	  rg_valid_34 or
	  rg_valid_35 or
	  rg_valid_36 or
	  rg_valid_37 or
	  rg_valid_38 or
	  rg_valid_39 or
	  rg_valid_40 or
	  rg_valid_41 or
	  rg_valid_42 or
	  rg_valid_43 or
	  rg_valid_44 or
	  rg_valid_45 or
	  rg_valid_46 or
	  rg_valid_47 or
	  rg_valid_48 or
	  rg_valid_49 or
	  rg_valid_50 or
	  rg_valid_51 or
	  rg_valid_52 or
	  rg_valid_53 or
	  rg_valid_54 or
	  rg_valid_55 or
	  rg_valid_56 or
	  rg_valid_57 or
	  rg_valid_58 or
	  rg_valid_59 or
	  rg_valid_60 or rg_valid_61 or rg_valid_62 or rg_valid_63)
  begin
    case (SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6])
      6'd0: valid__h102521 = rg_valid_0;
      6'd1: valid__h102521 = rg_valid_1;
      6'd2: valid__h102521 = rg_valid_2;
      6'd3: valid__h102521 = rg_valid_3;
      6'd4: valid__h102521 = rg_valid_4;
      6'd5: valid__h102521 = rg_valid_5;
      6'd6: valid__h102521 = rg_valid_6;
      6'd7: valid__h102521 = rg_valid_7;
      6'd8: valid__h102521 = rg_valid_8;
      6'd9: valid__h102521 = rg_valid_9;
      6'd10: valid__h102521 = rg_valid_10;
      6'd11: valid__h102521 = rg_valid_11;
      6'd12: valid__h102521 = rg_valid_12;
      6'd13: valid__h102521 = rg_valid_13;
      6'd14: valid__h102521 = rg_valid_14;
      6'd15: valid__h102521 = rg_valid_15;
      6'd16: valid__h102521 = rg_valid_16;
      6'd17: valid__h102521 = rg_valid_17;
      6'd18: valid__h102521 = rg_valid_18;
      6'd19: valid__h102521 = rg_valid_19;
      6'd20: valid__h102521 = rg_valid_20;
      6'd21: valid__h102521 = rg_valid_21;
      6'd22: valid__h102521 = rg_valid_22;
      6'd23: valid__h102521 = rg_valid_23;
      6'd24: valid__h102521 = rg_valid_24;
      6'd25: valid__h102521 = rg_valid_25;
      6'd26: valid__h102521 = rg_valid_26;
      6'd27: valid__h102521 = rg_valid_27;
      6'd28: valid__h102521 = rg_valid_28;
      6'd29: valid__h102521 = rg_valid_29;
      6'd30: valid__h102521 = rg_valid_30;
      6'd31: valid__h102521 = rg_valid_31;
      6'd32: valid__h102521 = rg_valid_32;
      6'd33: valid__h102521 = rg_valid_33;
      6'd34: valid__h102521 = rg_valid_34;
      6'd35: valid__h102521 = rg_valid_35;
      6'd36: valid__h102521 = rg_valid_36;
      6'd37: valid__h102521 = rg_valid_37;
      6'd38: valid__h102521 = rg_valid_38;
      6'd39: valid__h102521 = rg_valid_39;
      6'd40: valid__h102521 = rg_valid_40;
      6'd41: valid__h102521 = rg_valid_41;
      6'd42: valid__h102521 = rg_valid_42;
      6'd43: valid__h102521 = rg_valid_43;
      6'd44: valid__h102521 = rg_valid_44;
      6'd45: valid__h102521 = rg_valid_45;
      6'd46: valid__h102521 = rg_valid_46;
      6'd47: valid__h102521 = rg_valid_47;
      6'd48: valid__h102521 = rg_valid_48;
      6'd49: valid__h102521 = rg_valid_49;
      6'd50: valid__h102521 = rg_valid_50;
      6'd51: valid__h102521 = rg_valid_51;
      6'd52: valid__h102521 = rg_valid_52;
      6'd53: valid__h102521 = rg_valid_53;
      6'd54: valid__h102521 = rg_valid_54;
      6'd55: valid__h102521 = rg_valid_55;
      6'd56: valid__h102521 = rg_valid_56;
      6'd57: valid__h102521 = rg_valid_57;
      6'd58: valid__h102521 = rg_valid_58;
      6'd59: valid__h102521 = rg_valid_59;
      6'd60: valid__h102521 = rg_valid_60;
      6'd61: valid__h102521 = rg_valid_61;
      6'd62: valid__h102521 = rg_valid_62;
      6'd63: valid__h102521 = rg_valid_63;
    endcase
  end
  always@(rg_fbwriteback or
	  fb_valid_0 or fb_valid_1 or fb_valid_2 or fb_valid_3)
  begin
    case (rg_fbwriteback)
      2'd0:
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 =
	      fb_valid_0;
      2'd1:
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 =
	      fb_valid_1;
      2'd2:
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 =
	      fb_valid_2;
      2'd3:
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 =
	      fb_valid_3;
    endcase
  end
  always@(rg_fbwriteback or fb_err_0 or fb_err_1 or fb_err_2 or fb_err_3)
  begin
    case (rg_fbwriteback)
      2'd0:
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 =
	      !fb_err_0;
      2'd1:
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 =
	      !fb_err_1;
      2'd2:
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 =
	      !fb_err_2;
      2'd3:
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 =
	      !fb_err_3;
    endcase
  end
  always@(SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090 or
	  replacement_v_count_0 or
	  replacement_v_count_1 or
	  replacement_v_count_2 or
	  replacement_v_count_3 or
	  replacement_v_count_4 or
	  replacement_v_count_5 or
	  replacement_v_count_6 or
	  replacement_v_count_7 or
	  replacement_v_count_8 or
	  replacement_v_count_9 or
	  replacement_v_count_10 or
	  replacement_v_count_11 or
	  replacement_v_count_12 or
	  replacement_v_count_13 or
	  replacement_v_count_14 or
	  replacement_v_count_15 or
	  replacement_v_count_16 or
	  replacement_v_count_17 or
	  replacement_v_count_18 or
	  replacement_v_count_19 or
	  replacement_v_count_20 or
	  replacement_v_count_21 or
	  replacement_v_count_22 or
	  replacement_v_count_23 or
	  replacement_v_count_24 or
	  replacement_v_count_25 or
	  replacement_v_count_26 or
	  replacement_v_count_27 or
	  replacement_v_count_28 or
	  replacement_v_count_29 or
	  replacement_v_count_30 or
	  replacement_v_count_31 or
	  replacement_v_count_32 or
	  replacement_v_count_33 or
	  replacement_v_count_34 or
	  replacement_v_count_35 or
	  replacement_v_count_36 or
	  replacement_v_count_37 or
	  replacement_v_count_38 or
	  replacement_v_count_39 or
	  replacement_v_count_40 or
	  replacement_v_count_41 or
	  replacement_v_count_42 or
	  replacement_v_count_43 or
	  replacement_v_count_44 or
	  replacement_v_count_45 or
	  replacement_v_count_46 or
	  replacement_v_count_47 or
	  replacement_v_count_48 or
	  replacement_v_count_49 or
	  replacement_v_count_50 or
	  replacement_v_count_51 or
	  replacement_v_count_52 or
	  replacement_v_count_53 or
	  replacement_v_count_54 or
	  replacement_v_count_55 or
	  replacement_v_count_56 or
	  replacement_v_count_57 or
	  replacement_v_count_58 or
	  replacement_v_count_59 or
	  replacement_v_count_60 or
	  replacement_v_count_61 or
	  replacement_v_count_62 or replacement_v_count_63)
  begin
    case (SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6])
      6'd0:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_0;
      6'd1:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_1;
      6'd2:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_2;
      6'd3:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_3;
      6'd4:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_4;
      6'd5:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_5;
      6'd6:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_6;
      6'd7:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_7;
      6'd8:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_8;
      6'd9:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_9;
      6'd10:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_10;
      6'd11:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_11;
      6'd12:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_12;
      6'd13:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_13;
      6'd14:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_14;
      6'd15:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_15;
      6'd16:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_16;
      6'd17:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_17;
      6'd18:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_18;
      6'd19:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_19;
      6'd20:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_20;
      6'd21:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_21;
      6'd22:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_22;
      6'd23:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_23;
      6'd24:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_24;
      6'd25:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_25;
      6'd26:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_26;
      6'd27:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_27;
      6'd28:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_28;
      6'd29:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_29;
      6'd30:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_30;
      6'd31:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_31;
      6'd32:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_32;
      6'd33:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_33;
      6'd34:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_34;
      6'd35:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_35;
      6'd36:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_36;
      6'd37:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_37;
      6'd38:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_38;
      6'd39:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_39;
      6'd40:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_40;
      6'd41:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_41;
      6'd42:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_42;
      6'd43:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_43;
      6'd44:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_44;
      6'd45:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_45;
      6'd46:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_46;
      6'd47:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_47;
      6'd48:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_48;
      6'd49:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_49;
      6'd50:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_50;
      6'd51:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_51;
      6'd52:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_52;
      6'd53:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_53;
      6'd54:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_54;
      6'd55:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_55;
      6'd56:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_56;
      6'd57:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_57;
      6'd58:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_58;
      6'd59:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_59;
      6'd60:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_60;
      6'd61:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_61;
      6'd62:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_62;
      6'd63:
	  SEL_ARR_replacement_v_count_0_122_replacement__ETC___d1187 =
	      replacement_v_count_63;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        data_arr_0_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	data_arr_1_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	data_arr_2_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	data_arr_3_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	ff_core_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      41'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ff_from_tlb_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      39'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ff_nc_read_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      34'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ff_read_mem_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	replacement_v_count_0 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_1 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_10 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_11 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_12 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_13 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_14 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_15 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_16 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_17 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_18 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_19 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_2 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_20 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_21 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_22 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_23 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_24 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_25 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_26 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_27 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_28 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_29 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_3 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_30 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_31 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_32 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_33 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_34 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_35 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_36 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_37 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_38 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_39 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_4 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_40 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_41 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_42 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_43 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_44 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_45 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_46 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_47 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_48 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_49 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_5 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_50 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_51 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_52 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_53 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_54 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_55 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_56 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_57 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_58 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_59 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_6 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_60 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_61 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_62 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_63 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_7 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_8 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	replacement_v_count_9 <= `BSV_ASSIGNMENT_DELAY 2'd3;
	rg_fb_err <= `BSV_ASSIGNMENT_DELAY 1'd0;
	tag_arr_0_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 20'd0;
	tag_arr_1_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 20'd0;
	tag_arr_2_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 20'd0;
	tag_arr_3_rg_output_0 <= `BSV_ASSIGNMENT_DELAY 20'd0;
      end
    else
      begin
        if (data_arr_0_rg_output_0_EN)
	  data_arr_0_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      data_arr_0_rg_output_0_D_IN;
	if (data_arr_1_rg_output_0_EN)
	  data_arr_1_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      data_arr_1_rg_output_0_D_IN;
	if (data_arr_2_rg_output_0_EN)
	  data_arr_2_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      data_arr_2_rg_output_0_D_IN;
	if (data_arr_3_rg_output_0_EN)
	  data_arr_3_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      data_arr_3_rg_output_0_D_IN;
	if (ff_core_response_rv_EN)
	  ff_core_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_core_response_rv_D_IN;
	if (ff_from_tlb_rv_EN)
	  ff_from_tlb_rv <= `BSV_ASSIGNMENT_DELAY ff_from_tlb_rv_D_IN;
	if (ff_nc_read_response_rv_EN)
	  ff_nc_read_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_nc_read_response_rv_D_IN;
	if (ff_read_mem_response_rv_EN)
	  ff_read_mem_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_read_mem_response_rv_D_IN;
	if (replacement_v_count_0_EN)
	  replacement_v_count_0 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_0_D_IN;
	if (replacement_v_count_1_EN)
	  replacement_v_count_1 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_1_D_IN;
	if (replacement_v_count_10_EN)
	  replacement_v_count_10 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_10_D_IN;
	if (replacement_v_count_11_EN)
	  replacement_v_count_11 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_11_D_IN;
	if (replacement_v_count_12_EN)
	  replacement_v_count_12 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_12_D_IN;
	if (replacement_v_count_13_EN)
	  replacement_v_count_13 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_13_D_IN;
	if (replacement_v_count_14_EN)
	  replacement_v_count_14 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_14_D_IN;
	if (replacement_v_count_15_EN)
	  replacement_v_count_15 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_15_D_IN;
	if (replacement_v_count_16_EN)
	  replacement_v_count_16 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_16_D_IN;
	if (replacement_v_count_17_EN)
	  replacement_v_count_17 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_17_D_IN;
	if (replacement_v_count_18_EN)
	  replacement_v_count_18 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_18_D_IN;
	if (replacement_v_count_19_EN)
	  replacement_v_count_19 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_19_D_IN;
	if (replacement_v_count_2_EN)
	  replacement_v_count_2 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_2_D_IN;
	if (replacement_v_count_20_EN)
	  replacement_v_count_20 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_20_D_IN;
	if (replacement_v_count_21_EN)
	  replacement_v_count_21 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_21_D_IN;
	if (replacement_v_count_22_EN)
	  replacement_v_count_22 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_22_D_IN;
	if (replacement_v_count_23_EN)
	  replacement_v_count_23 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_23_D_IN;
	if (replacement_v_count_24_EN)
	  replacement_v_count_24 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_24_D_IN;
	if (replacement_v_count_25_EN)
	  replacement_v_count_25 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_25_D_IN;
	if (replacement_v_count_26_EN)
	  replacement_v_count_26 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_26_D_IN;
	if (replacement_v_count_27_EN)
	  replacement_v_count_27 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_27_D_IN;
	if (replacement_v_count_28_EN)
	  replacement_v_count_28 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_28_D_IN;
	if (replacement_v_count_29_EN)
	  replacement_v_count_29 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_29_D_IN;
	if (replacement_v_count_3_EN)
	  replacement_v_count_3 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_3_D_IN;
	if (replacement_v_count_30_EN)
	  replacement_v_count_30 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_30_D_IN;
	if (replacement_v_count_31_EN)
	  replacement_v_count_31 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_31_D_IN;
	if (replacement_v_count_32_EN)
	  replacement_v_count_32 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_32_D_IN;
	if (replacement_v_count_33_EN)
	  replacement_v_count_33 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_33_D_IN;
	if (replacement_v_count_34_EN)
	  replacement_v_count_34 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_34_D_IN;
	if (replacement_v_count_35_EN)
	  replacement_v_count_35 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_35_D_IN;
	if (replacement_v_count_36_EN)
	  replacement_v_count_36 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_36_D_IN;
	if (replacement_v_count_37_EN)
	  replacement_v_count_37 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_37_D_IN;
	if (replacement_v_count_38_EN)
	  replacement_v_count_38 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_38_D_IN;
	if (replacement_v_count_39_EN)
	  replacement_v_count_39 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_39_D_IN;
	if (replacement_v_count_4_EN)
	  replacement_v_count_4 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_4_D_IN;
	if (replacement_v_count_40_EN)
	  replacement_v_count_40 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_40_D_IN;
	if (replacement_v_count_41_EN)
	  replacement_v_count_41 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_41_D_IN;
	if (replacement_v_count_42_EN)
	  replacement_v_count_42 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_42_D_IN;
	if (replacement_v_count_43_EN)
	  replacement_v_count_43 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_43_D_IN;
	if (replacement_v_count_44_EN)
	  replacement_v_count_44 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_44_D_IN;
	if (replacement_v_count_45_EN)
	  replacement_v_count_45 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_45_D_IN;
	if (replacement_v_count_46_EN)
	  replacement_v_count_46 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_46_D_IN;
	if (replacement_v_count_47_EN)
	  replacement_v_count_47 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_47_D_IN;
	if (replacement_v_count_48_EN)
	  replacement_v_count_48 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_48_D_IN;
	if (replacement_v_count_49_EN)
	  replacement_v_count_49 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_49_D_IN;
	if (replacement_v_count_5_EN)
	  replacement_v_count_5 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_5_D_IN;
	if (replacement_v_count_50_EN)
	  replacement_v_count_50 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_50_D_IN;
	if (replacement_v_count_51_EN)
	  replacement_v_count_51 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_51_D_IN;
	if (replacement_v_count_52_EN)
	  replacement_v_count_52 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_52_D_IN;
	if (replacement_v_count_53_EN)
	  replacement_v_count_53 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_53_D_IN;
	if (replacement_v_count_54_EN)
	  replacement_v_count_54 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_54_D_IN;
	if (replacement_v_count_55_EN)
	  replacement_v_count_55 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_55_D_IN;
	if (replacement_v_count_56_EN)
	  replacement_v_count_56 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_56_D_IN;
	if (replacement_v_count_57_EN)
	  replacement_v_count_57 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_57_D_IN;
	if (replacement_v_count_58_EN)
	  replacement_v_count_58 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_58_D_IN;
	if (replacement_v_count_59_EN)
	  replacement_v_count_59 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_59_D_IN;
	if (replacement_v_count_6_EN)
	  replacement_v_count_6 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_6_D_IN;
	if (replacement_v_count_60_EN)
	  replacement_v_count_60 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_60_D_IN;
	if (replacement_v_count_61_EN)
	  replacement_v_count_61 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_61_D_IN;
	if (replacement_v_count_62_EN)
	  replacement_v_count_62 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_62_D_IN;
	if (replacement_v_count_63_EN)
	  replacement_v_count_63 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_63_D_IN;
	if (replacement_v_count_7_EN)
	  replacement_v_count_7 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_7_D_IN;
	if (replacement_v_count_8_EN)
	  replacement_v_count_8 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_8_D_IN;
	if (replacement_v_count_9_EN)
	  replacement_v_count_9 <= `BSV_ASSIGNMENT_DELAY
	      replacement_v_count_9_D_IN;
	if (rg_fb_err_EN) rg_fb_err <= `BSV_ASSIGNMENT_DELAY rg_fb_err_D_IN;
	if (tag_arr_0_rg_output_0_EN)
	  tag_arr_0_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      tag_arr_0_rg_output_0_D_IN;
	if (tag_arr_1_rg_output_0_EN)
	  tag_arr_1_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      tag_arr_1_rg_output_0_D_IN;
	if (tag_arr_2_rg_output_0_EN)
	  tag_arr_2_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      tag_arr_2_rg_output_0_D_IN;
	if (tag_arr_3_rg_output_0_EN)
	  tag_arr_3_rg_output_0 <= `BSV_ASSIGNMENT_DELAY
	      tag_arr_3_rg_output_0_D_IN;
      end
  end

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      fb_addr_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
      fb_addr_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
      fb_addr_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
      fb_addr_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
      fb_dataline_0 <= `BSV_ASSIGNMENT_DELAY 512'd0;
      fb_dataline_1 <= `BSV_ASSIGNMENT_DELAY 512'd0;
      fb_dataline_2 <= `BSV_ASSIGNMENT_DELAY 512'd0;
      fb_dataline_3 <= `BSV_ASSIGNMENT_DELAY 512'd0;
      fb_enables_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
      fb_enables_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
      fb_enables_2 <= `BSV_ASSIGNMENT_DELAY 16'd0;
      fb_enables_3 <= `BSV_ASSIGNMENT_DELAY 16'd0;
      fb_err_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_err_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_err_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_err_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_valid_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_valid_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_valid_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      fb_valid_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_fbfillenable <= `BSV_ASSIGNMENT_DELAY 16'd0;
      rg_fbmissallocate <= `BSV_ASSIGNMENT_DELAY 2'd0;
      rg_fbwriteback <= `BSV_ASSIGNMENT_DELAY 2'd0;
      rg_fence_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_latest_index <= `BSV_ASSIGNMENT_DELAY 6'd0;
      rg_miss_ongoing <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_polling <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_replaylatest <= `BSV_ASSIGNMENT_DELAY 1'd0;
      rg_valid_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_1 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_10 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_11 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_12 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_13 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_14 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_15 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_16 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_17 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_18 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_19 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_2 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_20 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_21 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_22 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_23 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_24 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_25 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_26 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_27 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_28 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_29 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_3 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_30 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_31 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_32 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_33 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_34 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_35 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_36 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_37 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_38 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_39 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_4 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_40 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_41 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_42 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_43 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_44 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_45 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_46 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_47 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_48 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_49 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_5 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_50 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_51 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_52 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_53 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_54 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_55 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_56 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_57 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_58 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_59 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_6 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_60 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_61 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_62 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_63 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_7 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_8 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      rg_valid_9 <= `BSV_ASSIGNMENT_DELAY 4'd0;
    end
  else
    begin
      if (fb_addr_0_EN) fb_addr_0 <= `BSV_ASSIGNMENT_DELAY fb_addr_0_D_IN;
      if (fb_addr_1_EN) fb_addr_1 <= `BSV_ASSIGNMENT_DELAY fb_addr_1_D_IN;
      if (fb_addr_2_EN) fb_addr_2 <= `BSV_ASSIGNMENT_DELAY fb_addr_2_D_IN;
      if (fb_addr_3_EN) fb_addr_3 <= `BSV_ASSIGNMENT_DELAY fb_addr_3_D_IN;
      if (fb_dataline_0_EN)
	fb_dataline_0 <= `BSV_ASSIGNMENT_DELAY fb_dataline_0_D_IN;
      if (fb_dataline_1_EN)
	fb_dataline_1 <= `BSV_ASSIGNMENT_DELAY fb_dataline_1_D_IN;
      if (fb_dataline_2_EN)
	fb_dataline_2 <= `BSV_ASSIGNMENT_DELAY fb_dataline_2_D_IN;
      if (fb_dataline_3_EN)
	fb_dataline_3 <= `BSV_ASSIGNMENT_DELAY fb_dataline_3_D_IN;
      if (fb_enables_0_EN)
	fb_enables_0 <= `BSV_ASSIGNMENT_DELAY fb_enables_0_D_IN;
      if (fb_enables_1_EN)
	fb_enables_1 <= `BSV_ASSIGNMENT_DELAY fb_enables_1_D_IN;
      if (fb_enables_2_EN)
	fb_enables_2 <= `BSV_ASSIGNMENT_DELAY fb_enables_2_D_IN;
      if (fb_enables_3_EN)
	fb_enables_3 <= `BSV_ASSIGNMENT_DELAY fb_enables_3_D_IN;
      if (fb_err_0_EN) fb_err_0 <= `BSV_ASSIGNMENT_DELAY fb_err_0_D_IN;
      if (fb_err_1_EN) fb_err_1 <= `BSV_ASSIGNMENT_DELAY fb_err_1_D_IN;
      if (fb_err_2_EN) fb_err_2 <= `BSV_ASSIGNMENT_DELAY fb_err_2_D_IN;
      if (fb_err_3_EN) fb_err_3 <= `BSV_ASSIGNMENT_DELAY fb_err_3_D_IN;
      if (fb_valid_0_EN) fb_valid_0 <= `BSV_ASSIGNMENT_DELAY fb_valid_0_D_IN;
      if (fb_valid_1_EN) fb_valid_1 <= `BSV_ASSIGNMENT_DELAY fb_valid_1_D_IN;
      if (fb_valid_2_EN) fb_valid_2 <= `BSV_ASSIGNMENT_DELAY fb_valid_2_D_IN;
      if (fb_valid_3_EN) fb_valid_3 <= `BSV_ASSIGNMENT_DELAY fb_valid_3_D_IN;
      if (rg_fbfillenable_EN)
	rg_fbfillenable <= `BSV_ASSIGNMENT_DELAY rg_fbfillenable_D_IN;
      if (rg_fbmissallocate_EN)
	rg_fbmissallocate <= `BSV_ASSIGNMENT_DELAY rg_fbmissallocate_D_IN;
      if (rg_fbwriteback_EN)
	rg_fbwriteback <= `BSV_ASSIGNMENT_DELAY rg_fbwriteback_D_IN;
      if (rg_fence_stall_EN)
	rg_fence_stall <= `BSV_ASSIGNMENT_DELAY rg_fence_stall_D_IN;
      if (rg_latest_index_EN)
	rg_latest_index <= `BSV_ASSIGNMENT_DELAY rg_latest_index_D_IN;
      if (rg_miss_ongoing_EN)
	rg_miss_ongoing <= `BSV_ASSIGNMENT_DELAY rg_miss_ongoing_D_IN;
      if (rg_polling_EN) rg_polling <= `BSV_ASSIGNMENT_DELAY rg_polling_D_IN;
      if (rg_replaylatest_EN)
	rg_replaylatest <= `BSV_ASSIGNMENT_DELAY rg_replaylatest_D_IN;
      if (rg_valid_0_EN) rg_valid_0 <= `BSV_ASSIGNMENT_DELAY rg_valid_0_D_IN;
      if (rg_valid_1_EN) rg_valid_1 <= `BSV_ASSIGNMENT_DELAY rg_valid_1_D_IN;
      if (rg_valid_10_EN)
	rg_valid_10 <= `BSV_ASSIGNMENT_DELAY rg_valid_10_D_IN;
      if (rg_valid_11_EN)
	rg_valid_11 <= `BSV_ASSIGNMENT_DELAY rg_valid_11_D_IN;
      if (rg_valid_12_EN)
	rg_valid_12 <= `BSV_ASSIGNMENT_DELAY rg_valid_12_D_IN;
      if (rg_valid_13_EN)
	rg_valid_13 <= `BSV_ASSIGNMENT_DELAY rg_valid_13_D_IN;
      if (rg_valid_14_EN)
	rg_valid_14 <= `BSV_ASSIGNMENT_DELAY rg_valid_14_D_IN;
      if (rg_valid_15_EN)
	rg_valid_15 <= `BSV_ASSIGNMENT_DELAY rg_valid_15_D_IN;
      if (rg_valid_16_EN)
	rg_valid_16 <= `BSV_ASSIGNMENT_DELAY rg_valid_16_D_IN;
      if (rg_valid_17_EN)
	rg_valid_17 <= `BSV_ASSIGNMENT_DELAY rg_valid_17_D_IN;
      if (rg_valid_18_EN)
	rg_valid_18 <= `BSV_ASSIGNMENT_DELAY rg_valid_18_D_IN;
      if (rg_valid_19_EN)
	rg_valid_19 <= `BSV_ASSIGNMENT_DELAY rg_valid_19_D_IN;
      if (rg_valid_2_EN) rg_valid_2 <= `BSV_ASSIGNMENT_DELAY rg_valid_2_D_IN;
      if (rg_valid_20_EN)
	rg_valid_20 <= `BSV_ASSIGNMENT_DELAY rg_valid_20_D_IN;
      if (rg_valid_21_EN)
	rg_valid_21 <= `BSV_ASSIGNMENT_DELAY rg_valid_21_D_IN;
      if (rg_valid_22_EN)
	rg_valid_22 <= `BSV_ASSIGNMENT_DELAY rg_valid_22_D_IN;
      if (rg_valid_23_EN)
	rg_valid_23 <= `BSV_ASSIGNMENT_DELAY rg_valid_23_D_IN;
      if (rg_valid_24_EN)
	rg_valid_24 <= `BSV_ASSIGNMENT_DELAY rg_valid_24_D_IN;
      if (rg_valid_25_EN)
	rg_valid_25 <= `BSV_ASSIGNMENT_DELAY rg_valid_25_D_IN;
      if (rg_valid_26_EN)
	rg_valid_26 <= `BSV_ASSIGNMENT_DELAY rg_valid_26_D_IN;
      if (rg_valid_27_EN)
	rg_valid_27 <= `BSV_ASSIGNMENT_DELAY rg_valid_27_D_IN;
      if (rg_valid_28_EN)
	rg_valid_28 <= `BSV_ASSIGNMENT_DELAY rg_valid_28_D_IN;
      if (rg_valid_29_EN)
	rg_valid_29 <= `BSV_ASSIGNMENT_DELAY rg_valid_29_D_IN;
      if (rg_valid_3_EN) rg_valid_3 <= `BSV_ASSIGNMENT_DELAY rg_valid_3_D_IN;
      if (rg_valid_30_EN)
	rg_valid_30 <= `BSV_ASSIGNMENT_DELAY rg_valid_30_D_IN;
      if (rg_valid_31_EN)
	rg_valid_31 <= `BSV_ASSIGNMENT_DELAY rg_valid_31_D_IN;
      if (rg_valid_32_EN)
	rg_valid_32 <= `BSV_ASSIGNMENT_DELAY rg_valid_32_D_IN;
      if (rg_valid_33_EN)
	rg_valid_33 <= `BSV_ASSIGNMENT_DELAY rg_valid_33_D_IN;
      if (rg_valid_34_EN)
	rg_valid_34 <= `BSV_ASSIGNMENT_DELAY rg_valid_34_D_IN;
      if (rg_valid_35_EN)
	rg_valid_35 <= `BSV_ASSIGNMENT_DELAY rg_valid_35_D_IN;
      if (rg_valid_36_EN)
	rg_valid_36 <= `BSV_ASSIGNMENT_DELAY rg_valid_36_D_IN;
      if (rg_valid_37_EN)
	rg_valid_37 <= `BSV_ASSIGNMENT_DELAY rg_valid_37_D_IN;
      if (rg_valid_38_EN)
	rg_valid_38 <= `BSV_ASSIGNMENT_DELAY rg_valid_38_D_IN;
      if (rg_valid_39_EN)
	rg_valid_39 <= `BSV_ASSIGNMENT_DELAY rg_valid_39_D_IN;
      if (rg_valid_4_EN) rg_valid_4 <= `BSV_ASSIGNMENT_DELAY rg_valid_4_D_IN;
      if (rg_valid_40_EN)
	rg_valid_40 <= `BSV_ASSIGNMENT_DELAY rg_valid_40_D_IN;
      if (rg_valid_41_EN)
	rg_valid_41 <= `BSV_ASSIGNMENT_DELAY rg_valid_41_D_IN;
      if (rg_valid_42_EN)
	rg_valid_42 <= `BSV_ASSIGNMENT_DELAY rg_valid_42_D_IN;
      if (rg_valid_43_EN)
	rg_valid_43 <= `BSV_ASSIGNMENT_DELAY rg_valid_43_D_IN;
      if (rg_valid_44_EN)
	rg_valid_44 <= `BSV_ASSIGNMENT_DELAY rg_valid_44_D_IN;
      if (rg_valid_45_EN)
	rg_valid_45 <= `BSV_ASSIGNMENT_DELAY rg_valid_45_D_IN;
      if (rg_valid_46_EN)
	rg_valid_46 <= `BSV_ASSIGNMENT_DELAY rg_valid_46_D_IN;
      if (rg_valid_47_EN)
	rg_valid_47 <= `BSV_ASSIGNMENT_DELAY rg_valid_47_D_IN;
      if (rg_valid_48_EN)
	rg_valid_48 <= `BSV_ASSIGNMENT_DELAY rg_valid_48_D_IN;
      if (rg_valid_49_EN)
	rg_valid_49 <= `BSV_ASSIGNMENT_DELAY rg_valid_49_D_IN;
      if (rg_valid_5_EN) rg_valid_5 <= `BSV_ASSIGNMENT_DELAY rg_valid_5_D_IN;
      if (rg_valid_50_EN)
	rg_valid_50 <= `BSV_ASSIGNMENT_DELAY rg_valid_50_D_IN;
      if (rg_valid_51_EN)
	rg_valid_51 <= `BSV_ASSIGNMENT_DELAY rg_valid_51_D_IN;
      if (rg_valid_52_EN)
	rg_valid_52 <= `BSV_ASSIGNMENT_DELAY rg_valid_52_D_IN;
      if (rg_valid_53_EN)
	rg_valid_53 <= `BSV_ASSIGNMENT_DELAY rg_valid_53_D_IN;
      if (rg_valid_54_EN)
	rg_valid_54 <= `BSV_ASSIGNMENT_DELAY rg_valid_54_D_IN;
      if (rg_valid_55_EN)
	rg_valid_55 <= `BSV_ASSIGNMENT_DELAY rg_valid_55_D_IN;
      if (rg_valid_56_EN)
	rg_valid_56 <= `BSV_ASSIGNMENT_DELAY rg_valid_56_D_IN;
      if (rg_valid_57_EN)
	rg_valid_57 <= `BSV_ASSIGNMENT_DELAY rg_valid_57_D_IN;
      if (rg_valid_58_EN)
	rg_valid_58 <= `BSV_ASSIGNMENT_DELAY rg_valid_58_D_IN;
      if (rg_valid_59_EN)
	rg_valid_59 <= `BSV_ASSIGNMENT_DELAY rg_valid_59_D_IN;
      if (rg_valid_6_EN) rg_valid_6 <= `BSV_ASSIGNMENT_DELAY rg_valid_6_D_IN;
      if (rg_valid_60_EN)
	rg_valid_60 <= `BSV_ASSIGNMENT_DELAY rg_valid_60_D_IN;
      if (rg_valid_61_EN)
	rg_valid_61 <= `BSV_ASSIGNMENT_DELAY rg_valid_61_D_IN;
      if (rg_valid_62_EN)
	rg_valid_62 <= `BSV_ASSIGNMENT_DELAY rg_valid_62_D_IN;
      if (rg_valid_63_EN)
	rg_valid_63 <= `BSV_ASSIGNMENT_DELAY rg_valid_63_D_IN;
      if (rg_valid_7_EN) rg_valid_7 <= `BSV_ASSIGNMENT_DELAY rg_valid_7_D_IN;
      if (rg_valid_8_EN) rg_valid_8 <= `BSV_ASSIGNMENT_DELAY rg_valid_8_D_IN;
      if (rg_valid_9_EN) rg_valid_9 <= `BSV_ASSIGNMENT_DELAY rg_valid_9_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    data_arr_0_rg_output_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    data_arr_1_rg_output_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    data_arr_2_rg_output_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    data_arr_3_rg_output_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fb_addr_0 = 32'hAAAAAAAA;
    fb_addr_1 = 32'hAAAAAAAA;
    fb_addr_2 = 32'hAAAAAAAA;
    fb_addr_3 = 32'hAAAAAAAA;
    fb_dataline_0 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fb_dataline_1 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fb_dataline_2 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fb_dataline_3 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fb_enables_0 = 16'hAAAA;
    fb_enables_1 = 16'hAAAA;
    fb_enables_2 = 16'hAAAA;
    fb_enables_3 = 16'hAAAA;
    fb_err_0 = 1'h0;
    fb_err_1 = 1'h0;
    fb_err_2 = 1'h0;
    fb_err_3 = 1'h0;
    fb_valid_0 = 1'h0;
    fb_valid_1 = 1'h0;
    fb_valid_2 = 1'h0;
    fb_valid_3 = 1'h0;
    ff_core_response_rv = 42'h2AAAAAAAAAA;
    ff_from_tlb_rv = 40'hAAAAAAAAAA;
    ff_nc_read_response_rv = 35'h2AAAAAAAA;
    ff_read_mem_response_rv = 67'h2AAAAAAAAAAAAAAAA;
    replacement_v_count_0 = 2'h2;
    replacement_v_count_1 = 2'h2;
    replacement_v_count_10 = 2'h2;
    replacement_v_count_11 = 2'h2;
    replacement_v_count_12 = 2'h2;
    replacement_v_count_13 = 2'h2;
    replacement_v_count_14 = 2'h2;
    replacement_v_count_15 = 2'h2;
    replacement_v_count_16 = 2'h2;
    replacement_v_count_17 = 2'h2;
    replacement_v_count_18 = 2'h2;
    replacement_v_count_19 = 2'h2;
    replacement_v_count_2 = 2'h2;
    replacement_v_count_20 = 2'h2;
    replacement_v_count_21 = 2'h2;
    replacement_v_count_22 = 2'h2;
    replacement_v_count_23 = 2'h2;
    replacement_v_count_24 = 2'h2;
    replacement_v_count_25 = 2'h2;
    replacement_v_count_26 = 2'h2;
    replacement_v_count_27 = 2'h2;
    replacement_v_count_28 = 2'h2;
    replacement_v_count_29 = 2'h2;
    replacement_v_count_3 = 2'h2;
    replacement_v_count_30 = 2'h2;
    replacement_v_count_31 = 2'h2;
    replacement_v_count_32 = 2'h2;
    replacement_v_count_33 = 2'h2;
    replacement_v_count_34 = 2'h2;
    replacement_v_count_35 = 2'h2;
    replacement_v_count_36 = 2'h2;
    replacement_v_count_37 = 2'h2;
    replacement_v_count_38 = 2'h2;
    replacement_v_count_39 = 2'h2;
    replacement_v_count_4 = 2'h2;
    replacement_v_count_40 = 2'h2;
    replacement_v_count_41 = 2'h2;
    replacement_v_count_42 = 2'h2;
    replacement_v_count_43 = 2'h2;
    replacement_v_count_44 = 2'h2;
    replacement_v_count_45 = 2'h2;
    replacement_v_count_46 = 2'h2;
    replacement_v_count_47 = 2'h2;
    replacement_v_count_48 = 2'h2;
    replacement_v_count_49 = 2'h2;
    replacement_v_count_5 = 2'h2;
    replacement_v_count_50 = 2'h2;
    replacement_v_count_51 = 2'h2;
    replacement_v_count_52 = 2'h2;
    replacement_v_count_53 = 2'h2;
    replacement_v_count_54 = 2'h2;
    replacement_v_count_55 = 2'h2;
    replacement_v_count_56 = 2'h2;
    replacement_v_count_57 = 2'h2;
    replacement_v_count_58 = 2'h2;
    replacement_v_count_59 = 2'h2;
    replacement_v_count_6 = 2'h2;
    replacement_v_count_60 = 2'h2;
    replacement_v_count_61 = 2'h2;
    replacement_v_count_62 = 2'h2;
    replacement_v_count_63 = 2'h2;
    replacement_v_count_7 = 2'h2;
    replacement_v_count_8 = 2'h2;
    replacement_v_count_9 = 2'h2;
    rg_fb_err = 1'h0;
    rg_fbfillenable = 16'hAAAA;
    rg_fbmissallocate = 2'h2;
    rg_fbwriteback = 2'h2;
    rg_fence_stall = 1'h0;
    rg_latest_index = 6'h2A;
    rg_miss_ongoing = 1'h0;
    rg_polling = 1'h0;
    rg_replaylatest = 1'h0;
    rg_valid_0 = 4'hA;
    rg_valid_1 = 4'hA;
    rg_valid_10 = 4'hA;
    rg_valid_11 = 4'hA;
    rg_valid_12 = 4'hA;
    rg_valid_13 = 4'hA;
    rg_valid_14 = 4'hA;
    rg_valid_15 = 4'hA;
    rg_valid_16 = 4'hA;
    rg_valid_17 = 4'hA;
    rg_valid_18 = 4'hA;
    rg_valid_19 = 4'hA;
    rg_valid_2 = 4'hA;
    rg_valid_20 = 4'hA;
    rg_valid_21 = 4'hA;
    rg_valid_22 = 4'hA;
    rg_valid_23 = 4'hA;
    rg_valid_24 = 4'hA;
    rg_valid_25 = 4'hA;
    rg_valid_26 = 4'hA;
    rg_valid_27 = 4'hA;
    rg_valid_28 = 4'hA;
    rg_valid_29 = 4'hA;
    rg_valid_3 = 4'hA;
    rg_valid_30 = 4'hA;
    rg_valid_31 = 4'hA;
    rg_valid_32 = 4'hA;
    rg_valid_33 = 4'hA;
    rg_valid_34 = 4'hA;
    rg_valid_35 = 4'hA;
    rg_valid_36 = 4'hA;
    rg_valid_37 = 4'hA;
    rg_valid_38 = 4'hA;
    rg_valid_39 = 4'hA;
    rg_valid_4 = 4'hA;
    rg_valid_40 = 4'hA;
    rg_valid_41 = 4'hA;
    rg_valid_42 = 4'hA;
    rg_valid_43 = 4'hA;
    rg_valid_44 = 4'hA;
    rg_valid_45 = 4'hA;
    rg_valid_46 = 4'hA;
    rg_valid_47 = 4'hA;
    rg_valid_48 = 4'hA;
    rg_valid_49 = 4'hA;
    rg_valid_5 = 4'hA;
    rg_valid_50 = 4'hA;
    rg_valid_51 = 4'hA;
    rg_valid_52 = 4'hA;
    rg_valid_53 = 4'hA;
    rg_valid_54 = 4'hA;
    rg_valid_55 = 4'hA;
    rg_valid_56 = 4'hA;
    rg_valid_57 = 4'hA;
    rg_valid_58 = 4'hA;
    rg_valid_59 = 4'hA;
    rg_valid_6 = 4'hA;
    rg_valid_60 = 4'hA;
    rg_valid_61 = 4'hA;
    rg_valid_62 = 4'hA;
    rg_valid_63 = 4'hA;
    rg_valid_7 = 4'hA;
    rg_valid_8 = 4'hA;
    rg_valid_9 = 4'hA;
    tag_arr_0_rg_output_0 = 20'hAAAAA;
    tag_arr_1_rg_output_0 = 20'hAAAAA;
    tag_arr_2_rg_output_0 = 20'hAAAAA;
    tag_arr_3_rg_output_0 = 20'hAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put)
	begin
	  TASK_testplusargs___d1420 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put)
	begin
	  TASK_testplusargs___d1421 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put)
	begin
	  TASK_testplusargs___d1422 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1428 =
	(TASK_testplusargs___d1420 ||
	 TASK_testplusargs___d1421 && TASK_testplusargs___d1422) &&
	core_req_put[1];
    TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1430 =
	(TASK_testplusargs___d1420 ||
	 TASK_testplusargs___d1421 && TASK_testplusargs___d1422) &&
	!core_req_put[1];
    TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1432 =
	(TASK_testplusargs___d1420 ||
	 TASK_testplusargs___d1421 && TASK_testplusargs___d1422) &&
	core_req_put[0];
    TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1434 =
	(TASK_testplusargs___d1420 ||
	 TASK_testplusargs___d1421 && TASK_testplusargs___d1422) &&
	!core_req_put[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put)
	begin
	  v__h117667 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("[%10d", v__h117667, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("ICACHE : Receiving request: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("ICache_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("'h%h", core_req_put[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("'h%h", core_req_put[3:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1428)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1430)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write(", ", "sfence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1432)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  TASK_testplusargs_420_OR_TASK_testplusargs_421_ETC___d1434)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_core_req_put &&
	  (TASK_testplusargs___d1420 ||
	   TASK_testplusargs___d1421 && TASK_testplusargs___d1422))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d13 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d14 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d15 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  v__h15379 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("[%10d", v__h15379, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("ICACHE: fbfull:%b fbempty:%b rgfbwb:%d rgfbmiss:%d",
	       fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25,
	       NOT_fb_valid_0_9_6_AND_NOT_fb_valid_1_0_7_AND__ETC___d32,
	       rg_fbwriteback,
	       rg_fbmissallocate);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d35 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d36 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  TASK_testplusargs___d37 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable)
	begin
	  v__h16138 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d35 ||
	   TASK_testplusargs___d36 && TASK_testplusargs___d37))
	$write("[%10d", v__h16138, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d35 ||
	   TASK_testplusargs___d36 && TASK_testplusargs___d37))
	$write("ICACHE: Enable:", cache_enable_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_cache_enable &&
	  (TASK_testplusargs___d35 ||
	   TASK_testplusargs___d36 && TASK_testplusargs___d37))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation)
	begin
	  TASK_testplusargs___d49 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation)
	begin
	  TASK_testplusargs___d50 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation)
	begin
	  TASK_testplusargs___d51 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation)
	begin
	  v__h23885 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation &&
	  (TASK_testplusargs___d49 ||
	   TASK_testplusargs___d50 && TASK_testplusargs___d51))
	$write("[%10d", v__h23885, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation &&
	  (TASK_testplusargs___d49 ||
	   TASK_testplusargs___d50 && TASK_testplusargs___d51))
	$write("FEnce operation in progress");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fence_operation &&
	  (TASK_testplusargs___d49 ||
	   TASK_testplusargs___d50 && TASK_testplusargs___d51))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (ff_nc_read_response_rv_port1__read[34] &&
	  !ff_nc_read_response_rv_port1__read[1])
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 924, column 37\nWhy is IO response a burst?");
    if (RST_N != `BSV_RESET_VALUE)
      if (ff_nc_read_response_rv_port1__read[34] &&
	  !ff_nc_read_response_rv_port1__read[1])
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest)
	begin
	  TASK_testplusargs___d1412 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest)
	begin
	  TASK_testplusargs___d1413 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest)
	begin
	  TASK_testplusargs___d1414 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest)
	begin
	  v__h116441 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest &&
	  (TASK_testplusargs___d1412 ||
	   TASK_testplusargs___d1413 && TASK_testplusargs___d1414))
	$write("[%10d", v__h116441, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest &&
	  (TASK_testplusargs___d1412 ||
	   TASK_testplusargs___d1413 && TASK_testplusargs___d1414))
	$write("ICACHE : Replaying last request for index:%d",
	       rg_latest_index);
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_replaylatest &&
	  (TASK_testplusargs___d1412 ||
	   TASK_testplusargs___d1413 && TASK_testplusargs___d1414))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d258 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d259 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d260 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d265 =
	(TASK_testplusargs___d258 ||
	 TASK_testplusargs___d259 && TASK_testplusargs___d260) &&
	ff_core_request_D_OUT[0];
    TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d267 =
	(TASK_testplusargs___d258 ||
	 TASK_testplusargs___d259 && TASK_testplusargs___d260) &&
	!ff_core_request_D_OUT[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  v__h27534 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("[%10d", v__h27534, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("ICACHE : TAGCMP for Req: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("ICache_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("'h%h", ff_core_request_D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("'h%h", ff_core_request_D_OUT[3:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write(", ", "sfence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d265)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  TASK_testplusargs_58_OR_TASK_testplusargs_59_A_ETC___d267)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d258 ||
	   TASK_testplusargs___d259 && TASK_testplusargs___d260))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d268 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d269 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d270 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d275 =
	(TASK_testplusargs___d268 ||
	 TASK_testplusargs___d269 && TASK_testplusargs___d270) &&
	ff_from_tlb_rv_port1__read[6];
    TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d276 =
	(TASK_testplusargs___d268 ||
	 TASK_testplusargs___d269 && TASK_testplusargs___d270) &&
	!ff_from_tlb_rv_port1__read[6];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  v__h27709 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("[%10d", v__h27709, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("ICACHE : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("ITLB_core_response { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("'h%h", ff_from_tlb_rv_port1__read[38:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d275)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  TASK_testplusargs_68_OR_TASK_testplusargs_69_A_ETC___d276)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("'h%h", ff_from_tlb_rv_port1__read[5:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d268 ||
	   TASK_testplusargs___d269 && TASK_testplusargs___d270))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d277 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d278 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  TASK_testplusargs___d279 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match)
	begin
	  v__h27870 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d277 ||
	   TASK_testplusargs___d278 && TASK_testplusargs___d279))
	$write("[%10d", v__h27870, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d277 ||
	   TASK_testplusargs___d278 && TASK_testplusargs___d279))
	$write("ICACHE : TAGCMP Result. Hit:%b Hitline:%h",
	       hit__h25939,
	       hitline__h25940);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  (TASK_testplusargs___d277 ||
	   TASK_testplusargs___d278 && TASK_testplusargs___d279))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  NOT_0_CONCAT_IF_SEL_ARR_rg_valid_0_36_rg_valid_ETC___d291)
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 668, column 41\nMore than one way is a hit in the cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_tag_match &&
	  NOT_0_CONCAT_IF_SEL_ARR_rg_valid_0_36_rg_valid_ETC___d291)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d380 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d381 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d382 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d386 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	ff_core_request_D_OUT[0];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d387 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	!ff_core_request_D_OUT[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  v__h29383 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("[%10d", v__h29383, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("ICACHE : FB Polling for Req: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("ICache_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("'h%h", ff_core_request_D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("'h%h", ff_core_request_D_OUT[3:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write(", ", "sfence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d386)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d387)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d380 ||
	   TASK_testplusargs___d381 && TASK_testplusargs___d382))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d388 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d389 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  TASK_testplusargs___d390 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest)
	begin
	  v__h29556 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d388 ||
	   TASK_testplusargs___d389 && TASK_testplusargs___d390))
	$write("[%10d", v__h29556, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d388 ||
	   TASK_testplusargs___d389 && TASK_testplusargs___d390))
	$write("ICACHE : FP Polling Result. linehit:%b wordhit:%b",
	       fbhit__h28168 != 4'd0,
	       IF_fb_addr_3_96_BITS_31_TO_6_97_EQ_ff_from_tlb_ETC___d328);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  (TASK_testplusargs___d388 ||
	   TASK_testplusargs___d389 && TASK_testplusargs___d390))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  NOT_0_CONCAT_IF_fb_addr_3_96_BITS_31_TO_6_97_E_ETC___d406)
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 785, column 43\nMore than one line in FB is hit");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_check_fb_for_corerequest &&
	  NOT_0_CONCAT_IF_fb_addr_3_96_BITS_31_TO_6_97_E_ETC___d406)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core)
	begin
	  TASK_testplusargs___d86 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core)
	begin
	  TASK_testplusargs___d87 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core)
	begin
	  TASK_testplusargs___d88 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core)
	begin
	  v__h24222 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  (TASK_testplusargs___d86 ||
	   TASK_testplusargs___d87 && TASK_testplusargs___d88))
	$write("[%10d", v__h24222, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  (TASK_testplusargs___d86 ||
	   TASK_testplusargs___d87 && TASK_testplusargs___d88))
	$write("ICACHE: Sending Response word:%h for Addr:%h",
	       word__h24123,
	       ff_core_request_D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  (TASK_testplusargs___d86 ||
	   TASK_testplusargs___d87 && TASK_testplusargs___d88))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd0 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd0)
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 522, column 51\nCache and FB both are hit simultaneously");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd0 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 == 2'd0 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd0)
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 524, column 51\nIO and FB both are hit simultaneously");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 == 2'd0 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd0 &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 == 2'd0)
	$display("Dynamic assertion failed: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 526, column 51\nCache and IO both are hit simultaneously");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd0 &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 == 2'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core && WILL_FIRE_RL_fence_operation)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 476, column 10: (R0002)\n  Conflict-free rules RL_respond_to_core and RL_fence_operation called\n  conflicting methods deq and deq of module instance ff_core_request.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_respond_to_core && WILL_FIRE_RL_fence_operation)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 476, column 10: (R0002)\n  Conflict-free rules RL_respond_to_core and RL_fence_operation called\n  conflicting methods first and deq of module instance ff_core_request.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  (!cache_enable_c ||
	   ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429))
	begin
	  TASK_testplusargs___d432 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  (!cache_enable_c ||
	   ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429))
	begin
	  TASK_testplusargs___d433 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  (!cache_enable_c ||
	   ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429))
	begin
	  TASK_testplusargs___d434 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_cache_enable_wget__1_43_OR_ff_from_tlb__ETC___d437 =
	(!cache_enable_c ||
	 ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429) &&
	(TASK_testplusargs___d432 ||
	 TASK_testplusargs___d433 && TASK_testplusargs___d434);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  (!cache_enable_c ||
	   ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429))
	begin
	  v__h29997 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  NOT_wr_cache_enable_wget__1_43_OR_ff_from_tlb__ETC___d437)
	$write("[%10d", v__h29997, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  NOT_wr_cache_enable_wget__1_43_OR_ff_from_tlb__ETC___d437)
	$write("ICACHE : Sending IO Request for Addr:%h",
	       ff_from_tlb_rv_port1__read[38:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  NOT_wr_cache_enable_wget__1_43_OR_ff_from_tlb__ETC___d437)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d441 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d442 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d443 = $test$plusargs("l0");
	  #0;
	end
    wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d446 =
	cache_enable_c &&
	!ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 &&
	(TASK_testplusargs___d441 ||
	 TASK_testplusargs___d442 && TASK_testplusargs___d443);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  v__h30169 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d446)
	$write("[%10d", v__h30169, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d446)
	$write("ICACHE : Sending Line Request for Addr:%h",
	       ff_from_tlb_rv_port1__read[38:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d446)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d448 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d449 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  TASK_testplusargs___d450 = $test$plusargs("l1");
	  #0;
	end
    wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d453 =
	cache_enable_c &&
	!ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429 &&
	(TASK_testplusargs___d448 ||
	 TASK_testplusargs___d449 && TASK_testplusargs___d450);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__5_BITS_38_TO_7_74__ETC___d429)
	begin
	  v__h30314 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d453)
	$write("[%10d", v__h30314, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d453)
	$write("ICACHE : Allocating FBindex:", rg_fbmissallocate);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory &&
	  wr_cache_enable_wget__1_AND_NOT_ff_from_tlb_rv_ETC___d453)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && WILL_FIRE_RL_fence_operation &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 != 2'd0 &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd1 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd1 &&
	  fb_valid_1 &&
	  fb_valid_2 &&
	  fb_valid_3 &&
	  !rg_miss_ongoing &&
	  !wr_trap_from_tlb_whas &&
	  ff_fb_fillindex_FULL_N &&
	  ff_nc_read_request_FULL_N &&
	  ff_read_mem_request_FULL_N &&
	  ff_from_tlb_rv_port1__read[39] &&
	  EN_cache_enable)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 799, column 10: (R0002)\n  Conflict-free rules RL_request_to_memory and RL_fence_operation called\n  conflicting methods read and write of module instance fb_valid_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && WILL_FIRE_RL_fence_operation &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 != 2'd0 &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd1 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd1 &&
	  fb_valid_2 &&
	  fb_valid_3 &&
	  fb_valid_0 &&
	  !rg_miss_ongoing &&
	  !wr_trap_from_tlb_whas &&
	  ff_fb_fillindex_FULL_N &&
	  ff_nc_read_request_FULL_N &&
	  ff_read_mem_request_FULL_N &&
	  ff_from_tlb_rv_port1__read[39] &&
	  EN_cache_enable)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 799, column 10: (R0002)\n  Conflict-free rules RL_request_to_memory and RL_fence_operation called\n  conflicting methods read and write of module instance fb_valid_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && WILL_FIRE_RL_fence_operation &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 != 2'd0 &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd1 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd1 &&
	  fb_valid_3 &&
	  fb_valid_0 &&
	  fb_valid_1 &&
	  !rg_miss_ongoing &&
	  !wr_trap_from_tlb_whas &&
	  ff_fb_fillindex_FULL_N &&
	  ff_nc_read_request_FULL_N &&
	  ff_read_mem_request_FULL_N &&
	  ff_from_tlb_rv_port1__read[39] &&
	  EN_cache_enable)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 799, column 10: (R0002)\n  Conflict-free rules RL_request_to_memory and RL_fence_operation called\n  conflicting methods read and write of module instance fb_valid_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_request_to_memory && WILL_FIRE_RL_fence_operation &&
	  IF_wr_nc_response_whas__1_THEN_wr_nc_response__ETC___d73 != 2'd0 &&
	  IF_wr_ram_response_whas__2_THEN_wr_ram_respons_ETC___d64 == 2'd1 &&
	  IF_wr_fb_response_whas__6_THEN_wr_fb_response__ETC___d68 == 2'd1 &&
	  fb_valid_0 &&
	  fb_valid_1 &&
	  fb_valid_2 &&
	  !rg_miss_ongoing &&
	  !wr_trap_from_tlb_whas &&
	  ff_fb_fillindex_FULL_N &&
	  ff_nc_read_request_FULL_N &&
	  ff_read_mem_request_FULL_N &&
	  ff_from_tlb_rv_port1__read[39] &&
	  EN_cache_enable)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 799, column 10: (R0002)\n  Conflict-free rules RL_request_to_memory and RL_fence_operation called\n  conflicting methods read and write of module instance fb_valid_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117)
	begin
	  TASK_testplusargs___d1400 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117)
	begin
	  TASK_testplusargs___d1401 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117)
	begin
	  TASK_testplusargs___d1402 = $test$plusargs("l1");
	  #0;
	end
    SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1405 =
	SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	(TASK_testplusargs___d1400 ||
	 TASK_testplusargs___d1401 && TASK_testplusargs___d1402);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117)
	begin
	  v__h115266 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1405)
	$write("[%10d", v__h115266, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1405)
	$write("ICACHE : ReleaseFiring. rg_fbwb:%d index:%d tag:%h way:%d",
	       rg_fbwriteback,
	       SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[11:6],
	       SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1090[31:12],
	       v__h102518);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB &&
	  SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1405)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_respond_to_core &&
	  x__h102445 == 16'd65535 &&
	  !rg_replaylatest &&
	  !fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	  EN_core_req_put &&
	  !SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 &&
	  !rg_fence_stall &&
	  fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_respond_to_core called\n  conflicting methods notEmpty and deq of module instance ff_core_request.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	   SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 &&
	   fb_valid_3 &&
	   fb_valid_1 &&
	   fb_valid_2 ||
	   x__h102445 == 16'd65535 && !rg_replaylatest &&
	   !NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 &&
	   !rg_fence_stall &&
	   fb_valid_3 &&
	   fb_valid_1 &&
	   fb_valid_2) &&
	  _write_RL_request_to_memory_EN_fb_valid_0_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_valid_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	   SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 &&
	   fb_valid_3 &&
	   fb_valid_0 &&
	   fb_valid_2 ||
	   x__h102445 == 16'd65535 && !rg_replaylatest &&
	   !NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 &&
	   !rg_fence_stall &&
	   fb_valid_3 &&
	   fb_valid_0 &&
	   fb_valid_2) &&
	  _write_RL_request_to_memory_EN_fb_valid_1_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_valid_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	   SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 &&
	   fb_valid_3 &&
	   fb_valid_0 &&
	   fb_valid_1 ||
	   x__h102445 == 16'd65535 && !rg_replaylatest &&
	   !NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 &&
	   !rg_fence_stall &&
	   fb_valid_3 &&
	   fb_valid_0 &&
	   fb_valid_1) &&
	  _write_RL_request_to_memory_EN_fb_valid_2_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_valid_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (SEL_ARR_NOT_fb_err_0_75_112_NOT_fb_err_1_74_11_ETC___d1117 &&
	   SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d1093 &&
	   fb_valid_2 &&
	   fb_valid_0 &&
	   fb_valid_1 ||
	   x__h102445 == 16'd65535 && !rg_replaylatest &&
	   !NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 &&
	   !rg_fence_stall &&
	   fb_valid_2 &&
	   fb_valid_0 &&
	   fb_valid_1) &&
	  _write_RL_request_to_memory_EN_fb_valid_3_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_valid_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (rg_fbwriteback == 2'd0 ||
	   x__h102445 == 16'd65535 && rg_fbwriteback == 2'd0 &&
	   !rg_replaylatest &&
	   !fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	   !rg_fence_stall &&
	   SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	   (!ff_core_request_EMPTY_N || !EN_core_req_put) &&
	   fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103) &&
	  _write_RL_request_to_memory_EN_fb_valid_0_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_addr_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  rg_fbwriteback == 2'd0 &&
	  !rg_replaylatest &&
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	  (fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 ||
	   NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 ||
	   rg_fence_stall) &&
	  fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	  _write_RL_request_to_memory_EN_fb_valid_0_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_enables_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (rg_fbwriteback == 2'd1 ||
	   x__h102445 == 16'd65535 && rg_fbwriteback == 2'd1 &&
	   !rg_replaylatest &&
	   !fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	   !rg_fence_stall &&
	   SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	   (!ff_core_request_EMPTY_N || !EN_core_req_put) &&
	   fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103) &&
	  _write_RL_request_to_memory_EN_fb_valid_1_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_addr_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  rg_fbwriteback == 2'd1 &&
	  !rg_replaylatest &&
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	  (fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 ||
	   NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 ||
	   rg_fence_stall) &&
	  fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	  _write_RL_request_to_memory_EN_fb_valid_1_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_enables_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (rg_fbwriteback == 2'd2 ||
	   x__h102445 == 16'd65535 && rg_fbwriteback == 2'd2 &&
	   !rg_replaylatest &&
	   !fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	   !rg_fence_stall &&
	   SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	   (!ff_core_request_EMPTY_N || !EN_core_req_put) &&
	   fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103) &&
	  _write_RL_request_to_memory_EN_fb_valid_2_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_addr_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  rg_fbwriteback == 2'd2 &&
	  !rg_replaylatest &&
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	  (fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 ||
	   NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 ||
	   rg_fence_stall) &&
	  fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	  _write_RL_request_to_memory_EN_fb_valid_2_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_enables_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  (rg_fbwriteback == 2'd3 ||
	   x__h102445 == 16'd65535 && rg_fbwriteback == 2'd3 &&
	   !rg_replaylatest &&
	   !fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 &&
	   !rg_fence_stall &&
	   SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	   (!ff_core_request_EMPTY_N || !EN_core_req_put) &&
	   fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103) &&
	  _write_RL_request_to_memory_EN_fb_valid_3_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_addr_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_release_from_FB && WILL_FIRE_RL_request_to_memory &&
	  rg_fbwriteback == 2'd3 &&
	  !rg_replaylatest &&
	  SEL_ARR_fb_valid_0_9_fb_valid_1_0_fb_valid_2_1_ETC___d1106 &&
	  (fb_valid_0_9_AND_fb_valid_1_0_AND_fb_valid_2_1_ETC___d25 ||
	   NOT_ff_core_request_notEmpty__082_083_OR_NOT_w_ETC___d1095 ||
	   rg_fence_stall) &&
	  fb_valid_0_9_OR_fb_valid_1_0_OR_fb_valid_2_1_O_ETC___d1103 &&
	  _write_RL_request_to_memory_EN_fb_valid_3_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 937, column 10: (R0002)\n  Conflict-free rules RL_release_from_FB and RL_request_to_memory called\n  conflicting methods read and write of module instance fb_enables_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1057 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1058 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1059 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1063 =
	(TASK_testplusargs___d1057 ||
	 TASK_testplusargs___d1058 && TASK_testplusargs___d1059) &&
	ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1065 =
	(TASK_testplusargs___d1057 ||
	 TASK_testplusargs___d1058 && TASK_testplusargs___d1059) &&
	!ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1066 =
	(TASK_testplusargs___d1057 ||
	 TASK_testplusargs___d1058 && TASK_testplusargs___d1059) &&
	ff_read_mem_response_rv_port1__read[0];
    TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1068 =
	(TASK_testplusargs___d1057 ||
	 TASK_testplusargs___d1058 && TASK_testplusargs___d1059) &&
	!ff_read_mem_response_rv_port1__read[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  v__h101885 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write("[%10d", v__h101885, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write("ICACHE : Received from mem: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write("ICache_mem_response { ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write("'h%h", ff_read_mem_response_rv_port1__read[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write(", ", "last: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1063)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1065)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write(", ", "err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1066)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  TASK_testplusargs_057_OR_TASK_testplusargs_058_ETC___d1068)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1057 ||
	   TASK_testplusargs___d1058 && TASK_testplusargs___d1059))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1069 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1070 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  TASK_testplusargs___d1071 = $test$plusargs("l2");
	  #0;
	end
    __duses223 =
	TASK_testplusargs___d1069 ||
	TASK_testplusargs___d1070 && TASK_testplusargs___d1071 ||
	SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476 == 16'd0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response)
	begin
	  v__h102048 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1069 ||
	   TASK_testplusargs___d1070 && TASK_testplusargs___d1071))
	$write("[%10d", v__h102048, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1069 ||
	   TASK_testplusargs___d1070 && TASK_testplusargs___d1071))
	$write("ICACHE : Filling FB. fbindex:%d fb_addr:%h fb_data:%h fbenable:%h",
	       ff_fb_fillindex_D_OUT,
	       SEL_ARR_fb_addr_0_16_fb_addr_1_10_fb_addr_2_04_ETC___d479,
	       y__h34518,
	       SEL_ARR_fb_enables_0_20_fb_enables_1_14_fb_ena_ETC___d476);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  (TASK_testplusargs___d1069 ||
	   TASK_testplusargs___d1070 && TASK_testplusargs___d1071))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  __duses223 &&
	  ff_fb_fillindex_D_OUT == 2'd0 &&
	  _write_RL_request_to_memory_EN_fb_valid_0_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_addr_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  ff_fb_fillindex_D_OUT == 2'd0 &&
	  _write_RL_request_to_memory_EN_fb_valid_0_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_enables_0.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  __duses223 &&
	  ff_fb_fillindex_D_OUT == 2'd1 &&
	  _write_RL_request_to_memory_EN_fb_valid_1_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_addr_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  ff_fb_fillindex_D_OUT == 2'd1 &&
	  _write_RL_request_to_memory_EN_fb_valid_1_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_enables_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  __duses223 &&
	  ff_fb_fillindex_D_OUT == 2'd2 &&
	  _write_RL_request_to_memory_EN_fb_valid_2_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_addr_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  ff_fb_fillindex_D_OUT == 2'd2 &&
	  _write_RL_request_to_memory_EN_fb_valid_2_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_enables_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  __duses223 &&
	  ff_fb_fillindex_D_OUT == 2'd3 &&
	  _write_RL_request_to_memory_EN_fb_valid_3_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_addr_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_update_fb_with_memory_response &&
	  WILL_FIRE_RL_request_to_memory &&
	  ff_fb_fillindex_D_OUT == 2'd3 &&
	  _write_RL_request_to_memory_EN_fb_valid_3_wget)
	$display("Error: \"../base-sim/caches_mmu/src/icache/l1icache_vipt.bsv\", line 837, column 10: (R0002)\n  Conflict-free rules RL_update_fb_with_memory_response and\n  RL_request_to_memory called conflicting methods read and write of module\n  instance fb_enables_3.\n");
  end
  // synopsys translate_on
endmodule  // mkicache

