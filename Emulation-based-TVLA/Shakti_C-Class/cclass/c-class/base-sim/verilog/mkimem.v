//
// Generated by Bluespec Compiler, version 2021.07-1-gaf77efcd (build af77efcd)
//
// On Tue Dec  7 15:48:59 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_core_req_put               O     1
// core_resp_get                  O    41
// RDY_core_resp_get              O     1
// RDY_cache_enable               O     1 const
// read_mem_req_get               O    43 reg
// RDY_read_mem_req_get           O     1 reg
// RDY_read_mem_resp_put          O     1
// nc_read_req_get                O    43 reg
// RDY_nc_read_req_get            O     1 reg
// RDY_nc_read_resp_put           O     1
// request_to_ptw_get             O    66 reg
// RDY_request_to_ptw_get         O     1 reg
// RDY_response_frm_ptw_put       O     1
// RDY_ma_satp_from_csr           O     1 const
// RDY_ma_curr_priv               O     1 const
// mv_icache_perf_counters        O     5
// RDY_mv_icache_perf_counters    O     1 const
// mv_itlb_perf_counters          O     1
// RDY_mv_itlb_perf_counters      O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// core_req_put                   I    68
// cache_enable_c                 I     1
// read_mem_resp_put              I    66
// nc_read_resp_put               I    34
// response_frm_ptw_put           I    63
// ma_satp_from_csr_s             I    64
// ma_curr_priv_c                 I     2
// EN_core_req_put                I     1
// EN_cache_enable                I     1
// EN_read_mem_resp_put           I     1
// EN_nc_read_resp_put            I     1
// EN_response_frm_ptw_put        I     1
// EN_ma_satp_from_csr            I     1
// EN_ma_curr_priv                I     1
// EN_core_resp_get               I     1
// EN_read_mem_req_get            I     1
// EN_nc_read_req_get             I     1
// EN_request_to_ptw_get          I     1
//
// Combinational paths from inputs to outputs:
//   (core_req_put,
//    cache_enable_c,
//    nc_read_resp_put,
//    EN_core_req_put,
//    EN_cache_enable,
//    EN_nc_read_resp_put,
//    EN_ma_satp_from_csr,
//    EN_ma_curr_priv) -> mv_icache_perf_counters
//   (core_req_put,
//    ma_satp_from_csr_s,
//    ma_curr_priv_c,
//    EN_core_req_put,
//    EN_ma_satp_from_csr,
//    EN_ma_curr_priv) -> mv_itlb_perf_counters
//   (cache_enable_c,
//    nc_read_resp_put,
//    EN_cache_enable,
//    EN_nc_read_resp_put) -> RDY_core_resp_get
//   (cache_enable_c,
//    nc_read_resp_put,
//    EN_cache_enable,
//    EN_nc_read_resp_put) -> core_resp_get
//   (EN_ma_satp_from_csr, EN_ma_curr_priv) -> RDY_core_req_put
//   EN_ma_satp_from_csr -> RDY_response_frm_ptw_put
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkimem(CLK,
	      RST_N,

	      core_req_put,
	      EN_core_req_put,
	      RDY_core_req_put,

	      EN_core_resp_get,
	      core_resp_get,
	      RDY_core_resp_get,

	      cache_enable_c,
	      EN_cache_enable,
	      RDY_cache_enable,

	      EN_read_mem_req_get,
	      read_mem_req_get,
	      RDY_read_mem_req_get,

	      read_mem_resp_put,
	      EN_read_mem_resp_put,
	      RDY_read_mem_resp_put,

	      EN_nc_read_req_get,
	      nc_read_req_get,
	      RDY_nc_read_req_get,

	      nc_read_resp_put,
	      EN_nc_read_resp_put,
	      RDY_nc_read_resp_put,

	      EN_request_to_ptw_get,
	      request_to_ptw_get,
	      RDY_request_to_ptw_get,

	      response_frm_ptw_put,
	      EN_response_frm_ptw_put,
	      RDY_response_frm_ptw_put,

	      ma_satp_from_csr_s,
	      EN_ma_satp_from_csr,
	      RDY_ma_satp_from_csr,

	      ma_curr_priv_c,
	      EN_ma_curr_priv,
	      RDY_ma_curr_priv,

	      mv_icache_perf_counters,
	      RDY_mv_icache_perf_counters,

	      mv_itlb_perf_counters,
	      RDY_mv_itlb_perf_counters);
  input  CLK;
  input  RST_N;

  // action method core_req_put
  input  [67 : 0] core_req_put;
  input  EN_core_req_put;
  output RDY_core_req_put;

  // actionvalue method core_resp_get
  input  EN_core_resp_get;
  output [40 : 0] core_resp_get;
  output RDY_core_resp_get;

  // action method cache_enable
  input  cache_enable_c;
  input  EN_cache_enable;
  output RDY_cache_enable;

  // actionvalue method read_mem_req_get
  input  EN_read_mem_req_get;
  output [42 : 0] read_mem_req_get;
  output RDY_read_mem_req_get;

  // action method read_mem_resp_put
  input  [65 : 0] read_mem_resp_put;
  input  EN_read_mem_resp_put;
  output RDY_read_mem_resp_put;

  // actionvalue method nc_read_req_get
  input  EN_nc_read_req_get;
  output [42 : 0] nc_read_req_get;
  output RDY_nc_read_req_get;

  // action method nc_read_resp_put
  input  [33 : 0] nc_read_resp_put;
  input  EN_nc_read_resp_put;
  output RDY_nc_read_resp_put;

  // actionvalue method request_to_ptw_get
  input  EN_request_to_ptw_get;
  output [65 : 0] request_to_ptw_get;
  output RDY_request_to_ptw_get;

  // action method response_frm_ptw_put
  input  [62 : 0] response_frm_ptw_put;
  input  EN_response_frm_ptw_put;
  output RDY_response_frm_ptw_put;

  // action method ma_satp_from_csr
  input  [63 : 0] ma_satp_from_csr_s;
  input  EN_ma_satp_from_csr;
  output RDY_ma_satp_from_csr;

  // action method ma_curr_priv
  input  [1 : 0] ma_curr_priv_c;
  input  EN_ma_curr_priv;
  output RDY_ma_curr_priv;

  // value method mv_icache_perf_counters
  output [4 : 0] mv_icache_perf_counters;
  output RDY_mv_icache_perf_counters;

  // value method mv_itlb_perf_counters
  output mv_itlb_perf_counters;
  output RDY_mv_itlb_perf_counters;

  // signals for module outputs
  wire [65 : 0] request_to_ptw_get;
  wire [42 : 0] nc_read_req_get, read_mem_req_get;
  wire [40 : 0] core_resp_get;
  wire [4 : 0] mv_icache_perf_counters;
  wire RDY_cache_enable,
       RDY_core_req_put,
       RDY_core_resp_get,
       RDY_ma_curr_priv,
       RDY_ma_satp_from_csr,
       RDY_mv_icache_perf_counters,
       RDY_mv_itlb_perf_counters,
       RDY_nc_read_req_get,
       RDY_nc_read_resp_put,
       RDY_read_mem_req_get,
       RDY_read_mem_resp_put,
       RDY_request_to_ptw_get,
       RDY_response_frm_ptw_put,
       mv_itlb_perf_counters;

  // ports of submodule icache
  wire [67 : 0] icache_core_req_put;
  wire [65 : 0] icache_read_mem_resp_put;
  wire [42 : 0] icache_nc_read_req_get, icache_read_mem_req_get;
  wire [40 : 0] icache_core_resp_get;
  wire [38 : 0] icache_pa_from_tlb_put;
  wire [33 : 0] icache_nc_read_resp_put;
  wire [4 : 0] icache_perf_counters;
  wire icache_EN_cache_enable,
       icache_EN_core_req_put,
       icache_EN_core_resp_get,
       icache_EN_nc_read_req_get,
       icache_EN_nc_read_resp_put,
       icache_EN_pa_from_tlb_put,
       icache_EN_read_mem_req_get,
       icache_EN_read_mem_resp_put,
       icache_RDY_core_req_put,
       icache_RDY_core_resp_get,
       icache_RDY_nc_read_req_get,
       icache_RDY_nc_read_resp_put,
       icache_RDY_pa_from_tlb_put,
       icache_RDY_read_mem_req_get,
       icache_RDY_read_mem_resp_put,
       icache_cache_enable_c;

  // ports of submodule itlb
  wire [65 : 0] itlb_request_to_ptw_get;
  wire [64 : 0] itlb_core_request_put;
  wire [63 : 0] itlb_ma_satp_from_csr_s;
  wire [62 : 0] itlb_response_frm_ptw_put;
  wire [38 : 0] itlb_core_response_get;
  wire [1 : 0] itlb_ma_curr_priv_c;
  wire itlb_EN_core_request_put,
       itlb_EN_core_response_get,
       itlb_EN_ma_curr_priv,
       itlb_EN_ma_satp_from_csr,
       itlb_EN_request_to_ptw_get,
       itlb_EN_response_frm_ptw_put,
       itlb_RDY_core_request_put,
       itlb_RDY_core_response_get,
       itlb_RDY_request_to_ptw_get,
       itlb_RDY_response_frm_ptw_put,
       itlb_mv_perf_counters;

  // rule scheduling signals
  wire CAN_FIRE_RL_mkConnectionGetPut,
       CAN_FIRE_cache_enable,
       CAN_FIRE_core_req_put,
       CAN_FIRE_core_resp_get,
       CAN_FIRE_ma_curr_priv,
       CAN_FIRE_ma_satp_from_csr,
       CAN_FIRE_nc_read_req_get,
       CAN_FIRE_nc_read_resp_put,
       CAN_FIRE_read_mem_req_get,
       CAN_FIRE_read_mem_resp_put,
       CAN_FIRE_request_to_ptw_get,
       CAN_FIRE_response_frm_ptw_put,
       WILL_FIRE_RL_mkConnectionGetPut,
       WILL_FIRE_cache_enable,
       WILL_FIRE_core_req_put,
       WILL_FIRE_core_resp_get,
       WILL_FIRE_ma_curr_priv,
       WILL_FIRE_ma_satp_from_csr,
       WILL_FIRE_nc_read_req_get,
       WILL_FIRE_nc_read_resp_put,
       WILL_FIRE_read_mem_req_get,
       WILL_FIRE_read_mem_resp_put,
       WILL_FIRE_request_to_ptw_get,
       WILL_FIRE_response_frm_ptw_put;

  // action method core_req_put
  assign RDY_core_req_put =
	     icache_RDY_core_req_put && itlb_RDY_core_request_put ;
  assign CAN_FIRE_core_req_put =
	     icache_RDY_core_req_put && itlb_RDY_core_request_put ;
  assign WILL_FIRE_core_req_put = EN_core_req_put ;

  // actionvalue method core_resp_get
  assign core_resp_get = icache_core_resp_get ;
  assign RDY_core_resp_get = icache_RDY_core_resp_get ;
  assign CAN_FIRE_core_resp_get = icache_RDY_core_resp_get ;
  assign WILL_FIRE_core_resp_get = EN_core_resp_get ;

  // action method cache_enable
  assign RDY_cache_enable = 1'd1 ;
  assign CAN_FIRE_cache_enable = 1'd1 ;
  assign WILL_FIRE_cache_enable = EN_cache_enable ;

  // actionvalue method read_mem_req_get
  assign read_mem_req_get = icache_read_mem_req_get ;
  assign RDY_read_mem_req_get = icache_RDY_read_mem_req_get ;
  assign CAN_FIRE_read_mem_req_get = icache_RDY_read_mem_req_get ;
  assign WILL_FIRE_read_mem_req_get = EN_read_mem_req_get ;

  // action method read_mem_resp_put
  assign RDY_read_mem_resp_put = icache_RDY_read_mem_resp_put ;
  assign CAN_FIRE_read_mem_resp_put = icache_RDY_read_mem_resp_put ;
  assign WILL_FIRE_read_mem_resp_put = EN_read_mem_resp_put ;

  // actionvalue method nc_read_req_get
  assign nc_read_req_get = icache_nc_read_req_get ;
  assign RDY_nc_read_req_get = icache_RDY_nc_read_req_get ;
  assign CAN_FIRE_nc_read_req_get = icache_RDY_nc_read_req_get ;
  assign WILL_FIRE_nc_read_req_get = EN_nc_read_req_get ;

  // action method nc_read_resp_put
  assign RDY_nc_read_resp_put = icache_RDY_nc_read_resp_put ;
  assign CAN_FIRE_nc_read_resp_put = icache_RDY_nc_read_resp_put ;
  assign WILL_FIRE_nc_read_resp_put = EN_nc_read_resp_put ;

  // actionvalue method request_to_ptw_get
  assign request_to_ptw_get = itlb_request_to_ptw_get ;
  assign RDY_request_to_ptw_get = itlb_RDY_request_to_ptw_get ;
  assign CAN_FIRE_request_to_ptw_get = itlb_RDY_request_to_ptw_get ;
  assign WILL_FIRE_request_to_ptw_get = EN_request_to_ptw_get ;

  // action method response_frm_ptw_put
  assign RDY_response_frm_ptw_put = itlb_RDY_response_frm_ptw_put ;
  assign CAN_FIRE_response_frm_ptw_put = itlb_RDY_response_frm_ptw_put ;
  assign WILL_FIRE_response_frm_ptw_put = EN_response_frm_ptw_put ;

  // action method ma_satp_from_csr
  assign RDY_ma_satp_from_csr = 1'd1 ;
  assign CAN_FIRE_ma_satp_from_csr = 1'd1 ;
  assign WILL_FIRE_ma_satp_from_csr = EN_ma_satp_from_csr ;

  // action method ma_curr_priv
  assign RDY_ma_curr_priv = 1'd1 ;
  assign CAN_FIRE_ma_curr_priv = 1'd1 ;
  assign WILL_FIRE_ma_curr_priv = EN_ma_curr_priv ;

  // value method mv_icache_perf_counters
  assign mv_icache_perf_counters = icache_perf_counters ;
  assign RDY_mv_icache_perf_counters = 1'd1 ;

  // value method mv_itlb_perf_counters
  assign mv_itlb_perf_counters = itlb_mv_perf_counters ;
  assign RDY_mv_itlb_perf_counters = 1'd1 ;

  // submodule icache
  mkicache icache(.CLK(CLK),
		  .RST_N(RST_N),
		  .cache_enable_c(icache_cache_enable_c),
		  .core_req_put(icache_core_req_put),
		  .nc_read_resp_put(icache_nc_read_resp_put),
		  .pa_from_tlb_put(icache_pa_from_tlb_put),
		  .read_mem_resp_put(icache_read_mem_resp_put),
		  .EN_core_req_put(icache_EN_core_req_put),
		  .EN_core_resp_get(icache_EN_core_resp_get),
		  .EN_read_mem_req_get(icache_EN_read_mem_req_get),
		  .EN_read_mem_resp_put(icache_EN_read_mem_resp_put),
		  .EN_nc_read_req_get(icache_EN_nc_read_req_get),
		  .EN_nc_read_resp_put(icache_EN_nc_read_resp_put),
		  .EN_pa_from_tlb_put(icache_EN_pa_from_tlb_put),
		  .EN_cache_enable(icache_EN_cache_enable),
		  .RDY_core_req_put(icache_RDY_core_req_put),
		  .core_resp_get(icache_core_resp_get),
		  .RDY_core_resp_get(icache_RDY_core_resp_get),
		  .read_mem_req_get(icache_read_mem_req_get),
		  .RDY_read_mem_req_get(icache_RDY_read_mem_req_get),
		  .RDY_read_mem_resp_put(icache_RDY_read_mem_resp_put),
		  .nc_read_req_get(icache_nc_read_req_get),
		  .RDY_nc_read_req_get(icache_RDY_nc_read_req_get),
		  .RDY_nc_read_resp_put(icache_RDY_nc_read_resp_put),
		  .RDY_pa_from_tlb_put(icache_RDY_pa_from_tlb_put),
		  .perf_counters(icache_perf_counters),
		  .RDY_perf_counters(),
		  .RDY_cache_enable());

  // submodule itlb
  mkitlb itlb(.CLK(CLK),
	      .RST_N(RST_N),
	      .core_request_put(itlb_core_request_put),
	      .ma_curr_priv_c(itlb_ma_curr_priv_c),
	      .ma_satp_from_csr_s(itlb_ma_satp_from_csr_s),
	      .response_frm_ptw_put(itlb_response_frm_ptw_put),
	      .EN_core_request_put(itlb_EN_core_request_put),
	      .EN_core_response_get(itlb_EN_core_response_get),
	      .EN_request_to_ptw_get(itlb_EN_request_to_ptw_get),
	      .EN_response_frm_ptw_put(itlb_EN_response_frm_ptw_put),
	      .EN_ma_satp_from_csr(itlb_EN_ma_satp_from_csr),
	      .EN_ma_curr_priv(itlb_EN_ma_curr_priv),
	      .RDY_core_request_put(itlb_RDY_core_request_put),
	      .core_response_get(itlb_core_response_get),
	      .RDY_core_response_get(itlb_RDY_core_response_get),
	      .request_to_ptw_get(itlb_request_to_ptw_get),
	      .RDY_request_to_ptw_get(itlb_RDY_request_to_ptw_get),
	      .RDY_response_frm_ptw_put(itlb_RDY_response_frm_ptw_put),
	      .RDY_ma_satp_from_csr(),
	      .RDY_ma_curr_priv(),
	      .mv_perf_counters(itlb_mv_perf_counters),
	      .RDY_mv_perf_counters());

  // rule RL_mkConnectionGetPut
  assign CAN_FIRE_RL_mkConnectionGetPut =
	     itlb_RDY_core_response_get && icache_RDY_pa_from_tlb_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut = CAN_FIRE_RL_mkConnectionGetPut ;

  // submodule icache
  assign icache_cache_enable_c = cache_enable_c ;
  assign icache_core_req_put = core_req_put ;
  assign icache_nc_read_resp_put = nc_read_resp_put ;
  assign icache_pa_from_tlb_put = itlb_core_response_get ;
  assign icache_read_mem_resp_put = read_mem_resp_put ;
  assign icache_EN_core_req_put = EN_core_req_put && !core_req_put[0] ;
  assign icache_EN_core_resp_get = EN_core_resp_get ;
  assign icache_EN_read_mem_req_get = EN_read_mem_req_get ;
  assign icache_EN_read_mem_resp_put = EN_read_mem_resp_put ;
  assign icache_EN_nc_read_req_get = EN_nc_read_req_get ;
  assign icache_EN_nc_read_resp_put = EN_nc_read_resp_put ;
  assign icache_EN_pa_from_tlb_put = CAN_FIRE_RL_mkConnectionGetPut ;
  assign icache_EN_cache_enable = EN_cache_enable ;

  // submodule itlb
  assign itlb_core_request_put = { core_req_put[67:4], core_req_put[0] } ;
  assign itlb_ma_curr_priv_c = ma_curr_priv_c ;
  assign itlb_ma_satp_from_csr_s = ma_satp_from_csr_s ;
  assign itlb_response_frm_ptw_put = response_frm_ptw_put ;
  assign itlb_EN_core_request_put = EN_core_req_put && !core_req_put[1] ;
  assign itlb_EN_core_response_get = CAN_FIRE_RL_mkConnectionGetPut ;
  assign itlb_EN_request_to_ptw_get = EN_request_to_ptw_get ;
  assign itlb_EN_response_frm_ptw_put = EN_response_frm_ptw_put ;
  assign itlb_EN_ma_satp_from_csr = EN_ma_satp_from_csr ;
  assign itlb_EN_ma_curr_priv = EN_ma_curr_priv ;
endmodule  // mkimem

