//
// Generated by Bluespec Compiler, version 2021.07-1-gaf77efcd (build af77efcd)
//
// On Tue Dec  7 15:48:14 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// address_valid                  O     1
// address_valid_addr             I    12
// address_valid_misa             I    26
//
// Combinational paths from inputs to outputs:
//   (address_valid_addr, address_valid_misa) -> address_valid
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_address_valid(address_valid_addr,
			    address_valid_misa,
			    address_valid);
  // value method address_valid
  input  [11 : 0] address_valid_addr;
  input  [25 : 0] address_valid_misa;
  output address_valid;

  // signals for module outputs
  reg address_valid;

  // remaining internal signals
  reg CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2,
      CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4,
      CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q3,
      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1,
      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5;
  wire address_valid_addr_BITS_3_TO_0_0_EQ_0x0_1_OR_a_ETC___d77,
       address_valid_misa_BIT_13_1_AND_address_valid__ETC___d23;

  // value method address_valid
  always@(address_valid_addr or
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 or
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4 or
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5)
  begin
    case (address_valid_addr[9:8])
      2'b0:
	  address_valid =
	      CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4;
      2'b01:
	  address_valid =
	      address_valid_addr[11:10] == 2'b0 &&
	      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5;
      default: address_valid =
		   address_valid_addr[9:8] == 2'b11 &&
		   CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2;
    endcase
  end

  // remaining internal signals
  assign address_valid_addr_BITS_3_TO_0_0_EQ_0x0_1_OR_a_ETC___d77 =
	     address_valid_addr[3:0] == 4'h0 ||
	     address_valid_addr[3:0] == 4'h1 ||
	     address_valid_addr[3:0] == 4'h4 ||
	     address_valid_addr[3:0] == 4'h5 ||
	     address_valid_addr[3:0] == 4'h6 ||
	     (address_valid_addr[3:0] == 4'h2 ||
	      address_valid_addr[3:0] == 4'h3) &&
	     (address_valid_misa_BIT_13_1_AND_address_valid__ETC___d23 ||
	      address_valid_misa[18]) ;
  assign address_valid_misa_BIT_13_1_AND_address_valid__ETC___d23 =
	     address_valid_misa[13] & address_valid_misa[20] ;
  always@(address_valid_addr or
	  address_valid_addr_BITS_3_TO_0_0_EQ_0x0_1_OR_a_ETC___d77)
  begin
    case (address_valid_addr[7:4])
      4'd0:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
	      address_valid_addr_BITS_3_TO_0_0_EQ_0x0_1_OR_a_ETC___d77;
      4'h2:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
	      address_valid_addr[3:0] != 4'h1 &&
	      address_valid_addr[3:0] != 4'h2;
      default: CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
		   address_valid_addr[7:4] == 4'h3 ||
		   address_valid_addr[7:4] == 4'h4 &&
		   (address_valid_addr[3:0] == 4'h0 ||
		    address_valid_addr[3:0] == 4'h1 ||
		    address_valid_addr[3:0] == 4'h2 ||
		    address_valid_addr[3:0] == 4'h3 ||
		    address_valid_addr[3:0] == 4'h4);
    endcase
  end
  always@(address_valid_addr or
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1)
  begin
    case (address_valid_addr[11:10])
      2'b0:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1;
      2'd1:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      address_valid_addr[11:10] == 2'b01 &&
	      (address_valid_addr[7:0] == 8'hC2 ||
	       address_valid_addr[7:0] == 8'hC0 ||
	       address_valid_addr[7:0] == 8'hC1);
      2'b10:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      address_valid_addr[7:4] == 4'd0 ||
	      address_valid_addr[7:4] == 4'd1 ||
	      address_valid_addr[7:4] == 4'd8 ||
	      address_valid_addr[7:4] == 4'd9;
      2'b11:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      address_valid_addr[7:4] == 4'd1 &&
	      (address_valid_addr[3:0] == 4'h1 ||
	       address_valid_addr[3:0] == 4'h2 ||
	       address_valid_addr[3:0] == 4'h3 ||
	       address_valid_addr[3:0] == 4'h4);
    endcase
  end
  always@(address_valid_addr or
	  address_valid_misa_BIT_13_1_AND_address_valid__ETC___d23)
  begin
    case (address_valid_addr[7:0])
      8'd0, 8'h04, 8'h05, 8'h40, 8'h41, 8'h42, 8'h43, 8'h44:
	  CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q3 =
	      address_valid_misa_BIT_13_1_AND_address_valid__ETC___d23;
      default: CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q3 =
		   address_valid_addr[7:0] == 8'h01 ||
		   address_valid_addr[7:0] == 8'h02 ||
		   address_valid_addr[7:0] == 8'h03;
    endcase
  end
  always@(address_valid_addr or
	  CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q3)
  begin
    case (address_valid_addr[11:10])
      2'b0:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4 =
	      CASE_address_valid_addr_BITS_7_TO_0_0_address__ETC__q3;
      2'b11:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4 =
	      address_valid_addr[7:5] == 3'b0;
      default: CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q4 =
		   address_valid_addr[11:10] == 2'b10 &&
		   address_valid_addr[7:0] == 8'd0;
    endcase
  end
  always@(address_valid_addr or address_valid_misa)
  begin
    case (address_valid_addr[7:4])
      4'd0:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5 =
	      (address_valid_addr[3:0] == 4'h0 ||
	       address_valid_addr[3:0] == 4'h4 ||
	       address_valid_addr[3:0] == 4'h5 ||
	       address_valid_addr[3:0] == 4'h6) &&
	      address_valid_misa[18];
      4'h4:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5 =
	      (address_valid_addr[3:0] == 4'h0 ||
	       address_valid_addr[3:0] == 4'h1 ||
	       address_valid_addr[3:0] == 4'h2 ||
	       address_valid_addr[3:0] == 4'h3 ||
	       address_valid_addr[3:0] == 4'h4) &&
	      address_valid_misa[18];
      default: CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q5 =
		   address_valid_addr[7:4] == 4'd8 &&
		   address_valid_addr[3:0] == 4'h0 &&
		   address_valid_misa[18];
    endcase
  end
endmodule  // module_address_valid

