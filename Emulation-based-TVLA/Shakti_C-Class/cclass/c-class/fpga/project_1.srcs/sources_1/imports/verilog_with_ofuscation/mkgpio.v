//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
// On Wed Jul  3 23:07:48 IST 2019
//
//
// Ports:
// Name                         I/O  size props
// gpio_out                       O    32 reg
// RDY_gpio_out                   O     1 const
// gpio_out_en                    O    32 reg
// RDY_gpio_out_en                O     1 const
// gpio_DRV0                      O    32 reg
// RDY_gpio_DRV0                  O     1 const
// gpio_DRV1                      O    32 reg
// RDY_gpio_DRV1                  O     1 const
// gpio_DRV2                      O    32 reg
// RDY_gpio_DRV2                  O     1 const
// gpio_PD                        O    32 reg
// RDY_gpio_PD                    O     1 const
// gpio_PPEN                      O    32 reg
// RDY_gpio_PPEN                  O     1 const
// gpio_PRG_SLEW                  O    32 reg
// RDY_gpio_PRG_SLEW              O     1 const
// gpio_PUQ                       O    32 reg
// RDY_gpio_PUQ                   O     1 const
// gpio_PWRUPZHL                  O    32 reg
// RDY_gpio_PWRUPZHL              O     1 const
// gpio_PWRUP_PULL_EN             O    32 reg
// RDY_gpio_PWRUP_PULL_EN         O     1 const
// RDY_to_plic_0__write           O     1 const
// to_plic_0__read                O     1 reg
// RDY_to_plic_0__read            O     1 const
// RDY_to_plic_1__write           O     1 const
// to_plic_1__read                O     1 reg
// RDY_to_plic_1__read            O     1 const
// RDY_to_plic_2__write           O     1 const
// to_plic_2__read                O     1 reg
// RDY_to_plic_2__read            O     1 const
// RDY_to_plic_3__write           O     1 const
// to_plic_3__read                O     1 reg
// RDY_to_plic_3__read            O     1 const
// RDY_to_plic_4__write           O     1 const
// to_plic_4__read                O     1 reg
// RDY_to_plic_4__read            O     1 const
// RDY_to_plic_5__write           O     1 const
// to_plic_5__read                O     1 reg
// RDY_to_plic_5__read            O     1 const
// RDY_to_plic_6__write           O     1 const
// to_plic_6__read                O     1 reg
// RDY_to_plic_6__read            O     1 const
// RDY_to_plic_7__write           O     1 const
// to_plic_7__read                O     1 reg
// RDY_to_plic_7__read            O     1 const
// RDY_to_plic_8__write           O     1 const
// to_plic_8__read                O     1 reg
// RDY_to_plic_8__read            O     1 const
// RDY_to_plic_9__write           O     1 const
// to_plic_9__read                O     1 reg
// RDY_to_plic_9__read            O     1 const
// RDY_to_plic_10__write          O     1 const
// to_plic_10__read               O     1 reg
// RDY_to_plic_10__read           O     1 const
// RDY_to_plic_11__write          O     1 const
// to_plic_11__read               O     1 reg
// RDY_to_plic_11__read           O     1 const
// RDY_to_plic_12__write          O     1 const
// to_plic_12__read               O     1 reg
// RDY_to_plic_12__read           O     1 const
// RDY_to_plic_13__write          O     1 const
// to_plic_13__read               O     1 reg
// RDY_to_plic_13__read           O     1 const
// RDY_to_plic_14__write          O     1 const
// to_plic_14__read               O     1 reg
// RDY_to_plic_14__read           O     1 const
// RDY_to_plic_15__write          O     1 const
// to_plic_15__read               O     1 reg
// RDY_to_plic_15__read           O     1 const
// RDY_to_plic_16__write          O     1 const
// to_plic_16__read               O     1 reg
// RDY_to_plic_16__read           O     1 const
// RDY_to_plic_17__write          O     1 const
// to_plic_17__read               O     1 reg
// RDY_to_plic_17__read           O     1 const
// RDY_to_plic_18__write          O     1 const
// to_plic_18__read               O     1 reg
// RDY_to_plic_18__read           O     1 const
// RDY_to_plic_19__write          O     1 const
// to_plic_19__read               O     1 reg
// RDY_to_plic_19__read           O     1 const
// RDY_to_plic_20__write          O     1 const
// to_plic_20__read               O     1 reg
// RDY_to_plic_20__read           O     1 const
// RDY_to_plic_21__write          O     1 const
// to_plic_21__read               O     1 reg
// RDY_to_plic_21__read           O     1 const
// RDY_to_plic_22__write          O     1 const
// to_plic_22__read               O     1 reg
// RDY_to_plic_22__read           O     1 const
// RDY_to_plic_23__write          O     1 const
// to_plic_23__read               O     1 reg
// RDY_to_plic_23__read           O     1 const
// RDY_to_plic_24__write          O     1 const
// to_plic_24__read               O     1 reg
// RDY_to_plic_24__read           O     1 const
// RDY_to_plic_25__write          O     1 const
// to_plic_25__read               O     1 reg
// RDY_to_plic_25__read           O     1 const
// RDY_to_plic_26__write          O     1 const
// to_plic_26__read               O     1 reg
// RDY_to_plic_26__read           O     1 const
// RDY_to_plic_27__write          O     1 const
// to_plic_27__read               O     1 reg
// RDY_to_plic_27__read           O     1 const
// RDY_to_plic_28__write          O     1 const
// to_plic_28__read               O     1 reg
// RDY_to_plic_28__read           O     1 const
// RDY_to_plic_29__write          O     1 const
// to_plic_29__read               O     1 reg
// RDY_to_plic_29__read           O     1 const
// RDY_to_plic_30__write          O     1 const
// to_plic_30__read               O     1 reg
// RDY_to_plic_30__read           O     1 const
// RDY_to_plic_31__write          O     1 const
// to_plic_31__read               O     1 reg
// RDY_to_plic_31__read           O     1 const
// RDY_axi_slave_m_awvalid        O     1
// axi_slave_awready              O     1
// RDY_axi_slave_m_wvalid         O     1
// axi_slave_wready               O     1
// axi_slave_bvalid               O     1 reg
// axi_slave_bresp                O     2 reg
// axi_slave_buser                O    10 reg
// axi_slave_bid                  O     4 reg
// axi_slave_arready              O     1
// axi_slave_rvalid               O     1 reg
// axi_slave_rresp                O     2 reg
// axi_slave_rdata                O    64 reg
// axi_slave_rlast                O     1 reg
// axi_slave_ruser                O    10 reg
// axi_slave_rid                  O     4 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// gpio_in_inp                    I    32 reg
// to_plic_0__write_1             I     1 unused
// to_plic_1__write_1             I     1 unused
// to_plic_2__write_1             I     1 unused
// to_plic_3__write_1             I     1 unused
// to_plic_4__write_1             I     1 unused
// to_plic_5__write_1             I     1 unused
// to_plic_6__write_1             I     1 unused
// to_plic_7__write_1             I     1 unused
// to_plic_8__write_1             I     1 unused
// to_plic_9__write_1             I     1 unused
// to_plic_10__write_1            I     1 unused
// to_plic_11__write_1            I     1 unused
// to_plic_12__write_1            I     1 unused
// to_plic_13__write_1            I     1 unused
// to_plic_14__write_1            I     1 unused
// to_plic_15__write_1            I     1 unused
// to_plic_16__write_1            I     1 unused
// to_plic_17__write_1            I     1 unused
// to_plic_18__write_1            I     1 unused
// to_plic_19__write_1            I     1 unused
// to_plic_20__write_1            I     1 unused
// to_plic_21__write_1            I     1 unused
// to_plic_22__write_1            I     1 unused
// to_plic_23__write_1            I     1 unused
// to_plic_24__write_1            I     1 unused
// to_plic_25__write_1            I     1 unused
// to_plic_26__write_1            I     1 unused
// to_plic_27__write_1            I     1 unused
// to_plic_28__write_1            I     1 unused
// to_plic_29__write_1            I     1 unused
// to_plic_30__write_1            I     1 unused
// to_plic_31__write_1            I     1 unused
// axi_slave_m_awvalid_awvalid    I     1
// axi_slave_m_awvalid_awaddr     I    32 reg
// axi_slave_m_awvalid_awprot     I     3 reg
// axi_slave_m_awvalid_awuser     I    10 reg
// axi_slave_m_awvalid_awlen      I     8 reg
// axi_slave_m_awvalid_awsize     I     3 reg
// axi_slave_m_awvalid_awburst    I     2 reg
// axi_slave_m_awvalid_awlock     I     1 reg
// axi_slave_m_awvalid_awcache    I     4 reg
// axi_slave_m_awvalid_awqos      I     4 reg
// axi_slave_m_awvalid_awregion   I     4 reg
// axi_slave_m_awvalid_awid       I     4 reg
// axi_slave_m_wvalid_wvalid      I     1
// axi_slave_m_wvalid_wdata       I    64 reg
// axi_slave_m_wvalid_wstrb       I     8 reg
// axi_slave_m_wvalid_wlast       I     1 reg
// axi_slave_m_wvalid_wid         I     4 reg
// axi_slave_m_bready_bready      I     1
// axi_slave_m_arvalid_arvalid    I     1
// axi_slave_m_arvalid_araddr     I    32 reg
// axi_slave_m_arvalid_arprot     I     3 reg
// axi_slave_m_arvalid_aruser     I    10 reg
// axi_slave_m_arvalid_arlen      I     8 reg
// axi_slave_m_arvalid_arsize     I     3 reg
// axi_slave_m_arvalid_arburst    I     2 reg
// axi_slave_m_arvalid_arlock     I     1 reg
// axi_slave_m_arvalid_arcache    I     4 reg
// axi_slave_m_arvalid_arqos      I     4 reg
// axi_slave_m_arvalid_arregion   I     4 reg
// axi_slave_m_arvalid_arid       I     4 reg
// axi_slave_m_rready_rready      I     1
// EN_to_plic_0__write            I     1 unused
// EN_to_plic_1__write            I     1 unused
// EN_to_plic_2__write            I     1 unused
// EN_to_plic_3__write            I     1 unused
// EN_to_plic_4__write            I     1 unused
// EN_to_plic_5__write            I     1 unused
// EN_to_plic_6__write            I     1 unused
// EN_to_plic_7__write            I     1 unused
// EN_to_plic_8__write            I     1 unused
// EN_to_plic_9__write            I     1 unused
// EN_to_plic_10__write           I     1 unused
// EN_to_plic_11__write           I     1 unused
// EN_to_plic_12__write           I     1 unused
// EN_to_plic_13__write           I     1 unused
// EN_to_plic_14__write           I     1 unused
// EN_to_plic_15__write           I     1 unused
// EN_to_plic_16__write           I     1 unused
// EN_to_plic_17__write           I     1 unused
// EN_to_plic_18__write           I     1 unused
// EN_to_plic_19__write           I     1 unused
// EN_to_plic_20__write           I     1 unused
// EN_to_plic_21__write           I     1 unused
// EN_to_plic_22__write           I     1 unused
// EN_to_plic_23__write           I     1 unused
// EN_to_plic_24__write           I     1 unused
// EN_to_plic_25__write           I     1 unused
// EN_to_plic_26__write           I     1 unused
// EN_to_plic_27__write           I     1 unused
// EN_to_plic_28__write           I     1 unused
// EN_to_plic_29__write           I     1 unused
// EN_to_plic_30__write           I     1 unused
// EN_to_plic_31__write           I     1 unused
// EN_axi_slave_m_awvalid         I     1
// EN_axi_slave_m_wvalid          I     1
//
// Combinational paths from inputs to outputs:
//   axi_slave_m_bready_bready -> RDY_axi_slave_m_awvalid
//   axi_slave_m_bready_bready -> axi_slave_awready
//   axi_slave_m_bready_bready -> RDY_axi_slave_m_wvalid
//   axi_slave_m_bready_bready -> axi_slave_wready
//   axi_slave_m_rready_rready -> axi_slave_arready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkgpio(CLK,
	      RST_N,

	      gpio_in_inp,

	      gpio_out,
	      RDY_gpio_out,

	      gpio_out_en,
	      RDY_gpio_out_en,

	      gpio_DRV0,
	      RDY_gpio_DRV0,

	      gpio_DRV1,
	      RDY_gpio_DRV1,

	      gpio_DRV2,
	      RDY_gpio_DRV2,

	      gpio_PD,
	      RDY_gpio_PD,

	      gpio_PPEN,
	      RDY_gpio_PPEN,

	      gpio_PRG_SLEW,
	      RDY_gpio_PRG_SLEW,

	      gpio_PUQ,
	      RDY_gpio_PUQ,

	      gpio_PWRUPZHL,
	      RDY_gpio_PWRUPZHL,

	      gpio_PWRUP_PULL_EN,
	      RDY_gpio_PWRUP_PULL_EN,

	      to_plic_0__write_1,
	      EN_to_plic_0__write,
	      RDY_to_plic_0__write,

	      to_plic_0__read,
	      RDY_to_plic_0__read,

	      to_plic_1__write_1,
	      EN_to_plic_1__write,
	      RDY_to_plic_1__write,

	      to_plic_1__read,
	      RDY_to_plic_1__read,

	      to_plic_2__write_1,
	      EN_to_plic_2__write,
	      RDY_to_plic_2__write,

	      to_plic_2__read,
	      RDY_to_plic_2__read,

	      to_plic_3__write_1,
	      EN_to_plic_3__write,
	      RDY_to_plic_3__write,

	      to_plic_3__read,
	      RDY_to_plic_3__read,

	      to_plic_4__write_1,
	      EN_to_plic_4__write,
	      RDY_to_plic_4__write,

	      to_plic_4__read,
	      RDY_to_plic_4__read,

	      to_plic_5__write_1,
	      EN_to_plic_5__write,
	      RDY_to_plic_5__write,

	      to_plic_5__read,
	      RDY_to_plic_5__read,

	      to_plic_6__write_1,
	      EN_to_plic_6__write,
	      RDY_to_plic_6__write,

	      to_plic_6__read,
	      RDY_to_plic_6__read,

	      to_plic_7__write_1,
	      EN_to_plic_7__write,
	      RDY_to_plic_7__write,

	      to_plic_7__read,
	      RDY_to_plic_7__read,

	      to_plic_8__write_1,
	      EN_to_plic_8__write,
	      RDY_to_plic_8__write,

	      to_plic_8__read,
	      RDY_to_plic_8__read,

	      to_plic_9__write_1,
	      EN_to_plic_9__write,
	      RDY_to_plic_9__write,

	      to_plic_9__read,
	      RDY_to_plic_9__read,

	      to_plic_10__write_1,
	      EN_to_plic_10__write,
	      RDY_to_plic_10__write,

	      to_plic_10__read,
	      RDY_to_plic_10__read,

	      to_plic_11__write_1,
	      EN_to_plic_11__write,
	      RDY_to_plic_11__write,

	      to_plic_11__read,
	      RDY_to_plic_11__read,

	      to_plic_12__write_1,
	      EN_to_plic_12__write,
	      RDY_to_plic_12__write,

	      to_plic_12__read,
	      RDY_to_plic_12__read,

	      to_plic_13__write_1,
	      EN_to_plic_13__write,
	      RDY_to_plic_13__write,

	      to_plic_13__read,
	      RDY_to_plic_13__read,

	      to_plic_14__write_1,
	      EN_to_plic_14__write,
	      RDY_to_plic_14__write,

	      to_plic_14__read,
	      RDY_to_plic_14__read,

	      to_plic_15__write_1,
	      EN_to_plic_15__write,
	      RDY_to_plic_15__write,

	      to_plic_15__read,
	      RDY_to_plic_15__read,

	      to_plic_16__write_1,
	      EN_to_plic_16__write,
	      RDY_to_plic_16__write,

	      to_plic_16__read,
	      RDY_to_plic_16__read,

	      to_plic_17__write_1,
	      EN_to_plic_17__write,
	      RDY_to_plic_17__write,

	      to_plic_17__read,
	      RDY_to_plic_17__read,

	      to_plic_18__write_1,
	      EN_to_plic_18__write,
	      RDY_to_plic_18__write,

	      to_plic_18__read,
	      RDY_to_plic_18__read,

	      to_plic_19__write_1,
	      EN_to_plic_19__write,
	      RDY_to_plic_19__write,

	      to_plic_19__read,
	      RDY_to_plic_19__read,

	      to_plic_20__write_1,
	      EN_to_plic_20__write,
	      RDY_to_plic_20__write,

	      to_plic_20__read,
	      RDY_to_plic_20__read,

	      to_plic_21__write_1,
	      EN_to_plic_21__write,
	      RDY_to_plic_21__write,

	      to_plic_21__read,
	      RDY_to_plic_21__read,

	      to_plic_22__write_1,
	      EN_to_plic_22__write,
	      RDY_to_plic_22__write,

	      to_plic_22__read,
	      RDY_to_plic_22__read,

	      to_plic_23__write_1,
	      EN_to_plic_23__write,
	      RDY_to_plic_23__write,

	      to_plic_23__read,
	      RDY_to_plic_23__read,

	      to_plic_24__write_1,
	      EN_to_plic_24__write,
	      RDY_to_plic_24__write,

	      to_plic_24__read,
	      RDY_to_plic_24__read,

	      to_plic_25__write_1,
	      EN_to_plic_25__write,
	      RDY_to_plic_25__write,

	      to_plic_25__read,
	      RDY_to_plic_25__read,

	      to_plic_26__write_1,
	      EN_to_plic_26__write,
	      RDY_to_plic_26__write,

	      to_plic_26__read,
	      RDY_to_plic_26__read,

	      to_plic_27__write_1,
	      EN_to_plic_27__write,
	      RDY_to_plic_27__write,

	      to_plic_27__read,
	      RDY_to_plic_27__read,

	      to_plic_28__write_1,
	      EN_to_plic_28__write,
	      RDY_to_plic_28__write,

	      to_plic_28__read,
	      RDY_to_plic_28__read,

	      to_plic_29__write_1,
	      EN_to_plic_29__write,
	      RDY_to_plic_29__write,

	      to_plic_29__read,
	      RDY_to_plic_29__read,

	      to_plic_30__write_1,
	      EN_to_plic_30__write,
	      RDY_to_plic_30__write,

	      to_plic_30__read,
	      RDY_to_plic_30__read,

	      to_plic_31__write_1,
	      EN_to_plic_31__write,
	      RDY_to_plic_31__write,

	      to_plic_31__read,
	      RDY_to_plic_31__read,

	      axi_slave_m_awvalid_awvalid,
	      axi_slave_m_awvalid_awaddr,
	      axi_slave_m_awvalid_awprot,
	      axi_slave_m_awvalid_awuser,
	      axi_slave_m_awvalid_awlen,
	      axi_slave_m_awvalid_awsize,
	      axi_slave_m_awvalid_awburst,
	      axi_slave_m_awvalid_awlock,
	      axi_slave_m_awvalid_awcache,
	      axi_slave_m_awvalid_awqos,
	      axi_slave_m_awvalid_awregion,
	      axi_slave_m_awvalid_awid,
	      EN_axi_slave_m_awvalid,
	      RDY_axi_slave_m_awvalid,

	      axi_slave_awready,

	      axi_slave_m_wvalid_wvalid,
	      axi_slave_m_wvalid_wdata,
	      axi_slave_m_wvalid_wstrb,
	      axi_slave_m_wvalid_wlast,
	      axi_slave_m_wvalid_wid,
	      EN_axi_slave_m_wvalid,
	      RDY_axi_slave_m_wvalid,

	      axi_slave_wready,

	      axi_slave_bvalid,

	      axi_slave_bresp,

	      axi_slave_buser,

	      axi_slave_bid,

	      axi_slave_m_bready_bready,

	      axi_slave_m_arvalid_arvalid,
	      axi_slave_m_arvalid_araddr,
	      axi_slave_m_arvalid_arprot,
	      axi_slave_m_arvalid_aruser,
	      axi_slave_m_arvalid_arlen,
	      axi_slave_m_arvalid_arsize,
	      axi_slave_m_arvalid_arburst,
	      axi_slave_m_arvalid_arlock,
	      axi_slave_m_arvalid_arcache,
	      axi_slave_m_arvalid_arqos,
	      axi_slave_m_arvalid_arregion,
	      axi_slave_m_arvalid_arid,

	      axi_slave_arready,

	      axi_slave_rvalid,

	      axi_slave_rresp,

	      axi_slave_rdata,

	      axi_slave_rlast,

	      axi_slave_ruser,

	      axi_slave_rid,

	      axi_slave_m_rready_rready);
  input  CLK;
  input  RST_N;

  // action method gpio_in
  input  [31 : 0] gpio_in_inp;

  // value method gpio_out
  output [31 : 0] gpio_out;
  output RDY_gpio_out;

  // value method gpio_out_en
  output [31 : 0] gpio_out_en;
  output RDY_gpio_out_en;

  // value method gpio_DRV0
  output [31 : 0] gpio_DRV0;
  output RDY_gpio_DRV0;

  // value method gpio_DRV1
  output [31 : 0] gpio_DRV1;
  output RDY_gpio_DRV1;

  // value method gpio_DRV2
  output [31 : 0] gpio_DRV2;
  output RDY_gpio_DRV2;

  // value method gpio_PD
  output [31 : 0] gpio_PD;
  output RDY_gpio_PD;

  // value method gpio_PPEN
  output [31 : 0] gpio_PPEN;
  output RDY_gpio_PPEN;

  // value method gpio_PRG_SLEW
  output [31 : 0] gpio_PRG_SLEW;
  output RDY_gpio_PRG_SLEW;

  // value method gpio_PUQ
  output [31 : 0] gpio_PUQ;
  output RDY_gpio_PUQ;

  // value method gpio_PWRUPZHL
  output [31 : 0] gpio_PWRUPZHL;
  output RDY_gpio_PWRUPZHL;

  // value method gpio_PWRUP_PULL_EN
  output [31 : 0] gpio_PWRUP_PULL_EN;
  output RDY_gpio_PWRUP_PULL_EN;

  // action method to_plic_0__write
  input  to_plic_0__write_1;
  input  EN_to_plic_0__write;
  output RDY_to_plic_0__write;

  // value method to_plic_0__read
  output to_plic_0__read;
  output RDY_to_plic_0__read;

  // action method to_plic_1__write
  input  to_plic_1__write_1;
  input  EN_to_plic_1__write;
  output RDY_to_plic_1__write;

  // value method to_plic_1__read
  output to_plic_1__read;
  output RDY_to_plic_1__read;

  // action method to_plic_2__write
  input  to_plic_2__write_1;
  input  EN_to_plic_2__write;
  output RDY_to_plic_2__write;

  // value method to_plic_2__read
  output to_plic_2__read;
  output RDY_to_plic_2__read;

  // action method to_plic_3__write
  input  to_plic_3__write_1;
  input  EN_to_plic_3__write;
  output RDY_to_plic_3__write;

  // value method to_plic_3__read
  output to_plic_3__read;
  output RDY_to_plic_3__read;

  // action method to_plic_4__write
  input  to_plic_4__write_1;
  input  EN_to_plic_4__write;
  output RDY_to_plic_4__write;

  // value method to_plic_4__read
  output to_plic_4__read;
  output RDY_to_plic_4__read;

  // action method to_plic_5__write
  input  to_plic_5__write_1;
  input  EN_to_plic_5__write;
  output RDY_to_plic_5__write;

  // value method to_plic_5__read
  output to_plic_5__read;
  output RDY_to_plic_5__read;

  // action method to_plic_6__write
  input  to_plic_6__write_1;
  input  EN_to_plic_6__write;
  output RDY_to_plic_6__write;

  // value method to_plic_6__read
  output to_plic_6__read;
  output RDY_to_plic_6__read;

  // action method to_plic_7__write
  input  to_plic_7__write_1;
  input  EN_to_plic_7__write;
  output RDY_to_plic_7__write;

  // value method to_plic_7__read
  output to_plic_7__read;
  output RDY_to_plic_7__read;

  // action method to_plic_8__write
  input  to_plic_8__write_1;
  input  EN_to_plic_8__write;
  output RDY_to_plic_8__write;

  // value method to_plic_8__read
  output to_plic_8__read;
  output RDY_to_plic_8__read;

  // action method to_plic_9__write
  input  to_plic_9__write_1;
  input  EN_to_plic_9__write;
  output RDY_to_plic_9__write;

  // value method to_plic_9__read
  output to_plic_9__read;
  output RDY_to_plic_9__read;

  // action method to_plic_10__write
  input  to_plic_10__write_1;
  input  EN_to_plic_10__write;
  output RDY_to_plic_10__write;

  // value method to_plic_10__read
  output to_plic_10__read;
  output RDY_to_plic_10__read;

  // action method to_plic_11__write
  input  to_plic_11__write_1;
  input  EN_to_plic_11__write;
  output RDY_to_plic_11__write;

  // value method to_plic_11__read
  output to_plic_11__read;
  output RDY_to_plic_11__read;

  // action method to_plic_12__write
  input  to_plic_12__write_1;
  input  EN_to_plic_12__write;
  output RDY_to_plic_12__write;

  // value method to_plic_12__read
  output to_plic_12__read;
  output RDY_to_plic_12__read;

  // action method to_plic_13__write
  input  to_plic_13__write_1;
  input  EN_to_plic_13__write;
  output RDY_to_plic_13__write;

  // value method to_plic_13__read
  output to_plic_13__read;
  output RDY_to_plic_13__read;

  // action method to_plic_14__write
  input  to_plic_14__write_1;
  input  EN_to_plic_14__write;
  output RDY_to_plic_14__write;

  // value method to_plic_14__read
  output to_plic_14__read;
  output RDY_to_plic_14__read;

  // action method to_plic_15__write
  input  to_plic_15__write_1;
  input  EN_to_plic_15__write;
  output RDY_to_plic_15__write;

  // value method to_plic_15__read
  output to_plic_15__read;
  output RDY_to_plic_15__read;

  // action method to_plic_16__write
  input  to_plic_16__write_1;
  input  EN_to_plic_16__write;
  output RDY_to_plic_16__write;

  // value method to_plic_16__read
  output to_plic_16__read;
  output RDY_to_plic_16__read;

  // action method to_plic_17__write
  input  to_plic_17__write_1;
  input  EN_to_plic_17__write;
  output RDY_to_plic_17__write;

  // value method to_plic_17__read
  output to_plic_17__read;
  output RDY_to_plic_17__read;

  // action method to_plic_18__write
  input  to_plic_18__write_1;
  input  EN_to_plic_18__write;
  output RDY_to_plic_18__write;

  // value method to_plic_18__read
  output to_plic_18__read;
  output RDY_to_plic_18__read;

  // action method to_plic_19__write
  input  to_plic_19__write_1;
  input  EN_to_plic_19__write;
  output RDY_to_plic_19__write;

  // value method to_plic_19__read
  output to_plic_19__read;
  output RDY_to_plic_19__read;

  // action method to_plic_20__write
  input  to_plic_20__write_1;
  input  EN_to_plic_20__write;
  output RDY_to_plic_20__write;

  // value method to_plic_20__read
  output to_plic_20__read;
  output RDY_to_plic_20__read;

  // action method to_plic_21__write
  input  to_plic_21__write_1;
  input  EN_to_plic_21__write;
  output RDY_to_plic_21__write;

  // value method to_plic_21__read
  output to_plic_21__read;
  output RDY_to_plic_21__read;

  // action method to_plic_22__write
  input  to_plic_22__write_1;
  input  EN_to_plic_22__write;
  output RDY_to_plic_22__write;

  // value method to_plic_22__read
  output to_plic_22__read;
  output RDY_to_plic_22__read;

  // action method to_plic_23__write
  input  to_plic_23__write_1;
  input  EN_to_plic_23__write;
  output RDY_to_plic_23__write;

  // value method to_plic_23__read
  output to_plic_23__read;
  output RDY_to_plic_23__read;

  // action method to_plic_24__write
  input  to_plic_24__write_1;
  input  EN_to_plic_24__write;
  output RDY_to_plic_24__write;

  // value method to_plic_24__read
  output to_plic_24__read;
  output RDY_to_plic_24__read;

  // action method to_plic_25__write
  input  to_plic_25__write_1;
  input  EN_to_plic_25__write;
  output RDY_to_plic_25__write;

  // value method to_plic_25__read
  output to_plic_25__read;
  output RDY_to_plic_25__read;

  // action method to_plic_26__write
  input  to_plic_26__write_1;
  input  EN_to_plic_26__write;
  output RDY_to_plic_26__write;

  // value method to_plic_26__read
  output to_plic_26__read;
  output RDY_to_plic_26__read;

  // action method to_plic_27__write
  input  to_plic_27__write_1;
  input  EN_to_plic_27__write;
  output RDY_to_plic_27__write;

  // value method to_plic_27__read
  output to_plic_27__read;
  output RDY_to_plic_27__read;

  // action method to_plic_28__write
  input  to_plic_28__write_1;
  input  EN_to_plic_28__write;
  output RDY_to_plic_28__write;

  // value method to_plic_28__read
  output to_plic_28__read;
  output RDY_to_plic_28__read;

  // action method to_plic_29__write
  input  to_plic_29__write_1;
  input  EN_to_plic_29__write;
  output RDY_to_plic_29__write;

  // value method to_plic_29__read
  output to_plic_29__read;
  output RDY_to_plic_29__read;

  // action method to_plic_30__write
  input  to_plic_30__write_1;
  input  EN_to_plic_30__write;
  output RDY_to_plic_30__write;

  // value method to_plic_30__read
  output to_plic_30__read;
  output RDY_to_plic_30__read;

  // action method to_plic_31__write
  input  to_plic_31__write_1;
  input  EN_to_plic_31__write;
  output RDY_to_plic_31__write;

  // value method to_plic_31__read
  output to_plic_31__read;
  output RDY_to_plic_31__read;

  // action method axi_slave_m_awvalid
  input  axi_slave_m_awvalid_awvalid;
  input  [31 : 0] axi_slave_m_awvalid_awaddr;
  input  [2 : 0] axi_slave_m_awvalid_awprot;
  input  [9 : 0] axi_slave_m_awvalid_awuser;
  input  [7 : 0] axi_slave_m_awvalid_awlen;
  input  [2 : 0] axi_slave_m_awvalid_awsize;
  input  [1 : 0] axi_slave_m_awvalid_awburst;
  input  axi_slave_m_awvalid_awlock;
  input  [3 : 0] axi_slave_m_awvalid_awcache;
  input  [3 : 0] axi_slave_m_awvalid_awqos;
  input  [3 : 0] axi_slave_m_awvalid_awregion;
  input  [3 : 0] axi_slave_m_awvalid_awid;
  input  EN_axi_slave_m_awvalid;
  output RDY_axi_slave_m_awvalid;

  // value method axi_slave_m_awready
  output axi_slave_awready;

  // action method axi_slave_m_wvalid
  input  axi_slave_m_wvalid_wvalid;
  input  [63 : 0] axi_slave_m_wvalid_wdata;
  input  [7 : 0] axi_slave_m_wvalid_wstrb;
  input  axi_slave_m_wvalid_wlast;
  input  [3 : 0] axi_slave_m_wvalid_wid;
  input  EN_axi_slave_m_wvalid;
  output RDY_axi_slave_m_wvalid;

  // value method axi_slave_m_wready
  output axi_slave_wready;

  // value method axi_slave_m_bvalid
  output axi_slave_bvalid;

  // value method axi_slave_m_bresp
  output [1 : 0] axi_slave_bresp;

  // value method axi_slave_m_buser
  output [9 : 0] axi_slave_buser;

  // value method axi_slave_m_bid
  output [3 : 0] axi_slave_bid;

  // action method axi_slave_m_bready
  input  axi_slave_m_bready_bready;

  // action method axi_slave_m_arvalid
  input  axi_slave_m_arvalid_arvalid;
  input  [31 : 0] axi_slave_m_arvalid_araddr;
  input  [2 : 0] axi_slave_m_arvalid_arprot;
  input  [9 : 0] axi_slave_m_arvalid_aruser;
  input  [7 : 0] axi_slave_m_arvalid_arlen;
  input  [2 : 0] axi_slave_m_arvalid_arsize;
  input  [1 : 0] axi_slave_m_arvalid_arburst;
  input  axi_slave_m_arvalid_arlock;
  input  [3 : 0] axi_slave_m_arvalid_arcache;
  input  [3 : 0] axi_slave_m_arvalid_arqos;
  input  [3 : 0] axi_slave_m_arvalid_arregion;
  input  [3 : 0] axi_slave_m_arvalid_arid;

  // value method axi_slave_m_arready
  output axi_slave_arready;

  // value method axi_slave_m_rvalid
  output axi_slave_rvalid;

  // value method axi_slave_m_rresp
  output [1 : 0] axi_slave_rresp;

  // value method axi_slave_m_rdata
  output [63 : 0] axi_slave_rdata;

  // value method axi_slave_m_rlast
  output axi_slave_rlast;

  // value method axi_slave_m_ruser
  output [9 : 0] axi_slave_ruser;

  // value method axi_slave_m_rid
  output [3 : 0] axi_slave_rid;

  // action method axi_slave_m_rready
  input  axi_slave_m_rready_rready;

  // signals for module outputs
  wire [63 : 0] axi_slave_rdata;
  wire [31 : 0] gpio_DRV0,
		gpio_DRV1,
		gpio_DRV2,
		gpio_PD,
		gpio_PPEN,
		gpio_PRG_SLEW,
		gpio_PUQ,
		gpio_PWRUPZHL,
		gpio_PWRUP_PULL_EN,
		gpio_out,
		gpio_out_en;
  wire [9 : 0] axi_slave_buser, axi_slave_ruser;
  wire [3 : 0] axi_slave_bid, axi_slave_rid;
  wire [1 : 0] axi_slave_bresp, axi_slave_rresp;
  wire RDY_axi_slave_m_awvalid,
       RDY_axi_slave_m_wvalid,
       RDY_gpio_DRV0,
       RDY_gpio_DRV1,
       RDY_gpio_DRV2,
       RDY_gpio_PD,
       RDY_gpio_PPEN,
       RDY_gpio_PRG_SLEW,
       RDY_gpio_PUQ,
       RDY_gpio_PWRUPZHL,
       RDY_gpio_PWRUP_PULL_EN,
       RDY_gpio_out,
       RDY_gpio_out_en,
       RDY_to_plic_0__read,
       RDY_to_plic_0__write,
       RDY_to_plic_10__read,
       RDY_to_plic_10__write,
       RDY_to_plic_11__read,
       RDY_to_plic_11__write,
       RDY_to_plic_12__read,
       RDY_to_plic_12__write,
       RDY_to_plic_13__read,
       RDY_to_plic_13__write,
       RDY_to_plic_14__read,
       RDY_to_plic_14__write,
       RDY_to_plic_15__read,
       RDY_to_plic_15__write,
       RDY_to_plic_16__read,
       RDY_to_plic_16__write,
       RDY_to_plic_17__read,
       RDY_to_plic_17__write,
       RDY_to_plic_18__read,
       RDY_to_plic_18__write,
       RDY_to_plic_19__read,
       RDY_to_plic_19__write,
       RDY_to_plic_1__read,
       RDY_to_plic_1__write,
       RDY_to_plic_20__read,
       RDY_to_plic_20__write,
       RDY_to_plic_21__read,
       RDY_to_plic_21__write,
       RDY_to_plic_22__read,
       RDY_to_plic_22__write,
       RDY_to_plic_23__read,
       RDY_to_plic_23__write,
       RDY_to_plic_24__read,
       RDY_to_plic_24__write,
       RDY_to_plic_25__read,
       RDY_to_plic_25__write,
       RDY_to_plic_26__read,
       RDY_to_plic_26__write,
       RDY_to_plic_27__read,
       RDY_to_plic_27__write,
       RDY_to_plic_28__read,
       RDY_to_plic_28__write,
       RDY_to_plic_29__read,
       RDY_to_plic_29__write,
       RDY_to_plic_2__read,
       RDY_to_plic_2__write,
       RDY_to_plic_30__read,
       RDY_to_plic_30__write,
       RDY_to_plic_31__read,
       RDY_to_plic_31__write,
       RDY_to_plic_3__read,
       RDY_to_plic_3__write,
       RDY_to_plic_4__read,
       RDY_to_plic_4__write,
       RDY_to_plic_5__read,
       RDY_to_plic_5__write,
       RDY_to_plic_6__read,
       RDY_to_plic_6__write,
       RDY_to_plic_7__read,
       RDY_to_plic_7__write,
       RDY_to_plic_8__read,
       RDY_to_plic_8__write,
       RDY_to_plic_9__read,
       RDY_to_plic_9__write,
       axi_slave_arready,
       axi_slave_awready,
       axi_slave_bvalid,
       axi_slave_rlast,
       axi_slave_rvalid,
       axi_slave_wready,
       to_plic_0__read,
       to_plic_10__read,
       to_plic_11__read,
       to_plic_12__read,
       to_plic_13__read,
       to_plic_14__read,
       to_plic_15__read,
       to_plic_16__read,
       to_plic_17__read,
       to_plic_18__read,
       to_plic_19__read,
       to_plic_1__read,
       to_plic_20__read,
       to_plic_21__read,
       to_plic_22__read,
       to_plic_23__read,
       to_plic_24__read,
       to_plic_25__read,
       to_plic_26__read,
       to_plic_27__read,
       to_plic_28__read,
       to_plic_29__read,
       to_plic_2__read,
       to_plic_30__read,
       to_plic_31__read,
       to_plic_3__read,
       to_plic_4__read,
       to_plic_5__read,
       to_plic_6__read,
       to_plic_7__read,
       to_plic_8__read,
       to_plic_9__read;

  // register datain_register_0
  reg datain_register_0;
  wire datain_register_0$D_IN, datain_register_0$EN;

  // register datain_register_1
  reg datain_register_1;
  wire datain_register_1$D_IN, datain_register_1$EN;

  // register datain_register_10
  reg datain_register_10;
  wire datain_register_10$D_IN, datain_register_10$EN;

  // register datain_register_11
  reg datain_register_11;
  wire datain_register_11$D_IN, datain_register_11$EN;

  // register datain_register_12
  reg datain_register_12;
  wire datain_register_12$D_IN, datain_register_12$EN;

  // register datain_register_13
  reg datain_register_13;
  wire datain_register_13$D_IN, datain_register_13$EN;

  // register datain_register_14
  reg datain_register_14;
  wire datain_register_14$D_IN, datain_register_14$EN;

  // register datain_register_15
  reg datain_register_15;
  wire datain_register_15$D_IN, datain_register_15$EN;

  // register datain_register_16
  reg datain_register_16;
  wire datain_register_16$D_IN, datain_register_16$EN;

  // register datain_register_17
  reg datain_register_17;
  wire datain_register_17$D_IN, datain_register_17$EN;

  // register datain_register_18
  reg datain_register_18;
  wire datain_register_18$D_IN, datain_register_18$EN;

  // register datain_register_19
  reg datain_register_19;
  wire datain_register_19$D_IN, datain_register_19$EN;

  // register datain_register_2
  reg datain_register_2;
  wire datain_register_2$D_IN, datain_register_2$EN;

  // register datain_register_20
  reg datain_register_20;
  wire datain_register_20$D_IN, datain_register_20$EN;

  // register datain_register_21
  reg datain_register_21;
  wire datain_register_21$D_IN, datain_register_21$EN;

  // register datain_register_22
  reg datain_register_22;
  wire datain_register_22$D_IN, datain_register_22$EN;

  // register datain_register_23
  reg datain_register_23;
  wire datain_register_23$D_IN, datain_register_23$EN;

  // register datain_register_24
  reg datain_register_24;
  wire datain_register_24$D_IN, datain_register_24$EN;

  // register datain_register_25
  reg datain_register_25;
  wire datain_register_25$D_IN, datain_register_25$EN;

  // register datain_register_26
  reg datain_register_26;
  wire datain_register_26$D_IN, datain_register_26$EN;

  // register datain_register_27
  reg datain_register_27;
  wire datain_register_27$D_IN, datain_register_27$EN;

  // register datain_register_28
  reg datain_register_28;
  wire datain_register_28$D_IN, datain_register_28$EN;

  // register datain_register_29
  reg datain_register_29;
  wire datain_register_29$D_IN, datain_register_29$EN;

  // register datain_register_3
  reg datain_register_3;
  wire datain_register_3$D_IN, datain_register_3$EN;

  // register datain_register_30
  reg datain_register_30;
  wire datain_register_30$D_IN, datain_register_30$EN;

  // register datain_register_31
  reg datain_register_31;
  wire datain_register_31$D_IN, datain_register_31$EN;

  // register datain_register_4
  reg datain_register_4;
  wire datain_register_4$D_IN, datain_register_4$EN;

  // register datain_register_5
  reg datain_register_5;
  wire datain_register_5$D_IN, datain_register_5$EN;

  // register datain_register_6
  reg datain_register_6;
  wire datain_register_6$D_IN, datain_register_6$EN;

  // register datain_register_7
  reg datain_register_7;
  wire datain_register_7$D_IN, datain_register_7$EN;

  // register datain_register_8
  reg datain_register_8;
  wire datain_register_8$D_IN, datain_register_8$EN;

  // register datain_register_9
  reg datain_register_9;
  wire datain_register_9$D_IN, datain_register_9$EN;

  // register dataout_register_0
  reg dataout_register_0;
  wire dataout_register_0$D_IN, dataout_register_0$EN;

  // register dataout_register_1
  reg dataout_register_1;
  wire dataout_register_1$D_IN, dataout_register_1$EN;

  // register dataout_register_10
  reg dataout_register_10;
  wire dataout_register_10$D_IN, dataout_register_10$EN;

  // register dataout_register_11
  reg dataout_register_11;
  wire dataout_register_11$D_IN, dataout_register_11$EN;

  // register dataout_register_12
  reg dataout_register_12;
  wire dataout_register_12$D_IN, dataout_register_12$EN;

  // register dataout_register_13
  reg dataout_register_13;
  wire dataout_register_13$D_IN, dataout_register_13$EN;

  // register dataout_register_14
  reg dataout_register_14;
  wire dataout_register_14$D_IN, dataout_register_14$EN;

  // register dataout_register_15
  reg dataout_register_15;
  wire dataout_register_15$D_IN, dataout_register_15$EN;

  // register dataout_register_16
  reg dataout_register_16;
  wire dataout_register_16$D_IN, dataout_register_16$EN;

  // register dataout_register_17
  reg dataout_register_17;
  wire dataout_register_17$D_IN, dataout_register_17$EN;

  // register dataout_register_18
  reg dataout_register_18;
  wire dataout_register_18$D_IN, dataout_register_18$EN;

  // register dataout_register_19
  reg dataout_register_19;
  wire dataout_register_19$D_IN, dataout_register_19$EN;

  // register dataout_register_2
  reg dataout_register_2;
  wire dataout_register_2$D_IN, dataout_register_2$EN;

  // register dataout_register_20
  reg dataout_register_20;
  wire dataout_register_20$D_IN, dataout_register_20$EN;

  // register dataout_register_21
  reg dataout_register_21;
  wire dataout_register_21$D_IN, dataout_register_21$EN;

  // register dataout_register_22
  reg dataout_register_22;
  wire dataout_register_22$D_IN, dataout_register_22$EN;

  // register dataout_register_23
  reg dataout_register_23;
  wire dataout_register_23$D_IN, dataout_register_23$EN;

  // register dataout_register_24
  reg dataout_register_24;
  wire dataout_register_24$D_IN, dataout_register_24$EN;

  // register dataout_register_25
  reg dataout_register_25;
  wire dataout_register_25$D_IN, dataout_register_25$EN;

  // register dataout_register_26
  reg dataout_register_26;
  wire dataout_register_26$D_IN, dataout_register_26$EN;

  // register dataout_register_27
  reg dataout_register_27;
  wire dataout_register_27$D_IN, dataout_register_27$EN;

  // register dataout_register_28
  reg dataout_register_28;
  wire dataout_register_28$D_IN, dataout_register_28$EN;

  // register dataout_register_29
  reg dataout_register_29;
  wire dataout_register_29$D_IN, dataout_register_29$EN;

  // register dataout_register_3
  reg dataout_register_3;
  wire dataout_register_3$D_IN, dataout_register_3$EN;

  // register dataout_register_30
  reg dataout_register_30;
  wire dataout_register_30$D_IN, dataout_register_30$EN;

  // register dataout_register_31
  reg dataout_register_31;
  wire dataout_register_31$D_IN, dataout_register_31$EN;

  // register dataout_register_4
  reg dataout_register_4;
  wire dataout_register_4$D_IN, dataout_register_4$EN;

  // register dataout_register_5
  reg dataout_register_5;
  wire dataout_register_5$D_IN, dataout_register_5$EN;

  // register dataout_register_6
  reg dataout_register_6;
  wire dataout_register_6$D_IN, dataout_register_6$EN;

  // register dataout_register_7
  reg dataout_register_7;
  wire dataout_register_7$D_IN, dataout_register_7$EN;

  // register dataout_register_8
  reg dataout_register_8;
  wire dataout_register_8$D_IN, dataout_register_8$EN;

  // register dataout_register_9
  reg dataout_register_9;
  wire dataout_register_9$D_IN, dataout_register_9$EN;

  // register direction_reg_0
  reg direction_reg_0;
  wire direction_reg_0$D_IN, direction_reg_0$EN;

  // register direction_reg_1
  reg direction_reg_1;
  wire direction_reg_1$D_IN, direction_reg_1$EN;

  // register direction_reg_10
  reg direction_reg_10;
  wire direction_reg_10$D_IN, direction_reg_10$EN;

  // register direction_reg_11
  reg direction_reg_11;
  wire direction_reg_11$D_IN, direction_reg_11$EN;

  // register direction_reg_12
  reg direction_reg_12;
  wire direction_reg_12$D_IN, direction_reg_12$EN;

  // register direction_reg_13
  reg direction_reg_13;
  wire direction_reg_13$D_IN, direction_reg_13$EN;

  // register direction_reg_14
  reg direction_reg_14;
  wire direction_reg_14$D_IN, direction_reg_14$EN;

  // register direction_reg_15
  reg direction_reg_15;
  wire direction_reg_15$D_IN, direction_reg_15$EN;

  // register direction_reg_16
  reg direction_reg_16;
  wire direction_reg_16$D_IN, direction_reg_16$EN;

  // register direction_reg_17
  reg direction_reg_17;
  wire direction_reg_17$D_IN, direction_reg_17$EN;

  // register direction_reg_18
  reg direction_reg_18;
  wire direction_reg_18$D_IN, direction_reg_18$EN;

  // register direction_reg_19
  reg direction_reg_19;
  wire direction_reg_19$D_IN, direction_reg_19$EN;

  // register direction_reg_2
  reg direction_reg_2;
  wire direction_reg_2$D_IN, direction_reg_2$EN;

  // register direction_reg_20
  reg direction_reg_20;
  wire direction_reg_20$D_IN, direction_reg_20$EN;

  // register direction_reg_21
  reg direction_reg_21;
  wire direction_reg_21$D_IN, direction_reg_21$EN;

  // register direction_reg_22
  reg direction_reg_22;
  wire direction_reg_22$D_IN, direction_reg_22$EN;

  // register direction_reg_23
  reg direction_reg_23;
  wire direction_reg_23$D_IN, direction_reg_23$EN;

  // register direction_reg_24
  reg direction_reg_24;
  wire direction_reg_24$D_IN, direction_reg_24$EN;

  // register direction_reg_25
  reg direction_reg_25;
  wire direction_reg_25$D_IN, direction_reg_25$EN;

  // register direction_reg_26
  reg direction_reg_26;
  wire direction_reg_26$D_IN, direction_reg_26$EN;

  // register direction_reg_27
  reg direction_reg_27;
  wire direction_reg_27$D_IN, direction_reg_27$EN;

  // register direction_reg_28
  reg direction_reg_28;
  wire direction_reg_28$D_IN, direction_reg_28$EN;

  // register direction_reg_29
  reg direction_reg_29;
  wire direction_reg_29$D_IN, direction_reg_29$EN;

  // register direction_reg_3
  reg direction_reg_3;
  wire direction_reg_3$D_IN, direction_reg_3$EN;

  // register direction_reg_30
  reg direction_reg_30;
  wire direction_reg_30$D_IN, direction_reg_30$EN;

  // register direction_reg_31
  reg direction_reg_31;
  wire direction_reg_31$D_IN, direction_reg_31$EN;

  // register direction_reg_4
  reg direction_reg_4;
  wire direction_reg_4$D_IN, direction_reg_4$EN;

  // register direction_reg_5
  reg direction_reg_5;
  wire direction_reg_5$D_IN, direction_reg_5$EN;

  // register direction_reg_6
  reg direction_reg_6;
  wire direction_reg_6$D_IN, direction_reg_6$EN;

  // register direction_reg_7
  reg direction_reg_7;
  wire direction_reg_7$D_IN, direction_reg_7$EN;

  // register direction_reg_8
  reg direction_reg_8;
  wire direction_reg_8$D_IN, direction_reg_8$EN;

  // register direction_reg_9
  reg direction_reg_9;
  wire direction_reg_9$D_IN, direction_reg_9$EN;

  // register drv0_reg_0
  reg drv0_reg_0;
  wire drv0_reg_0$D_IN, drv0_reg_0$EN;

  // register drv0_reg_1
  reg drv0_reg_1;
  wire drv0_reg_1$D_IN, drv0_reg_1$EN;

  // register drv0_reg_10
  reg drv0_reg_10;
  wire drv0_reg_10$D_IN, drv0_reg_10$EN;

  // register drv0_reg_11
  reg drv0_reg_11;
  wire drv0_reg_11$D_IN, drv0_reg_11$EN;

  // register drv0_reg_12
  reg drv0_reg_12;
  wire drv0_reg_12$D_IN, drv0_reg_12$EN;

  // register drv0_reg_13
  reg drv0_reg_13;
  wire drv0_reg_13$D_IN, drv0_reg_13$EN;

  // register drv0_reg_14
  reg drv0_reg_14;
  wire drv0_reg_14$D_IN, drv0_reg_14$EN;

  // register drv0_reg_15
  reg drv0_reg_15;
  wire drv0_reg_15$D_IN, drv0_reg_15$EN;

  // register drv0_reg_16
  reg drv0_reg_16;
  wire drv0_reg_16$D_IN, drv0_reg_16$EN;

  // register drv0_reg_17
  reg drv0_reg_17;
  wire drv0_reg_17$D_IN, drv0_reg_17$EN;

  // register drv0_reg_18
  reg drv0_reg_18;
  wire drv0_reg_18$D_IN, drv0_reg_18$EN;

  // register drv0_reg_19
  reg drv0_reg_19;
  wire drv0_reg_19$D_IN, drv0_reg_19$EN;

  // register drv0_reg_2
  reg drv0_reg_2;
  wire drv0_reg_2$D_IN, drv0_reg_2$EN;

  // register drv0_reg_20
  reg drv0_reg_20;
  wire drv0_reg_20$D_IN, drv0_reg_20$EN;

  // register drv0_reg_21
  reg drv0_reg_21;
  wire drv0_reg_21$D_IN, drv0_reg_21$EN;

  // register drv0_reg_22
  reg drv0_reg_22;
  wire drv0_reg_22$D_IN, drv0_reg_22$EN;

  // register drv0_reg_23
  reg drv0_reg_23;
  wire drv0_reg_23$D_IN, drv0_reg_23$EN;

  // register drv0_reg_24
  reg drv0_reg_24;
  wire drv0_reg_24$D_IN, drv0_reg_24$EN;

  // register drv0_reg_25
  reg drv0_reg_25;
  wire drv0_reg_25$D_IN, drv0_reg_25$EN;

  // register drv0_reg_26
  reg drv0_reg_26;
  wire drv0_reg_26$D_IN, drv0_reg_26$EN;

  // register drv0_reg_27
  reg drv0_reg_27;
  wire drv0_reg_27$D_IN, drv0_reg_27$EN;

  // register drv0_reg_28
  reg drv0_reg_28;
  wire drv0_reg_28$D_IN, drv0_reg_28$EN;

  // register drv0_reg_29
  reg drv0_reg_29;
  wire drv0_reg_29$D_IN, drv0_reg_29$EN;

  // register drv0_reg_3
  reg drv0_reg_3;
  wire drv0_reg_3$D_IN, drv0_reg_3$EN;

  // register drv0_reg_30
  reg drv0_reg_30;
  wire drv0_reg_30$D_IN, drv0_reg_30$EN;

  // register drv0_reg_31
  reg drv0_reg_31;
  wire drv0_reg_31$D_IN, drv0_reg_31$EN;

  // register drv0_reg_4
  reg drv0_reg_4;
  wire drv0_reg_4$D_IN, drv0_reg_4$EN;

  // register drv0_reg_5
  reg drv0_reg_5;
  wire drv0_reg_5$D_IN, drv0_reg_5$EN;

  // register drv0_reg_6
  reg drv0_reg_6;
  wire drv0_reg_6$D_IN, drv0_reg_6$EN;

  // register drv0_reg_7
  reg drv0_reg_7;
  wire drv0_reg_7$D_IN, drv0_reg_7$EN;

  // register drv0_reg_8
  reg drv0_reg_8;
  wire drv0_reg_8$D_IN, drv0_reg_8$EN;

  // register drv0_reg_9
  reg drv0_reg_9;
  wire drv0_reg_9$D_IN, drv0_reg_9$EN;

  // register drv1_reg_0
  reg drv1_reg_0;
  wire drv1_reg_0$D_IN, drv1_reg_0$EN;

  // register drv1_reg_1
  reg drv1_reg_1;
  wire drv1_reg_1$D_IN, drv1_reg_1$EN;

  // register drv1_reg_10
  reg drv1_reg_10;
  wire drv1_reg_10$D_IN, drv1_reg_10$EN;

  // register drv1_reg_11
  reg drv1_reg_11;
  wire drv1_reg_11$D_IN, drv1_reg_11$EN;

  // register drv1_reg_12
  reg drv1_reg_12;
  wire drv1_reg_12$D_IN, drv1_reg_12$EN;

  // register drv1_reg_13
  reg drv1_reg_13;
  wire drv1_reg_13$D_IN, drv1_reg_13$EN;

  // register drv1_reg_14
  reg drv1_reg_14;
  wire drv1_reg_14$D_IN, drv1_reg_14$EN;

  // register drv1_reg_15
  reg drv1_reg_15;
  wire drv1_reg_15$D_IN, drv1_reg_15$EN;

  // register drv1_reg_16
  reg drv1_reg_16;
  wire drv1_reg_16$D_IN, drv1_reg_16$EN;

  // register drv1_reg_17
  reg drv1_reg_17;
  wire drv1_reg_17$D_IN, drv1_reg_17$EN;

  // register drv1_reg_18
  reg drv1_reg_18;
  wire drv1_reg_18$D_IN, drv1_reg_18$EN;

  // register drv1_reg_19
  reg drv1_reg_19;
  wire drv1_reg_19$D_IN, drv1_reg_19$EN;

  // register drv1_reg_2
  reg drv1_reg_2;
  wire drv1_reg_2$D_IN, drv1_reg_2$EN;

  // register drv1_reg_20
  reg drv1_reg_20;
  wire drv1_reg_20$D_IN, drv1_reg_20$EN;

  // register drv1_reg_21
  reg drv1_reg_21;
  wire drv1_reg_21$D_IN, drv1_reg_21$EN;

  // register drv1_reg_22
  reg drv1_reg_22;
  wire drv1_reg_22$D_IN, drv1_reg_22$EN;

  // register drv1_reg_23
  reg drv1_reg_23;
  wire drv1_reg_23$D_IN, drv1_reg_23$EN;

  // register drv1_reg_24
  reg drv1_reg_24;
  wire drv1_reg_24$D_IN, drv1_reg_24$EN;

  // register drv1_reg_25
  reg drv1_reg_25;
  wire drv1_reg_25$D_IN, drv1_reg_25$EN;

  // register drv1_reg_26
  reg drv1_reg_26;
  wire drv1_reg_26$D_IN, drv1_reg_26$EN;

  // register drv1_reg_27
  reg drv1_reg_27;
  wire drv1_reg_27$D_IN, drv1_reg_27$EN;

  // register drv1_reg_28
  reg drv1_reg_28;
  wire drv1_reg_28$D_IN, drv1_reg_28$EN;

  // register drv1_reg_29
  reg drv1_reg_29;
  wire drv1_reg_29$D_IN, drv1_reg_29$EN;

  // register drv1_reg_3
  reg drv1_reg_3;
  wire drv1_reg_3$D_IN, drv1_reg_3$EN;

  // register drv1_reg_30
  reg drv1_reg_30;
  wire drv1_reg_30$D_IN, drv1_reg_30$EN;

  // register drv1_reg_31
  reg drv1_reg_31;
  wire drv1_reg_31$D_IN, drv1_reg_31$EN;

  // register drv1_reg_4
  reg drv1_reg_4;
  wire drv1_reg_4$D_IN, drv1_reg_4$EN;

  // register drv1_reg_5
  reg drv1_reg_5;
  wire drv1_reg_5$D_IN, drv1_reg_5$EN;

  // register drv1_reg_6
  reg drv1_reg_6;
  wire drv1_reg_6$D_IN, drv1_reg_6$EN;

  // register drv1_reg_7
  reg drv1_reg_7;
  wire drv1_reg_7$D_IN, drv1_reg_7$EN;

  // register drv1_reg_8
  reg drv1_reg_8;
  wire drv1_reg_8$D_IN, drv1_reg_8$EN;

  // register drv1_reg_9
  reg drv1_reg_9;
  wire drv1_reg_9$D_IN, drv1_reg_9$EN;

  // register drv2_reg_0
  reg drv2_reg_0;
  wire drv2_reg_0$D_IN, drv2_reg_0$EN;

  // register drv2_reg_1
  reg drv2_reg_1;
  wire drv2_reg_1$D_IN, drv2_reg_1$EN;

  // register drv2_reg_10
  reg drv2_reg_10;
  wire drv2_reg_10$D_IN, drv2_reg_10$EN;

  // register drv2_reg_11
  reg drv2_reg_11;
  wire drv2_reg_11$D_IN, drv2_reg_11$EN;

  // register drv2_reg_12
  reg drv2_reg_12;
  wire drv2_reg_12$D_IN, drv2_reg_12$EN;

  // register drv2_reg_13
  reg drv2_reg_13;
  wire drv2_reg_13$D_IN, drv2_reg_13$EN;

  // register drv2_reg_14
  reg drv2_reg_14;
  wire drv2_reg_14$D_IN, drv2_reg_14$EN;

  // register drv2_reg_15
  reg drv2_reg_15;
  wire drv2_reg_15$D_IN, drv2_reg_15$EN;

  // register drv2_reg_16
  reg drv2_reg_16;
  wire drv2_reg_16$D_IN, drv2_reg_16$EN;

  // register drv2_reg_17
  reg drv2_reg_17;
  wire drv2_reg_17$D_IN, drv2_reg_17$EN;

  // register drv2_reg_18
  reg drv2_reg_18;
  wire drv2_reg_18$D_IN, drv2_reg_18$EN;

  // register drv2_reg_19
  reg drv2_reg_19;
  wire drv2_reg_19$D_IN, drv2_reg_19$EN;

  // register drv2_reg_2
  reg drv2_reg_2;
  wire drv2_reg_2$D_IN, drv2_reg_2$EN;

  // register drv2_reg_20
  reg drv2_reg_20;
  wire drv2_reg_20$D_IN, drv2_reg_20$EN;

  // register drv2_reg_21
  reg drv2_reg_21;
  wire drv2_reg_21$D_IN, drv2_reg_21$EN;

  // register drv2_reg_22
  reg drv2_reg_22;
  wire drv2_reg_22$D_IN, drv2_reg_22$EN;

  // register drv2_reg_23
  reg drv2_reg_23;
  wire drv2_reg_23$D_IN, drv2_reg_23$EN;

  // register drv2_reg_24
  reg drv2_reg_24;
  wire drv2_reg_24$D_IN, drv2_reg_24$EN;

  // register drv2_reg_25
  reg drv2_reg_25;
  wire drv2_reg_25$D_IN, drv2_reg_25$EN;

  // register drv2_reg_26
  reg drv2_reg_26;
  wire drv2_reg_26$D_IN, drv2_reg_26$EN;

  // register drv2_reg_27
  reg drv2_reg_27;
  wire drv2_reg_27$D_IN, drv2_reg_27$EN;

  // register drv2_reg_28
  reg drv2_reg_28;
  wire drv2_reg_28$D_IN, drv2_reg_28$EN;

  // register drv2_reg_29
  reg drv2_reg_29;
  wire drv2_reg_29$D_IN, drv2_reg_29$EN;

  // register drv2_reg_3
  reg drv2_reg_3;
  wire drv2_reg_3$D_IN, drv2_reg_3$EN;

  // register drv2_reg_30
  reg drv2_reg_30;
  wire drv2_reg_30$D_IN, drv2_reg_30$EN;

  // register drv2_reg_31
  reg drv2_reg_31;
  wire drv2_reg_31$D_IN, drv2_reg_31$EN;

  // register drv2_reg_4
  reg drv2_reg_4;
  wire drv2_reg_4$D_IN, drv2_reg_4$EN;

  // register drv2_reg_5
  reg drv2_reg_5;
  wire drv2_reg_5$D_IN, drv2_reg_5$EN;

  // register drv2_reg_6
  reg drv2_reg_6;
  wire drv2_reg_6$D_IN, drv2_reg_6$EN;

  // register drv2_reg_7
  reg drv2_reg_7;
  wire drv2_reg_7$D_IN, drv2_reg_7$EN;

  // register drv2_reg_8
  reg drv2_reg_8;
  wire drv2_reg_8$D_IN, drv2_reg_8$EN;

  // register drv2_reg_9
  reg drv2_reg_9;
  wire drv2_reg_9$D_IN, drv2_reg_9$EN;

  // register pd_reg_0
  reg pd_reg_0;
  wire pd_reg_0$D_IN, pd_reg_0$EN;

  // register pd_reg_1
  reg pd_reg_1;
  wire pd_reg_1$D_IN, pd_reg_1$EN;

  // register pd_reg_10
  reg pd_reg_10;
  wire pd_reg_10$D_IN, pd_reg_10$EN;

  // register pd_reg_11
  reg pd_reg_11;
  wire pd_reg_11$D_IN, pd_reg_11$EN;

  // register pd_reg_12
  reg pd_reg_12;
  wire pd_reg_12$D_IN, pd_reg_12$EN;

  // register pd_reg_13
  reg pd_reg_13;
  wire pd_reg_13$D_IN, pd_reg_13$EN;

  // register pd_reg_14
  reg pd_reg_14;
  wire pd_reg_14$D_IN, pd_reg_14$EN;

  // register pd_reg_15
  reg pd_reg_15;
  wire pd_reg_15$D_IN, pd_reg_15$EN;

  // register pd_reg_16
  reg pd_reg_16;
  wire pd_reg_16$D_IN, pd_reg_16$EN;

  // register pd_reg_17
  reg pd_reg_17;
  wire pd_reg_17$D_IN, pd_reg_17$EN;

  // register pd_reg_18
  reg pd_reg_18;
  wire pd_reg_18$D_IN, pd_reg_18$EN;

  // register pd_reg_19
  reg pd_reg_19;
  wire pd_reg_19$D_IN, pd_reg_19$EN;

  // register pd_reg_2
  reg pd_reg_2;
  wire pd_reg_2$D_IN, pd_reg_2$EN;

  // register pd_reg_20
  reg pd_reg_20;
  wire pd_reg_20$D_IN, pd_reg_20$EN;

  // register pd_reg_21
  reg pd_reg_21;
  wire pd_reg_21$D_IN, pd_reg_21$EN;

  // register pd_reg_22
  reg pd_reg_22;
  wire pd_reg_22$D_IN, pd_reg_22$EN;

  // register pd_reg_23
  reg pd_reg_23;
  wire pd_reg_23$D_IN, pd_reg_23$EN;

  // register pd_reg_24
  reg pd_reg_24;
  wire pd_reg_24$D_IN, pd_reg_24$EN;

  // register pd_reg_25
  reg pd_reg_25;
  wire pd_reg_25$D_IN, pd_reg_25$EN;

  // register pd_reg_26
  reg pd_reg_26;
  wire pd_reg_26$D_IN, pd_reg_26$EN;

  // register pd_reg_27
  reg pd_reg_27;
  wire pd_reg_27$D_IN, pd_reg_27$EN;

  // register pd_reg_28
  reg pd_reg_28;
  wire pd_reg_28$D_IN, pd_reg_28$EN;

  // register pd_reg_29
  reg pd_reg_29;
  wire pd_reg_29$D_IN, pd_reg_29$EN;

  // register pd_reg_3
  reg pd_reg_3;
  wire pd_reg_3$D_IN, pd_reg_3$EN;

  // register pd_reg_30
  reg pd_reg_30;
  wire pd_reg_30$D_IN, pd_reg_30$EN;

  // register pd_reg_31
  reg pd_reg_31;
  wire pd_reg_31$D_IN, pd_reg_31$EN;

  // register pd_reg_4
  reg pd_reg_4;
  wire pd_reg_4$D_IN, pd_reg_4$EN;

  // register pd_reg_5
  reg pd_reg_5;
  wire pd_reg_5$D_IN, pd_reg_5$EN;

  // register pd_reg_6
  reg pd_reg_6;
  wire pd_reg_6$D_IN, pd_reg_6$EN;

  // register pd_reg_7
  reg pd_reg_7;
  wire pd_reg_7$D_IN, pd_reg_7$EN;

  // register pd_reg_8
  reg pd_reg_8;
  wire pd_reg_8$D_IN, pd_reg_8$EN;

  // register pd_reg_9
  reg pd_reg_9;
  wire pd_reg_9$D_IN, pd_reg_9$EN;

  // register ppen_reg_0
  reg ppen_reg_0;
  wire ppen_reg_0$D_IN, ppen_reg_0$EN;

  // register ppen_reg_1
  reg ppen_reg_1;
  wire ppen_reg_1$D_IN, ppen_reg_1$EN;

  // register ppen_reg_10
  reg ppen_reg_10;
  wire ppen_reg_10$D_IN, ppen_reg_10$EN;

  // register ppen_reg_11
  reg ppen_reg_11;
  wire ppen_reg_11$D_IN, ppen_reg_11$EN;

  // register ppen_reg_12
  reg ppen_reg_12;
  wire ppen_reg_12$D_IN, ppen_reg_12$EN;

  // register ppen_reg_13
  reg ppen_reg_13;
  wire ppen_reg_13$D_IN, ppen_reg_13$EN;

  // register ppen_reg_14
  reg ppen_reg_14;
  wire ppen_reg_14$D_IN, ppen_reg_14$EN;

  // register ppen_reg_15
  reg ppen_reg_15;
  wire ppen_reg_15$D_IN, ppen_reg_15$EN;

  // register ppen_reg_16
  reg ppen_reg_16;
  wire ppen_reg_16$D_IN, ppen_reg_16$EN;

  // register ppen_reg_17
  reg ppen_reg_17;
  wire ppen_reg_17$D_IN, ppen_reg_17$EN;

  // register ppen_reg_18
  reg ppen_reg_18;
  wire ppen_reg_18$D_IN, ppen_reg_18$EN;

  // register ppen_reg_19
  reg ppen_reg_19;
  wire ppen_reg_19$D_IN, ppen_reg_19$EN;

  // register ppen_reg_2
  reg ppen_reg_2;
  wire ppen_reg_2$D_IN, ppen_reg_2$EN;

  // register ppen_reg_20
  reg ppen_reg_20;
  wire ppen_reg_20$D_IN, ppen_reg_20$EN;

  // register ppen_reg_21
  reg ppen_reg_21;
  wire ppen_reg_21$D_IN, ppen_reg_21$EN;

  // register ppen_reg_22
  reg ppen_reg_22;
  wire ppen_reg_22$D_IN, ppen_reg_22$EN;

  // register ppen_reg_23
  reg ppen_reg_23;
  wire ppen_reg_23$D_IN, ppen_reg_23$EN;

  // register ppen_reg_24
  reg ppen_reg_24;
  wire ppen_reg_24$D_IN, ppen_reg_24$EN;

  // register ppen_reg_25
  reg ppen_reg_25;
  wire ppen_reg_25$D_IN, ppen_reg_25$EN;

  // register ppen_reg_26
  reg ppen_reg_26;
  wire ppen_reg_26$D_IN, ppen_reg_26$EN;

  // register ppen_reg_27
  reg ppen_reg_27;
  wire ppen_reg_27$D_IN, ppen_reg_27$EN;

  // register ppen_reg_28
  reg ppen_reg_28;
  wire ppen_reg_28$D_IN, ppen_reg_28$EN;

  // register ppen_reg_29
  reg ppen_reg_29;
  wire ppen_reg_29$D_IN, ppen_reg_29$EN;

  // register ppen_reg_3
  reg ppen_reg_3;
  wire ppen_reg_3$D_IN, ppen_reg_3$EN;

  // register ppen_reg_30
  reg ppen_reg_30;
  wire ppen_reg_30$D_IN, ppen_reg_30$EN;

  // register ppen_reg_31
  reg ppen_reg_31;
  wire ppen_reg_31$D_IN, ppen_reg_31$EN;

  // register ppen_reg_4
  reg ppen_reg_4;
  wire ppen_reg_4$D_IN, ppen_reg_4$EN;

  // register ppen_reg_5
  reg ppen_reg_5;
  wire ppen_reg_5$D_IN, ppen_reg_5$EN;

  // register ppen_reg_6
  reg ppen_reg_6;
  wire ppen_reg_6$D_IN, ppen_reg_6$EN;

  // register ppen_reg_7
  reg ppen_reg_7;
  wire ppen_reg_7$D_IN, ppen_reg_7$EN;

  // register ppen_reg_8
  reg ppen_reg_8;
  wire ppen_reg_8$D_IN, ppen_reg_8$EN;

  // register ppen_reg_9
  reg ppen_reg_9;
  wire ppen_reg_9$D_IN, ppen_reg_9$EN;

  // register prg_slew_reg_0
  reg prg_slew_reg_0;
  wire prg_slew_reg_0$D_IN, prg_slew_reg_0$EN;

  // register prg_slew_reg_1
  reg prg_slew_reg_1;
  wire prg_slew_reg_1$D_IN, prg_slew_reg_1$EN;

  // register prg_slew_reg_10
  reg prg_slew_reg_10;
  wire prg_slew_reg_10$D_IN, prg_slew_reg_10$EN;

  // register prg_slew_reg_11
  reg prg_slew_reg_11;
  wire prg_slew_reg_11$D_IN, prg_slew_reg_11$EN;

  // register prg_slew_reg_12
  reg prg_slew_reg_12;
  wire prg_slew_reg_12$D_IN, prg_slew_reg_12$EN;

  // register prg_slew_reg_13
  reg prg_slew_reg_13;
  wire prg_slew_reg_13$D_IN, prg_slew_reg_13$EN;

  // register prg_slew_reg_14
  reg prg_slew_reg_14;
  wire prg_slew_reg_14$D_IN, prg_slew_reg_14$EN;

  // register prg_slew_reg_15
  reg prg_slew_reg_15;
  wire prg_slew_reg_15$D_IN, prg_slew_reg_15$EN;

  // register prg_slew_reg_16
  reg prg_slew_reg_16;
  wire prg_slew_reg_16$D_IN, prg_slew_reg_16$EN;

  // register prg_slew_reg_17
  reg prg_slew_reg_17;
  wire prg_slew_reg_17$D_IN, prg_slew_reg_17$EN;

  // register prg_slew_reg_18
  reg prg_slew_reg_18;
  wire prg_slew_reg_18$D_IN, prg_slew_reg_18$EN;

  // register prg_slew_reg_19
  reg prg_slew_reg_19;
  wire prg_slew_reg_19$D_IN, prg_slew_reg_19$EN;

  // register prg_slew_reg_2
  reg prg_slew_reg_2;
  wire prg_slew_reg_2$D_IN, prg_slew_reg_2$EN;

  // register prg_slew_reg_20
  reg prg_slew_reg_20;
  wire prg_slew_reg_20$D_IN, prg_slew_reg_20$EN;

  // register prg_slew_reg_21
  reg prg_slew_reg_21;
  wire prg_slew_reg_21$D_IN, prg_slew_reg_21$EN;

  // register prg_slew_reg_22
  reg prg_slew_reg_22;
  wire prg_slew_reg_22$D_IN, prg_slew_reg_22$EN;

  // register prg_slew_reg_23
  reg prg_slew_reg_23;
  wire prg_slew_reg_23$D_IN, prg_slew_reg_23$EN;

  // register prg_slew_reg_24
  reg prg_slew_reg_24;
  wire prg_slew_reg_24$D_IN, prg_slew_reg_24$EN;

  // register prg_slew_reg_25
  reg prg_slew_reg_25;
  wire prg_slew_reg_25$D_IN, prg_slew_reg_25$EN;

  // register prg_slew_reg_26
  reg prg_slew_reg_26;
  wire prg_slew_reg_26$D_IN, prg_slew_reg_26$EN;

  // register prg_slew_reg_27
  reg prg_slew_reg_27;
  wire prg_slew_reg_27$D_IN, prg_slew_reg_27$EN;

  // register prg_slew_reg_28
  reg prg_slew_reg_28;
  wire prg_slew_reg_28$D_IN, prg_slew_reg_28$EN;

  // register prg_slew_reg_29
  reg prg_slew_reg_29;
  wire prg_slew_reg_29$D_IN, prg_slew_reg_29$EN;

  // register prg_slew_reg_3
  reg prg_slew_reg_3;
  wire prg_slew_reg_3$D_IN, prg_slew_reg_3$EN;

  // register prg_slew_reg_30
  reg prg_slew_reg_30;
  wire prg_slew_reg_30$D_IN, prg_slew_reg_30$EN;

  // register prg_slew_reg_31
  reg prg_slew_reg_31;
  wire prg_slew_reg_31$D_IN, prg_slew_reg_31$EN;

  // register prg_slew_reg_4
  reg prg_slew_reg_4;
  wire prg_slew_reg_4$D_IN, prg_slew_reg_4$EN;

  // register prg_slew_reg_5
  reg prg_slew_reg_5;
  wire prg_slew_reg_5$D_IN, prg_slew_reg_5$EN;

  // register prg_slew_reg_6
  reg prg_slew_reg_6;
  wire prg_slew_reg_6$D_IN, prg_slew_reg_6$EN;

  // register prg_slew_reg_7
  reg prg_slew_reg_7;
  wire prg_slew_reg_7$D_IN, prg_slew_reg_7$EN;

  // register prg_slew_reg_8
  reg prg_slew_reg_8;
  wire prg_slew_reg_8$D_IN, prg_slew_reg_8$EN;

  // register prg_slew_reg_9
  reg prg_slew_reg_9;
  wire prg_slew_reg_9$D_IN, prg_slew_reg_9$EN;

  // register puq_reg_0
  reg puq_reg_0;
  wire puq_reg_0$D_IN, puq_reg_0$EN;

  // register puq_reg_1
  reg puq_reg_1;
  wire puq_reg_1$D_IN, puq_reg_1$EN;

  // register puq_reg_10
  reg puq_reg_10;
  wire puq_reg_10$D_IN, puq_reg_10$EN;

  // register puq_reg_11
  reg puq_reg_11;
  wire puq_reg_11$D_IN, puq_reg_11$EN;

  // register puq_reg_12
  reg puq_reg_12;
  wire puq_reg_12$D_IN, puq_reg_12$EN;

  // register puq_reg_13
  reg puq_reg_13;
  wire puq_reg_13$D_IN, puq_reg_13$EN;

  // register puq_reg_14
  reg puq_reg_14;
  wire puq_reg_14$D_IN, puq_reg_14$EN;

  // register puq_reg_15
  reg puq_reg_15;
  wire puq_reg_15$D_IN, puq_reg_15$EN;

  // register puq_reg_16
  reg puq_reg_16;
  wire puq_reg_16$D_IN, puq_reg_16$EN;

  // register puq_reg_17
  reg puq_reg_17;
  wire puq_reg_17$D_IN, puq_reg_17$EN;

  // register puq_reg_18
  reg puq_reg_18;
  wire puq_reg_18$D_IN, puq_reg_18$EN;

  // register puq_reg_19
  reg puq_reg_19;
  wire puq_reg_19$D_IN, puq_reg_19$EN;

  // register puq_reg_2
  reg puq_reg_2;
  wire puq_reg_2$D_IN, puq_reg_2$EN;

  // register puq_reg_20
  reg puq_reg_20;
  wire puq_reg_20$D_IN, puq_reg_20$EN;

  // register puq_reg_21
  reg puq_reg_21;
  wire puq_reg_21$D_IN, puq_reg_21$EN;

  // register puq_reg_22
  reg puq_reg_22;
  wire puq_reg_22$D_IN, puq_reg_22$EN;

  // register puq_reg_23
  reg puq_reg_23;
  wire puq_reg_23$D_IN, puq_reg_23$EN;

  // register puq_reg_24
  reg puq_reg_24;
  wire puq_reg_24$D_IN, puq_reg_24$EN;

  // register puq_reg_25
  reg puq_reg_25;
  wire puq_reg_25$D_IN, puq_reg_25$EN;

  // register puq_reg_26
  reg puq_reg_26;
  wire puq_reg_26$D_IN, puq_reg_26$EN;

  // register puq_reg_27
  reg puq_reg_27;
  wire puq_reg_27$D_IN, puq_reg_27$EN;

  // register puq_reg_28
  reg puq_reg_28;
  wire puq_reg_28$D_IN, puq_reg_28$EN;

  // register puq_reg_29
  reg puq_reg_29;
  wire puq_reg_29$D_IN, puq_reg_29$EN;

  // register puq_reg_3
  reg puq_reg_3;
  wire puq_reg_3$D_IN, puq_reg_3$EN;

  // register puq_reg_30
  reg puq_reg_30;
  wire puq_reg_30$D_IN, puq_reg_30$EN;

  // register puq_reg_31
  reg puq_reg_31;
  wire puq_reg_31$D_IN, puq_reg_31$EN;

  // register puq_reg_4
  reg puq_reg_4;
  wire puq_reg_4$D_IN, puq_reg_4$EN;

  // register puq_reg_5
  reg puq_reg_5;
  wire puq_reg_5$D_IN, puq_reg_5$EN;

  // register puq_reg_6
  reg puq_reg_6;
  wire puq_reg_6$D_IN, puq_reg_6$EN;

  // register puq_reg_7
  reg puq_reg_7;
  wire puq_reg_7$D_IN, puq_reg_7$EN;

  // register puq_reg_8
  reg puq_reg_8;
  wire puq_reg_8$D_IN, puq_reg_8$EN;

  // register puq_reg_9
  reg puq_reg_9;
  wire puq_reg_9$D_IN, puq_reg_9$EN;

  // register pwrup_pull_en_reg_0
  reg pwrup_pull_en_reg_0;
  wire pwrup_pull_en_reg_0$D_IN, pwrup_pull_en_reg_0$EN;

  // register pwrup_pull_en_reg_1
  reg pwrup_pull_en_reg_1;
  wire pwrup_pull_en_reg_1$D_IN, pwrup_pull_en_reg_1$EN;

  // register pwrup_pull_en_reg_10
  reg pwrup_pull_en_reg_10;
  wire pwrup_pull_en_reg_10$D_IN, pwrup_pull_en_reg_10$EN;

  // register pwrup_pull_en_reg_11
  reg pwrup_pull_en_reg_11;
  wire pwrup_pull_en_reg_11$D_IN, pwrup_pull_en_reg_11$EN;

  // register pwrup_pull_en_reg_12
  reg pwrup_pull_en_reg_12;
  wire pwrup_pull_en_reg_12$D_IN, pwrup_pull_en_reg_12$EN;

  // register pwrup_pull_en_reg_13
  reg pwrup_pull_en_reg_13;
  wire pwrup_pull_en_reg_13$D_IN, pwrup_pull_en_reg_13$EN;

  // register pwrup_pull_en_reg_14
  reg pwrup_pull_en_reg_14;
  wire pwrup_pull_en_reg_14$D_IN, pwrup_pull_en_reg_14$EN;

  // register pwrup_pull_en_reg_15
  reg pwrup_pull_en_reg_15;
  wire pwrup_pull_en_reg_15$D_IN, pwrup_pull_en_reg_15$EN;

  // register pwrup_pull_en_reg_16
  reg pwrup_pull_en_reg_16;
  wire pwrup_pull_en_reg_16$D_IN, pwrup_pull_en_reg_16$EN;

  // register pwrup_pull_en_reg_17
  reg pwrup_pull_en_reg_17;
  wire pwrup_pull_en_reg_17$D_IN, pwrup_pull_en_reg_17$EN;

  // register pwrup_pull_en_reg_18
  reg pwrup_pull_en_reg_18;
  wire pwrup_pull_en_reg_18$D_IN, pwrup_pull_en_reg_18$EN;

  // register pwrup_pull_en_reg_19
  reg pwrup_pull_en_reg_19;
  wire pwrup_pull_en_reg_19$D_IN, pwrup_pull_en_reg_19$EN;

  // register pwrup_pull_en_reg_2
  reg pwrup_pull_en_reg_2;
  wire pwrup_pull_en_reg_2$D_IN, pwrup_pull_en_reg_2$EN;

  // register pwrup_pull_en_reg_20
  reg pwrup_pull_en_reg_20;
  wire pwrup_pull_en_reg_20$D_IN, pwrup_pull_en_reg_20$EN;

  // register pwrup_pull_en_reg_21
  reg pwrup_pull_en_reg_21;
  wire pwrup_pull_en_reg_21$D_IN, pwrup_pull_en_reg_21$EN;

  // register pwrup_pull_en_reg_22
  reg pwrup_pull_en_reg_22;
  wire pwrup_pull_en_reg_22$D_IN, pwrup_pull_en_reg_22$EN;

  // register pwrup_pull_en_reg_23
  reg pwrup_pull_en_reg_23;
  wire pwrup_pull_en_reg_23$D_IN, pwrup_pull_en_reg_23$EN;

  // register pwrup_pull_en_reg_24
  reg pwrup_pull_en_reg_24;
  wire pwrup_pull_en_reg_24$D_IN, pwrup_pull_en_reg_24$EN;

  // register pwrup_pull_en_reg_25
  reg pwrup_pull_en_reg_25;
  wire pwrup_pull_en_reg_25$D_IN, pwrup_pull_en_reg_25$EN;

  // register pwrup_pull_en_reg_26
  reg pwrup_pull_en_reg_26;
  wire pwrup_pull_en_reg_26$D_IN, pwrup_pull_en_reg_26$EN;

  // register pwrup_pull_en_reg_27
  reg pwrup_pull_en_reg_27;
  wire pwrup_pull_en_reg_27$D_IN, pwrup_pull_en_reg_27$EN;

  // register pwrup_pull_en_reg_28
  reg pwrup_pull_en_reg_28;
  wire pwrup_pull_en_reg_28$D_IN, pwrup_pull_en_reg_28$EN;

  // register pwrup_pull_en_reg_29
  reg pwrup_pull_en_reg_29;
  wire pwrup_pull_en_reg_29$D_IN, pwrup_pull_en_reg_29$EN;

  // register pwrup_pull_en_reg_3
  reg pwrup_pull_en_reg_3;
  wire pwrup_pull_en_reg_3$D_IN, pwrup_pull_en_reg_3$EN;

  // register pwrup_pull_en_reg_30
  reg pwrup_pull_en_reg_30;
  wire pwrup_pull_en_reg_30$D_IN, pwrup_pull_en_reg_30$EN;

  // register pwrup_pull_en_reg_31
  reg pwrup_pull_en_reg_31;
  wire pwrup_pull_en_reg_31$D_IN, pwrup_pull_en_reg_31$EN;

  // register pwrup_pull_en_reg_4
  reg pwrup_pull_en_reg_4;
  wire pwrup_pull_en_reg_4$D_IN, pwrup_pull_en_reg_4$EN;

  // register pwrup_pull_en_reg_5
  reg pwrup_pull_en_reg_5;
  wire pwrup_pull_en_reg_5$D_IN, pwrup_pull_en_reg_5$EN;

  // register pwrup_pull_en_reg_6
  reg pwrup_pull_en_reg_6;
  wire pwrup_pull_en_reg_6$D_IN, pwrup_pull_en_reg_6$EN;

  // register pwrup_pull_en_reg_7
  reg pwrup_pull_en_reg_7;
  wire pwrup_pull_en_reg_7$D_IN, pwrup_pull_en_reg_7$EN;

  // register pwrup_pull_en_reg_8
  reg pwrup_pull_en_reg_8;
  wire pwrup_pull_en_reg_8$D_IN, pwrup_pull_en_reg_8$EN;

  // register pwrup_pull_en_reg_9
  reg pwrup_pull_en_reg_9;
  wire pwrup_pull_en_reg_9$D_IN, pwrup_pull_en_reg_9$EN;

  // register pwrupzhl_reg_0
  reg pwrupzhl_reg_0;
  wire pwrupzhl_reg_0$D_IN, pwrupzhl_reg_0$EN;

  // register pwrupzhl_reg_1
  reg pwrupzhl_reg_1;
  wire pwrupzhl_reg_1$D_IN, pwrupzhl_reg_1$EN;

  // register pwrupzhl_reg_10
  reg pwrupzhl_reg_10;
  wire pwrupzhl_reg_10$D_IN, pwrupzhl_reg_10$EN;

  // register pwrupzhl_reg_11
  reg pwrupzhl_reg_11;
  wire pwrupzhl_reg_11$D_IN, pwrupzhl_reg_11$EN;

  // register pwrupzhl_reg_12
  reg pwrupzhl_reg_12;
  wire pwrupzhl_reg_12$D_IN, pwrupzhl_reg_12$EN;

  // register pwrupzhl_reg_13
  reg pwrupzhl_reg_13;
  wire pwrupzhl_reg_13$D_IN, pwrupzhl_reg_13$EN;

  // register pwrupzhl_reg_14
  reg pwrupzhl_reg_14;
  wire pwrupzhl_reg_14$D_IN, pwrupzhl_reg_14$EN;

  // register pwrupzhl_reg_15
  reg pwrupzhl_reg_15;
  wire pwrupzhl_reg_15$D_IN, pwrupzhl_reg_15$EN;

  // register pwrupzhl_reg_16
  reg pwrupzhl_reg_16;
  wire pwrupzhl_reg_16$D_IN, pwrupzhl_reg_16$EN;

  // register pwrupzhl_reg_17
  reg pwrupzhl_reg_17;
  wire pwrupzhl_reg_17$D_IN, pwrupzhl_reg_17$EN;

  // register pwrupzhl_reg_18
  reg pwrupzhl_reg_18;
  wire pwrupzhl_reg_18$D_IN, pwrupzhl_reg_18$EN;

  // register pwrupzhl_reg_19
  reg pwrupzhl_reg_19;
  wire pwrupzhl_reg_19$D_IN, pwrupzhl_reg_19$EN;

  // register pwrupzhl_reg_2
  reg pwrupzhl_reg_2;
  wire pwrupzhl_reg_2$D_IN, pwrupzhl_reg_2$EN;

  // register pwrupzhl_reg_20
  reg pwrupzhl_reg_20;
  wire pwrupzhl_reg_20$D_IN, pwrupzhl_reg_20$EN;

  // register pwrupzhl_reg_21
  reg pwrupzhl_reg_21;
  wire pwrupzhl_reg_21$D_IN, pwrupzhl_reg_21$EN;

  // register pwrupzhl_reg_22
  reg pwrupzhl_reg_22;
  wire pwrupzhl_reg_22$D_IN, pwrupzhl_reg_22$EN;

  // register pwrupzhl_reg_23
  reg pwrupzhl_reg_23;
  wire pwrupzhl_reg_23$D_IN, pwrupzhl_reg_23$EN;

  // register pwrupzhl_reg_24
  reg pwrupzhl_reg_24;
  wire pwrupzhl_reg_24$D_IN, pwrupzhl_reg_24$EN;

  // register pwrupzhl_reg_25
  reg pwrupzhl_reg_25;
  wire pwrupzhl_reg_25$D_IN, pwrupzhl_reg_25$EN;

  // register pwrupzhl_reg_26
  reg pwrupzhl_reg_26;
  wire pwrupzhl_reg_26$D_IN, pwrupzhl_reg_26$EN;

  // register pwrupzhl_reg_27
  reg pwrupzhl_reg_27;
  wire pwrupzhl_reg_27$D_IN, pwrupzhl_reg_27$EN;

  // register pwrupzhl_reg_28
  reg pwrupzhl_reg_28;
  wire pwrupzhl_reg_28$D_IN, pwrupzhl_reg_28$EN;

  // register pwrupzhl_reg_29
  reg pwrupzhl_reg_29;
  wire pwrupzhl_reg_29$D_IN, pwrupzhl_reg_29$EN;

  // register pwrupzhl_reg_3
  reg pwrupzhl_reg_3;
  wire pwrupzhl_reg_3$D_IN, pwrupzhl_reg_3$EN;

  // register pwrupzhl_reg_30
  reg pwrupzhl_reg_30;
  wire pwrupzhl_reg_30$D_IN, pwrupzhl_reg_30$EN;

  // register pwrupzhl_reg_31
  reg pwrupzhl_reg_31;
  wire pwrupzhl_reg_31$D_IN, pwrupzhl_reg_31$EN;

  // register pwrupzhl_reg_4
  reg pwrupzhl_reg_4;
  wire pwrupzhl_reg_4$D_IN, pwrupzhl_reg_4$EN;

  // register pwrupzhl_reg_5
  reg pwrupzhl_reg_5;
  wire pwrupzhl_reg_5$D_IN, pwrupzhl_reg_5$EN;

  // register pwrupzhl_reg_6
  reg pwrupzhl_reg_6;
  wire pwrupzhl_reg_6$D_IN, pwrupzhl_reg_6$EN;

  // register pwrupzhl_reg_7
  reg pwrupzhl_reg_7;
  wire pwrupzhl_reg_7$D_IN, pwrupzhl_reg_7$EN;

  // register pwrupzhl_reg_8
  reg pwrupzhl_reg_8;
  wire pwrupzhl_reg_8$D_IN, pwrupzhl_reg_8$EN;

  // register pwrupzhl_reg_9
  reg pwrupzhl_reg_9;
  wire pwrupzhl_reg_9$D_IN, pwrupzhl_reg_9$EN;

  // register toplic_0
  reg toplic_0;
  wire toplic_0$D_IN, toplic_0$EN;

  // register toplic_1
  reg toplic_1;
  wire toplic_1$D_IN, toplic_1$EN;

  // register toplic_10
  reg toplic_10;
  wire toplic_10$D_IN, toplic_10$EN;

  // register toplic_11
  reg toplic_11;
  wire toplic_11$D_IN, toplic_11$EN;

  // register toplic_12
  reg toplic_12;
  wire toplic_12$D_IN, toplic_12$EN;

  // register toplic_13
  reg toplic_13;
  wire toplic_13$D_IN, toplic_13$EN;

  // register toplic_14
  reg toplic_14;
  wire toplic_14$D_IN, toplic_14$EN;

  // register toplic_15
  reg toplic_15;
  wire toplic_15$D_IN, toplic_15$EN;

  // register toplic_16
  reg toplic_16;
  wire toplic_16$D_IN, toplic_16$EN;

  // register toplic_17
  reg toplic_17;
  wire toplic_17$D_IN, toplic_17$EN;

  // register toplic_18
  reg toplic_18;
  wire toplic_18$D_IN, toplic_18$EN;

  // register toplic_19
  reg toplic_19;
  wire toplic_19$D_IN, toplic_19$EN;

  // register toplic_2
  reg toplic_2;
  wire toplic_2$D_IN, toplic_2$EN;

  // register toplic_20
  reg toplic_20;
  wire toplic_20$D_IN, toplic_20$EN;

  // register toplic_21
  reg toplic_21;
  wire toplic_21$D_IN, toplic_21$EN;

  // register toplic_22
  reg toplic_22;
  wire toplic_22$D_IN, toplic_22$EN;

  // register toplic_23
  reg toplic_23;
  wire toplic_23$D_IN, toplic_23$EN;

  // register toplic_24
  reg toplic_24;
  wire toplic_24$D_IN, toplic_24$EN;

  // register toplic_25
  reg toplic_25;
  wire toplic_25$D_IN, toplic_25$EN;

  // register toplic_26
  reg toplic_26;
  wire toplic_26$D_IN, toplic_26$EN;

  // register toplic_27
  reg toplic_27;
  wire toplic_27$D_IN, toplic_27$EN;

  // register toplic_28
  reg toplic_28;
  wire toplic_28$D_IN, toplic_28$EN;

  // register toplic_29
  reg toplic_29;
  wire toplic_29$D_IN, toplic_29$EN;

  // register toplic_3
  reg toplic_3;
  wire toplic_3$D_IN, toplic_3$EN;

  // register toplic_30
  reg toplic_30;
  wire toplic_30$D_IN, toplic_30$EN;

  // register toplic_31
  reg toplic_31;
  wire toplic_31$D_IN, toplic_31$EN;

  // register toplic_4
  reg toplic_4;
  wire toplic_4$D_IN, toplic_4$EN;

  // register toplic_5
  reg toplic_5;
  wire toplic_5$D_IN, toplic_5$EN;

  // register toplic_6
  reg toplic_6;
  wire toplic_6$D_IN, toplic_6$EN;

  // register toplic_7
  reg toplic_7;
  wire toplic_7$D_IN, toplic_7$EN;

  // register toplic_8
  reg toplic_8;
  wire toplic_8$D_IN, toplic_8$EN;

  // register toplic_9
  reg toplic_9;
  wire toplic_9$D_IN, toplic_9$EN;

  // ports of submodule s_xactor_f_rd_addr
  wire [74 : 0] s_xactor_f_rd_addr$D_IN, s_xactor_f_rd_addr$D_OUT;
  wire s_xactor_f_rd_addr$CLR,
       s_xactor_f_rd_addr$DEQ,
       s_xactor_f_rd_addr$EMPTY_N,
       s_xactor_f_rd_addr$ENQ,
       s_xactor_f_rd_addr$FULL_N;

  // ports of submodule s_xactor_f_rd_data
  wire [80 : 0] s_xactor_f_rd_data$D_IN, s_xactor_f_rd_data$D_OUT;
  wire s_xactor_f_rd_data$CLR,
       s_xactor_f_rd_data$DEQ,
       s_xactor_f_rd_data$EMPTY_N,
       s_xactor_f_rd_data$ENQ,
       s_xactor_f_rd_data$FULL_N;

  // ports of submodule s_xactor_f_wr_addr
  wire [74 : 0] s_xactor_f_wr_addr$D_IN, s_xactor_f_wr_addr$D_OUT;
  wire s_xactor_f_wr_addr$CLR,
       s_xactor_f_wr_addr$DEQ,
       s_xactor_f_wr_addr$EMPTY_N,
       s_xactor_f_wr_addr$ENQ,
       s_xactor_f_wr_addr$FULL_N;

  // ports of submodule s_xactor_f_wr_data
  wire [76 : 0] s_xactor_f_wr_data$D_IN, s_xactor_f_wr_data$D_OUT;
  wire s_xactor_f_wr_data$CLR,
       s_xactor_f_wr_data$DEQ,
       s_xactor_f_wr_data$EMPTY_N,
       s_xactor_f_wr_data$ENQ,
       s_xactor_f_wr_data$FULL_N;

  // ports of submodule s_xactor_f_wr_resp
  wire [15 : 0] s_xactor_f_wr_resp$D_IN, s_xactor_f_wr_resp$D_OUT;
  wire s_xactor_f_wr_resp$CLR,
       s_xactor_f_wr_resp$DEQ,
       s_xactor_f_wr_resp$EMPTY_N,
       s_xactor_f_wr_resp$ENQ,
       s_xactor_f_wr_resp$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_capture_interrupt,
       CAN_FIRE_RL_rl_rd_respond,
       CAN_FIRE_RL_rl_wr_respond,
       CAN_FIRE_axi_slave_m_arvalid,
       CAN_FIRE_axi_slave_m_awvalid,
       CAN_FIRE_axi_slave_m_bready,
       CAN_FIRE_axi_slave_m_rready,
       CAN_FIRE_axi_slave_m_wvalid,
       CAN_FIRE_gpio_in,
       CAN_FIRE_to_plic_0__write,
       CAN_FIRE_to_plic_10__write,
       CAN_FIRE_to_plic_11__write,
       CAN_FIRE_to_plic_12__write,
       CAN_FIRE_to_plic_13__write,
       CAN_FIRE_to_plic_14__write,
       CAN_FIRE_to_plic_15__write,
       CAN_FIRE_to_plic_16__write,
       CAN_FIRE_to_plic_17__write,
       CAN_FIRE_to_plic_18__write,
       CAN_FIRE_to_plic_19__write,
       CAN_FIRE_to_plic_1__write,
       CAN_FIRE_to_plic_20__write,
       CAN_FIRE_to_plic_21__write,
       CAN_FIRE_to_plic_22__write,
       CAN_FIRE_to_plic_23__write,
       CAN_FIRE_to_plic_24__write,
       CAN_FIRE_to_plic_25__write,
       CAN_FIRE_to_plic_26__write,
       CAN_FIRE_to_plic_27__write,
       CAN_FIRE_to_plic_28__write,
       CAN_FIRE_to_plic_29__write,
       CAN_FIRE_to_plic_2__write,
       CAN_FIRE_to_plic_30__write,
       CAN_FIRE_to_plic_31__write,
       CAN_FIRE_to_plic_3__write,
       CAN_FIRE_to_plic_4__write,
       CAN_FIRE_to_plic_5__write,
       CAN_FIRE_to_plic_6__write,
       CAN_FIRE_to_plic_7__write,
       CAN_FIRE_to_plic_8__write,
       CAN_FIRE_to_plic_9__write,
       WILL_FIRE_RL_capture_interrupt,
       WILL_FIRE_RL_rl_rd_respond,
       WILL_FIRE_RL_rl_wr_respond,
       WILL_FIRE_axi_slave_m_arvalid,
       WILL_FIRE_axi_slave_m_awvalid,
       WILL_FIRE_axi_slave_m_bready,
       WILL_FIRE_axi_slave_m_rready,
       WILL_FIRE_axi_slave_m_wvalid,
       WILL_FIRE_gpio_in,
       WILL_FIRE_to_plic_0__write,
       WILL_FIRE_to_plic_10__write,
       WILL_FIRE_to_plic_11__write,
       WILL_FIRE_to_plic_12__write,
       WILL_FIRE_to_plic_13__write,
       WILL_FIRE_to_plic_14__write,
       WILL_FIRE_to_plic_15__write,
       WILL_FIRE_to_plic_16__write,
       WILL_FIRE_to_plic_17__write,
       WILL_FIRE_to_plic_18__write,
       WILL_FIRE_to_plic_19__write,
       WILL_FIRE_to_plic_1__write,
       WILL_FIRE_to_plic_20__write,
       WILL_FIRE_to_plic_21__write,
       WILL_FIRE_to_plic_22__write,
       WILL_FIRE_to_plic_23__write,
       WILL_FIRE_to_plic_24__write,
       WILL_FIRE_to_plic_25__write,
       WILL_FIRE_to_plic_26__write,
       WILL_FIRE_to_plic_27__write,
       WILL_FIRE_to_plic_28__write,
       WILL_FIRE_to_plic_29__write,
       WILL_FIRE_to_plic_2__write,
       WILL_FIRE_to_plic_30__write,
       WILL_FIRE_to_plic_31__write,
       WILL_FIRE_to_plic_3__write,
       WILL_FIRE_to_plic_4__write,
       WILL_FIRE_to_plic_5__write,
       WILL_FIRE_to_plic_6__write,
       WILL_FIRE_to_plic_7__write,
       WILL_FIRE_to_plic_8__write,
       WILL_FIRE_to_plic_9__write;

  // inputs to muxes for submodule ports
  wire MUX_toplic_0$write_1__VAL_1,
       MUX_toplic_1$write_1__VAL_1,
       MUX_toplic_10$write_1__VAL_1,
       MUX_toplic_11$write_1__VAL_1,
       MUX_toplic_12$write_1__VAL_1,
       MUX_toplic_13$write_1__VAL_1,
       MUX_toplic_14$write_1__VAL_1,
       MUX_toplic_15$write_1__VAL_1,
       MUX_toplic_16$write_1__VAL_1,
       MUX_toplic_17$write_1__VAL_1,
       MUX_toplic_18$write_1__VAL_1,
       MUX_toplic_19$write_1__VAL_1,
       MUX_toplic_2$write_1__VAL_1,
       MUX_toplic_20$write_1__VAL_1,
       MUX_toplic_21$write_1__VAL_1,
       MUX_toplic_22$write_1__VAL_1,
       MUX_toplic_23$write_1__VAL_1,
       MUX_toplic_24$write_1__VAL_1,
       MUX_toplic_25$write_1__VAL_1,
       MUX_toplic_26$write_1__VAL_1,
       MUX_toplic_27$write_1__VAL_1,
       MUX_toplic_28$write_1__VAL_1,
       MUX_toplic_29$write_1__VAL_1,
       MUX_toplic_3$write_1__VAL_1,
       MUX_toplic_30$write_1__VAL_1,
       MUX_toplic_31$write_1__VAL_1,
       MUX_toplic_4$write_1__VAL_1,
       MUX_toplic_5$write_1__VAL_1,
       MUX_toplic_6$write_1__VAL_1,
       MUX_toplic_7$write_1__VAL_1,
       MUX_toplic_8$write_1__VAL_1,
       MUX_toplic_9$write_1__VAL_1;

  // remaining internal signals
  reg [63 : 0] x_rdata__h60009;
  reg [1 : 0] CASE_s_xactor_f_rd_addrD_OUT_BITS_48_TO_43_0x_ETC__q13,
	      CASE_s_xactor_f_wr_addrD_OUT_BITS_48_TO_43_0x_ETC__q1;
  wire [63 : 0] _theResult___fst_rdata__h59604,
		_theResult___fst_rdata__h59639,
		_theResult___fst_rdata__h59674,
		_theResult___fst_rdata__h59709,
		_theResult___fst_rdata__h59744,
		_theResult___fst_rdata__h59779,
		_theResult___fst_rdata__h59814,
		_theResult___fst_rdata__h59849,
		_theResult___fst_rdata__h59884,
		_theResult___fst_rdata__h59919,
		_theResult___fst_rdata__h59959;
  wire [31 : 0] IF_datain_register_0_THEN_1_ELSE_0__q2,
		IF_direction_reg_0_THEN_1_ELSE_0__q3,
		IF_drv0_reg_0_THEN_1_ELSE_0__q4,
		IF_drv1_reg_0_THEN_1_ELSE_0__q5,
		IF_drv2_reg_0_THEN_1_ELSE_0__q6,
		IF_pd_reg_0_THEN_1_ELSE_0__q7,
		IF_ppen_reg_0_THEN_1_ELSE_0__q8,
		IF_prg_slew_reg_0_THEN_1_ELSE_0__q9,
		IF_puq_reg_0_THEN_1_ELSE_0__q10,
		IF_pwrup_pull_en_reg_0_THEN_1_ELSE_0__q12,
		IF_pwrupzhl_reg_0_THEN_1_ELSE_0__q11;
  wire [3 : 0] datain_register_3_read__5_CONCAT_datain_regist_ETC___d243,
	       direction_reg_3_read__3_CONCAT_direction_reg_2_ETC___d224,
	       drv0_reg_3_read__87_CONCAT_drv0_reg_2_read__88_ETC___d294,
	       drv1_reg_3_read__38_CONCAT_drv1_reg_2_read__39_ETC___d345,
	       drv2_reg_3_read__89_CONCAT_drv2_reg_2_read__90_ETC___d396,
	       pd_reg_3_read__40_CONCAT_pd_reg_2_read__41_CON_ETC___d447,
	       ppen_reg_3_read__91_CONCAT_ppen_reg_2_read__92_ETC___d498,
	       prg_slew_reg_3_read__42_CONCAT_prg_slew_reg_2__ETC___d549,
	       puq_reg_3_read__93_CONCAT_puq_reg_2_read__94_C_ETC___d600,
	       pwrup_pull_en_reg_3_read__95_CONCAT_pwrup_pull_ETC___d702,
	       pwrupzhl_reg_3_read__44_CONCAT_pwrupzhl_reg_2__ETC___d651;

  // action method gpio_in
  assign CAN_FIRE_gpio_in = 1'd1 ;
  assign WILL_FIRE_gpio_in = 1'd1 ;

  // value method gpio_out
  assign gpio_out =
	     { dataout_register_31,
	       dataout_register_30,
	       dataout_register_29,
	       dataout_register_28,
	       dataout_register_27,
	       dataout_register_26,
	       dataout_register_25,
	       dataout_register_24,
	       dataout_register_23,
	       dataout_register_22,
	       dataout_register_21,
	       dataout_register_20,
	       dataout_register_19,
	       dataout_register_18,
	       dataout_register_17,
	       dataout_register_16,
	       dataout_register_15,
	       dataout_register_14,
	       dataout_register_13,
	       dataout_register_12,
	       dataout_register_11,
	       dataout_register_10,
	       dataout_register_9,
	       dataout_register_8,
	       dataout_register_7,
	       dataout_register_6,
	       dataout_register_5,
	       dataout_register_4,
	       dataout_register_3,
	       dataout_register_2,
	       dataout_register_1,
	       dataout_register_0 } ;
  assign RDY_gpio_out = 1'd1 ;

  // value method gpio_out_en
  assign gpio_out_en =
	     { direction_reg_31,
	       direction_reg_30,
	       direction_reg_29,
	       direction_reg_28,
	       direction_reg_27,
	       direction_reg_26,
	       direction_reg_25,
	       direction_reg_24,
	       direction_reg_23,
	       direction_reg_22,
	       direction_reg_21,
	       direction_reg_20,
	       direction_reg_19,
	       direction_reg_18,
	       direction_reg_17,
	       direction_reg_16,
	       direction_reg_15,
	       direction_reg_14,
	       direction_reg_13,
	       direction_reg_12,
	       direction_reg_11,
	       direction_reg_10,
	       direction_reg_9,
	       direction_reg_8,
	       direction_reg_7,
	       direction_reg_6,
	       direction_reg_5,
	       direction_reg_4,
	       direction_reg_3,
	       direction_reg_2,
	       direction_reg_1,
	       direction_reg_0 } ;
  assign RDY_gpio_out_en = 1'd1 ;

  // value method gpio_DRV0
  assign gpio_DRV0 =
	     { drv0_reg_31,
	       drv0_reg_30,
	       drv0_reg_29,
	       drv0_reg_28,
	       drv0_reg_27,
	       drv0_reg_26,
	       drv0_reg_25,
	       drv0_reg_24,
	       drv0_reg_23,
	       drv0_reg_22,
	       drv0_reg_21,
	       drv0_reg_20,
	       drv0_reg_19,
	       drv0_reg_18,
	       drv0_reg_17,
	       drv0_reg_16,
	       drv0_reg_15,
	       drv0_reg_14,
	       drv0_reg_13,
	       drv0_reg_12,
	       drv0_reg_11,
	       drv0_reg_10,
	       drv0_reg_9,
	       drv0_reg_8,
	       drv0_reg_7,
	       drv0_reg_6,
	       drv0_reg_5,
	       drv0_reg_4,
	       drv0_reg_3,
	       drv0_reg_2,
	       drv0_reg_1,
	       drv0_reg_0 } ;
  assign RDY_gpio_DRV0 = 1'd1 ;

  // value method gpio_DRV1
  assign gpio_DRV1 =
	     { drv1_reg_31,
	       drv1_reg_30,
	       drv1_reg_29,
	       drv1_reg_28,
	       drv1_reg_27,
	       drv1_reg_26,
	       drv1_reg_25,
	       drv1_reg_24,
	       drv1_reg_23,
	       drv1_reg_22,
	       drv1_reg_21,
	       drv1_reg_20,
	       drv1_reg_19,
	       drv1_reg_18,
	       drv1_reg_17,
	       drv1_reg_16,
	       drv1_reg_15,
	       drv1_reg_14,
	       drv1_reg_13,
	       drv1_reg_12,
	       drv1_reg_11,
	       drv1_reg_10,
	       drv1_reg_9,
	       drv1_reg_8,
	       drv1_reg_7,
	       drv1_reg_6,
	       drv1_reg_5,
	       drv1_reg_4,
	       drv1_reg_3,
	       drv1_reg_2,
	       drv1_reg_1,
	       drv1_reg_0 } ;
  assign RDY_gpio_DRV1 = 1'd1 ;

  // value method gpio_DRV2
  assign gpio_DRV2 =
	     { drv2_reg_31,
	       drv2_reg_30,
	       drv2_reg_29,
	       drv2_reg_28,
	       drv2_reg_27,
	       drv2_reg_26,
	       drv2_reg_25,
	       drv2_reg_24,
	       drv2_reg_23,
	       drv2_reg_22,
	       drv2_reg_21,
	       drv2_reg_20,
	       drv2_reg_19,
	       drv2_reg_18,
	       drv2_reg_17,
	       drv2_reg_16,
	       drv2_reg_15,
	       drv2_reg_14,
	       drv2_reg_13,
	       drv2_reg_12,
	       drv2_reg_11,
	       drv2_reg_10,
	       drv2_reg_9,
	       drv2_reg_8,
	       drv2_reg_7,
	       drv2_reg_6,
	       drv2_reg_5,
	       drv2_reg_4,
	       drv2_reg_3,
	       drv2_reg_2,
	       drv2_reg_1,
	       drv2_reg_0 } ;
  assign RDY_gpio_DRV2 = 1'd1 ;

  // value method gpio_PD
  assign gpio_PD =
	     { pd_reg_31,
	       pd_reg_30,
	       pd_reg_29,
	       pd_reg_28,
	       pd_reg_27,
	       pd_reg_26,
	       pd_reg_25,
	       pd_reg_24,
	       pd_reg_23,
	       pd_reg_22,
	       pd_reg_21,
	       pd_reg_20,
	       pd_reg_19,
	       pd_reg_18,
	       pd_reg_17,
	       pd_reg_16,
	       pd_reg_15,
	       pd_reg_14,
	       pd_reg_13,
	       pd_reg_12,
	       pd_reg_11,
	       pd_reg_10,
	       pd_reg_9,
	       pd_reg_8,
	       pd_reg_7,
	       pd_reg_6,
	       pd_reg_5,
	       pd_reg_4,
	       pd_reg_3,
	       pd_reg_2,
	       pd_reg_1,
	       pd_reg_0 } ;
  assign RDY_gpio_PD = 1'd1 ;

  // value method gpio_PPEN
  assign gpio_PPEN =
	     { ppen_reg_31,
	       ppen_reg_30,
	       ppen_reg_29,
	       ppen_reg_28,
	       ppen_reg_27,
	       ppen_reg_26,
	       ppen_reg_25,
	       ppen_reg_24,
	       ppen_reg_23,
	       ppen_reg_22,
	       ppen_reg_21,
	       ppen_reg_20,
	       ppen_reg_19,
	       ppen_reg_18,
	       ppen_reg_17,
	       ppen_reg_16,
	       ppen_reg_15,
	       ppen_reg_14,
	       ppen_reg_13,
	       ppen_reg_12,
	       ppen_reg_11,
	       ppen_reg_10,
	       ppen_reg_9,
	       ppen_reg_8,
	       ppen_reg_7,
	       ppen_reg_6,
	       ppen_reg_5,
	       ppen_reg_4,
	       ppen_reg_3,
	       ppen_reg_2,
	       ppen_reg_1,
	       ppen_reg_0 } ;
  assign RDY_gpio_PPEN = 1'd1 ;

  // value method gpio_PRG_SLEW
  assign gpio_PRG_SLEW =
	     { prg_slew_reg_31,
	       prg_slew_reg_30,
	       prg_slew_reg_29,
	       prg_slew_reg_28,
	       prg_slew_reg_27,
	       prg_slew_reg_26,
	       prg_slew_reg_25,
	       prg_slew_reg_24,
	       prg_slew_reg_23,
	       prg_slew_reg_22,
	       prg_slew_reg_21,
	       prg_slew_reg_20,
	       prg_slew_reg_19,
	       prg_slew_reg_18,
	       prg_slew_reg_17,
	       prg_slew_reg_16,
	       prg_slew_reg_15,
	       prg_slew_reg_14,
	       prg_slew_reg_13,
	       prg_slew_reg_12,
	       prg_slew_reg_11,
	       prg_slew_reg_10,
	       prg_slew_reg_9,
	       prg_slew_reg_8,
	       prg_slew_reg_7,
	       prg_slew_reg_6,
	       prg_slew_reg_5,
	       prg_slew_reg_4,
	       prg_slew_reg_3,
	       prg_slew_reg_2,
	       prg_slew_reg_1,
	       prg_slew_reg_0 } ;
  assign RDY_gpio_PRG_SLEW = 1'd1 ;

  // value method gpio_PUQ
  assign gpio_PUQ =
	     { puq_reg_31,
	       puq_reg_30,
	       puq_reg_29,
	       puq_reg_28,
	       puq_reg_27,
	       puq_reg_26,
	       puq_reg_25,
	       puq_reg_24,
	       puq_reg_23,
	       puq_reg_22,
	       puq_reg_21,
	       puq_reg_20,
	       puq_reg_19,
	       puq_reg_18,
	       puq_reg_17,
	       puq_reg_16,
	       puq_reg_15,
	       puq_reg_14,
	       puq_reg_13,
	       puq_reg_12,
	       puq_reg_11,
	       puq_reg_10,
	       puq_reg_9,
	       puq_reg_8,
	       puq_reg_7,
	       puq_reg_6,
	       puq_reg_5,
	       puq_reg_4,
	       puq_reg_3,
	       puq_reg_2,
	       puq_reg_1,
	       puq_reg_0 } ;
  assign RDY_gpio_PUQ = 1'd1 ;

  // value method gpio_PWRUPZHL
  assign gpio_PWRUPZHL =
	     { pwrupzhl_reg_31,
	       pwrupzhl_reg_30,
	       pwrupzhl_reg_29,
	       pwrupzhl_reg_28,
	       pwrupzhl_reg_27,
	       pwrupzhl_reg_26,
	       pwrupzhl_reg_25,
	       pwrupzhl_reg_24,
	       pwrupzhl_reg_23,
	       pwrupzhl_reg_22,
	       pwrupzhl_reg_21,
	       pwrupzhl_reg_20,
	       pwrupzhl_reg_19,
	       pwrupzhl_reg_18,
	       pwrupzhl_reg_17,
	       pwrupzhl_reg_16,
	       pwrupzhl_reg_15,
	       pwrupzhl_reg_14,
	       pwrupzhl_reg_13,
	       pwrupzhl_reg_12,
	       pwrupzhl_reg_11,
	       pwrupzhl_reg_10,
	       pwrupzhl_reg_9,
	       pwrupzhl_reg_8,
	       pwrupzhl_reg_7,
	       pwrupzhl_reg_6,
	       pwrupzhl_reg_5,
	       pwrupzhl_reg_4,
	       pwrupzhl_reg_3,
	       pwrupzhl_reg_2,
	       pwrupzhl_reg_1,
	       pwrupzhl_reg_0 } ;
  assign RDY_gpio_PWRUPZHL = 1'd1 ;

  // value method gpio_PWRUP_PULL_EN
  assign gpio_PWRUP_PULL_EN =
	     { pwrup_pull_en_reg_31,
	       pwrup_pull_en_reg_30,
	       pwrup_pull_en_reg_29,
	       pwrup_pull_en_reg_28,
	       pwrup_pull_en_reg_27,
	       pwrup_pull_en_reg_26,
	       pwrup_pull_en_reg_25,
	       pwrup_pull_en_reg_24,
	       pwrup_pull_en_reg_23,
	       pwrup_pull_en_reg_22,
	       pwrup_pull_en_reg_21,
	       pwrup_pull_en_reg_20,
	       pwrup_pull_en_reg_19,
	       pwrup_pull_en_reg_18,
	       pwrup_pull_en_reg_17,
	       pwrup_pull_en_reg_16,
	       pwrup_pull_en_reg_15,
	       pwrup_pull_en_reg_14,
	       pwrup_pull_en_reg_13,
	       pwrup_pull_en_reg_12,
	       pwrup_pull_en_reg_11,
	       pwrup_pull_en_reg_10,
	       pwrup_pull_en_reg_9,
	       pwrup_pull_en_reg_8,
	       pwrup_pull_en_reg_7,
	       pwrup_pull_en_reg_6,
	       pwrup_pull_en_reg_5,
	       pwrup_pull_en_reg_4,
	       pwrup_pull_en_reg_3,
	       pwrup_pull_en_reg_2,
	       pwrup_pull_en_reg_1,
	       pwrup_pull_en_reg_0 } ;
  assign RDY_gpio_PWRUP_PULL_EN = 1'd1 ;

  // action method to_plic_0__write
  assign RDY_to_plic_0__write = 1'd1 ;
  assign CAN_FIRE_to_plic_0__write = 1'd1 ;
  assign WILL_FIRE_to_plic_0__write = EN_to_plic_0__write ;

  // value method to_plic_0__read
  assign to_plic_0__read = toplic_0 ;
  assign RDY_to_plic_0__read = 1'd1 ;

  // action method to_plic_1__write
  assign RDY_to_plic_1__write = 1'd1 ;
  assign CAN_FIRE_to_plic_1__write = 1'd1 ;
  assign WILL_FIRE_to_plic_1__write = EN_to_plic_1__write ;

  // value method to_plic_1__read
  assign to_plic_1__read = toplic_1 ;
  assign RDY_to_plic_1__read = 1'd1 ;

  // action method to_plic_2__write
  assign RDY_to_plic_2__write = 1'd1 ;
  assign CAN_FIRE_to_plic_2__write = 1'd1 ;
  assign WILL_FIRE_to_plic_2__write = EN_to_plic_2__write ;

  // value method to_plic_2__read
  assign to_plic_2__read = toplic_2 ;
  assign RDY_to_plic_2__read = 1'd1 ;

  // action method to_plic_3__write
  assign RDY_to_plic_3__write = 1'd1 ;
  assign CAN_FIRE_to_plic_3__write = 1'd1 ;
  assign WILL_FIRE_to_plic_3__write = EN_to_plic_3__write ;

  // value method to_plic_3__read
  assign to_plic_3__read = toplic_3 ;
  assign RDY_to_plic_3__read = 1'd1 ;

  // action method to_plic_4__write
  assign RDY_to_plic_4__write = 1'd1 ;
  assign CAN_FIRE_to_plic_4__write = 1'd1 ;
  assign WILL_FIRE_to_plic_4__write = EN_to_plic_4__write ;

  // value method to_plic_4__read
  assign to_plic_4__read = toplic_4 ;
  assign RDY_to_plic_4__read = 1'd1 ;

  // action method to_plic_5__write
  assign RDY_to_plic_5__write = 1'd1 ;
  assign CAN_FIRE_to_plic_5__write = 1'd1 ;
  assign WILL_FIRE_to_plic_5__write = EN_to_plic_5__write ;

  // value method to_plic_5__read
  assign to_plic_5__read = toplic_5 ;
  assign RDY_to_plic_5__read = 1'd1 ;

  // action method to_plic_6__write
  assign RDY_to_plic_6__write = 1'd1 ;
  assign CAN_FIRE_to_plic_6__write = 1'd1 ;
  assign WILL_FIRE_to_plic_6__write = EN_to_plic_6__write ;

  // value method to_plic_6__read
  assign to_plic_6__read = toplic_6 ;
  assign RDY_to_plic_6__read = 1'd1 ;

  // action method to_plic_7__write
  assign RDY_to_plic_7__write = 1'd1 ;
  assign CAN_FIRE_to_plic_7__write = 1'd1 ;
  assign WILL_FIRE_to_plic_7__write = EN_to_plic_7__write ;

  // value method to_plic_7__read
  assign to_plic_7__read = toplic_7 ;
  assign RDY_to_plic_7__read = 1'd1 ;

  // action method to_plic_8__write
  assign RDY_to_plic_8__write = 1'd1 ;
  assign CAN_FIRE_to_plic_8__write = 1'd1 ;
  assign WILL_FIRE_to_plic_8__write = EN_to_plic_8__write ;

  // value method to_plic_8__read
  assign to_plic_8__read = toplic_8 ;
  assign RDY_to_plic_8__read = 1'd1 ;

  // action method to_plic_9__write
  assign RDY_to_plic_9__write = 1'd1 ;
  assign CAN_FIRE_to_plic_9__write = 1'd1 ;
  assign WILL_FIRE_to_plic_9__write = EN_to_plic_9__write ;

  // value method to_plic_9__read
  assign to_plic_9__read = toplic_9 ;
  assign RDY_to_plic_9__read = 1'd1 ;

  // action method to_plic_10__write
  assign RDY_to_plic_10__write = 1'd1 ;
  assign CAN_FIRE_to_plic_10__write = 1'd1 ;
  assign WILL_FIRE_to_plic_10__write = EN_to_plic_10__write ;

  // value method to_plic_10__read
  assign to_plic_10__read = toplic_10 ;
  assign RDY_to_plic_10__read = 1'd1 ;

  // action method to_plic_11__write
  assign RDY_to_plic_11__write = 1'd1 ;
  assign CAN_FIRE_to_plic_11__write = 1'd1 ;
  assign WILL_FIRE_to_plic_11__write = EN_to_plic_11__write ;

  // value method to_plic_11__read
  assign to_plic_11__read = toplic_11 ;
  assign RDY_to_plic_11__read = 1'd1 ;

  // action method to_plic_12__write
  assign RDY_to_plic_12__write = 1'd1 ;
  assign CAN_FIRE_to_plic_12__write = 1'd1 ;
  assign WILL_FIRE_to_plic_12__write = EN_to_plic_12__write ;

  // value method to_plic_12__read
  assign to_plic_12__read = toplic_12 ;
  assign RDY_to_plic_12__read = 1'd1 ;

  // action method to_plic_13__write
  assign RDY_to_plic_13__write = 1'd1 ;
  assign CAN_FIRE_to_plic_13__write = 1'd1 ;
  assign WILL_FIRE_to_plic_13__write = EN_to_plic_13__write ;

  // value method to_plic_13__read
  assign to_plic_13__read = toplic_13 ;
  assign RDY_to_plic_13__read = 1'd1 ;

  // action method to_plic_14__write
  assign RDY_to_plic_14__write = 1'd1 ;
  assign CAN_FIRE_to_plic_14__write = 1'd1 ;
  assign WILL_FIRE_to_plic_14__write = EN_to_plic_14__write ;

  // value method to_plic_14__read
  assign to_plic_14__read = toplic_14 ;
  assign RDY_to_plic_14__read = 1'd1 ;

  // action method to_plic_15__write
  assign RDY_to_plic_15__write = 1'd1 ;
  assign CAN_FIRE_to_plic_15__write = 1'd1 ;
  assign WILL_FIRE_to_plic_15__write = EN_to_plic_15__write ;

  // value method to_plic_15__read
  assign to_plic_15__read = toplic_15 ;
  assign RDY_to_plic_15__read = 1'd1 ;

  // action method to_plic_16__write
  assign RDY_to_plic_16__write = 1'd1 ;
  assign CAN_FIRE_to_plic_16__write = 1'd1 ;
  assign WILL_FIRE_to_plic_16__write = EN_to_plic_16__write ;

  // value method to_plic_16__read
  assign to_plic_16__read = toplic_16 ;
  assign RDY_to_plic_16__read = 1'd1 ;

  // action method to_plic_17__write
  assign RDY_to_plic_17__write = 1'd1 ;
  assign CAN_FIRE_to_plic_17__write = 1'd1 ;
  assign WILL_FIRE_to_plic_17__write = EN_to_plic_17__write ;

  // value method to_plic_17__read
  assign to_plic_17__read = toplic_17 ;
  assign RDY_to_plic_17__read = 1'd1 ;

  // action method to_plic_18__write
  assign RDY_to_plic_18__write = 1'd1 ;
  assign CAN_FIRE_to_plic_18__write = 1'd1 ;
  assign WILL_FIRE_to_plic_18__write = EN_to_plic_18__write ;

  // value method to_plic_18__read
  assign to_plic_18__read = toplic_18 ;
  assign RDY_to_plic_18__read = 1'd1 ;

  // action method to_plic_19__write
  assign RDY_to_plic_19__write = 1'd1 ;
  assign CAN_FIRE_to_plic_19__write = 1'd1 ;
  assign WILL_FIRE_to_plic_19__write = EN_to_plic_19__write ;

  // value method to_plic_19__read
  assign to_plic_19__read = toplic_19 ;
  assign RDY_to_plic_19__read = 1'd1 ;

  // action method to_plic_20__write
  assign RDY_to_plic_20__write = 1'd1 ;
  assign CAN_FIRE_to_plic_20__write = 1'd1 ;
  assign WILL_FIRE_to_plic_20__write = EN_to_plic_20__write ;

  // value method to_plic_20__read
  assign to_plic_20__read = toplic_20 ;
  assign RDY_to_plic_20__read = 1'd1 ;

  // action method to_plic_21__write
  assign RDY_to_plic_21__write = 1'd1 ;
  assign CAN_FIRE_to_plic_21__write = 1'd1 ;
  assign WILL_FIRE_to_plic_21__write = EN_to_plic_21__write ;

  // value method to_plic_21__read
  assign to_plic_21__read = toplic_21 ;
  assign RDY_to_plic_21__read = 1'd1 ;

  // action method to_plic_22__write
  assign RDY_to_plic_22__write = 1'd1 ;
  assign CAN_FIRE_to_plic_22__write = 1'd1 ;
  assign WILL_FIRE_to_plic_22__write = EN_to_plic_22__write ;

  // value method to_plic_22__read
  assign to_plic_22__read = toplic_22 ;
  assign RDY_to_plic_22__read = 1'd1 ;

  // action method to_plic_23__write
  assign RDY_to_plic_23__write = 1'd1 ;
  assign CAN_FIRE_to_plic_23__write = 1'd1 ;
  assign WILL_FIRE_to_plic_23__write = EN_to_plic_23__write ;

  // value method to_plic_23__read
  assign to_plic_23__read = toplic_23 ;
  assign RDY_to_plic_23__read = 1'd1 ;

  // action method to_plic_24__write
  assign RDY_to_plic_24__write = 1'd1 ;
  assign CAN_FIRE_to_plic_24__write = 1'd1 ;
  assign WILL_FIRE_to_plic_24__write = EN_to_plic_24__write ;

  // value method to_plic_24__read
  assign to_plic_24__read = toplic_24 ;
  assign RDY_to_plic_24__read = 1'd1 ;

  // action method to_plic_25__write
  assign RDY_to_plic_25__write = 1'd1 ;
  assign CAN_FIRE_to_plic_25__write = 1'd1 ;
  assign WILL_FIRE_to_plic_25__write = EN_to_plic_25__write ;

  // value method to_plic_25__read
  assign to_plic_25__read = toplic_25 ;
  assign RDY_to_plic_25__read = 1'd1 ;

  // action method to_plic_26__write
  assign RDY_to_plic_26__write = 1'd1 ;
  assign CAN_FIRE_to_plic_26__write = 1'd1 ;
  assign WILL_FIRE_to_plic_26__write = EN_to_plic_26__write ;

  // value method to_plic_26__read
  assign to_plic_26__read = toplic_26 ;
  assign RDY_to_plic_26__read = 1'd1 ;

  // action method to_plic_27__write
  assign RDY_to_plic_27__write = 1'd1 ;
  assign CAN_FIRE_to_plic_27__write = 1'd1 ;
  assign WILL_FIRE_to_plic_27__write = EN_to_plic_27__write ;

  // value method to_plic_27__read
  assign to_plic_27__read = toplic_27 ;
  assign RDY_to_plic_27__read = 1'd1 ;

  // action method to_plic_28__write
  assign RDY_to_plic_28__write = 1'd1 ;
  assign CAN_FIRE_to_plic_28__write = 1'd1 ;
  assign WILL_FIRE_to_plic_28__write = EN_to_plic_28__write ;

  // value method to_plic_28__read
  assign to_plic_28__read = toplic_28 ;
  assign RDY_to_plic_28__read = 1'd1 ;

  // action method to_plic_29__write
  assign RDY_to_plic_29__write = 1'd1 ;
  assign CAN_FIRE_to_plic_29__write = 1'd1 ;
  assign WILL_FIRE_to_plic_29__write = EN_to_plic_29__write ;

  // value method to_plic_29__read
  assign to_plic_29__read = toplic_29 ;
  assign RDY_to_plic_29__read = 1'd1 ;

  // action method to_plic_30__write
  assign RDY_to_plic_30__write = 1'd1 ;
  assign CAN_FIRE_to_plic_30__write = 1'd1 ;
  assign WILL_FIRE_to_plic_30__write = EN_to_plic_30__write ;

  // value method to_plic_30__read
  assign to_plic_30__read = toplic_30 ;
  assign RDY_to_plic_30__read = 1'd1 ;

  // action method to_plic_31__write
  assign RDY_to_plic_31__write = 1'd1 ;
  assign CAN_FIRE_to_plic_31__write = 1'd1 ;
  assign WILL_FIRE_to_plic_31__write = EN_to_plic_31__write ;

  // value method to_plic_31__read
  assign to_plic_31__read = toplic_31 ;
  assign RDY_to_plic_31__read = 1'd1 ;

  // action method axi_slave_m_awvalid
  assign RDY_axi_slave_m_awvalid = s_xactor_f_wr_addr$FULL_N ;
  assign CAN_FIRE_axi_slave_m_awvalid = s_xactor_f_wr_addr$FULL_N ;
  assign WILL_FIRE_axi_slave_m_awvalid = EN_axi_slave_m_awvalid ;

  // value method axi_slave_m_awready
  assign axi_slave_awready = s_xactor_f_wr_addr$FULL_N ;

  // action method axi_slave_m_wvalid
  assign RDY_axi_slave_m_wvalid = s_xactor_f_wr_data$FULL_N ;
  assign CAN_FIRE_axi_slave_m_wvalid = s_xactor_f_wr_data$FULL_N ;
  assign WILL_FIRE_axi_slave_m_wvalid = EN_axi_slave_m_wvalid ;

  // value method axi_slave_m_wready
  assign axi_slave_wready = s_xactor_f_wr_data$FULL_N ;

  // value method axi_slave_m_bvalid
  assign axi_slave_bvalid = s_xactor_f_wr_resp$EMPTY_N ;

  // value method axi_slave_m_bresp
  assign axi_slave_bresp = s_xactor_f_wr_resp$D_OUT[15:14] ;

  // value method axi_slave_m_buser
  assign axi_slave_buser = s_xactor_f_wr_resp$D_OUT[13:4] ;

  // value method axi_slave_m_bid
  assign axi_slave_bid = s_xactor_f_wr_resp$D_OUT[3:0] ;

  // action method axi_slave_m_bready
  assign CAN_FIRE_axi_slave_m_bready = 1'd1 ;
  assign WILL_FIRE_axi_slave_m_bready = 1'd1 ;

  // action method axi_slave_m_arvalid
  assign CAN_FIRE_axi_slave_m_arvalid = 1'd1 ;
  assign WILL_FIRE_axi_slave_m_arvalid = 1'd1 ;

  // value method axi_slave_m_arready
  assign axi_slave_arready = s_xactor_f_rd_addr$FULL_N ;

  // value method axi_slave_m_rvalid
  assign axi_slave_rvalid = s_xactor_f_rd_data$EMPTY_N ;

  // value method axi_slave_m_rresp
  assign axi_slave_rresp = s_xactor_f_rd_data$D_OUT[80:79] ;

  // value method axi_slave_m_rdata
  assign axi_slave_rdata = s_xactor_f_rd_data$D_OUT[78:15] ;

  // value method axi_slave_m_rlast
  assign axi_slave_rlast = s_xactor_f_rd_data$D_OUT[14] ;

  // value method axi_slave_m_ruser
  assign axi_slave_ruser = s_xactor_f_rd_data$D_OUT[13:4] ;

  // value method axi_slave_m_rid
  assign axi_slave_rid = s_xactor_f_rd_data$D_OUT[3:0] ;

  // action method axi_slave_m_rready
  assign CAN_FIRE_axi_slave_m_rready = 1'd1 ;
  assign WILL_FIRE_axi_slave_m_rready = 1'd1 ;

  // submodule s_xactor_f_rd_addr
  FIFOL1 #(.width(32'd75)) s_xactor_f_rd_addr(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(s_xactor_f_rd_addr$D_IN),
					      .ENQ(s_xactor_f_rd_addr$ENQ),
					      .DEQ(s_xactor_f_rd_addr$DEQ),
					      .CLR(s_xactor_f_rd_addr$CLR),
					      .D_OUT(s_xactor_f_rd_addr$D_OUT),
					      .FULL_N(s_xactor_f_rd_addr$FULL_N),
					      .EMPTY_N(s_xactor_f_rd_addr$EMPTY_N));

  // submodule s_xactor_f_rd_data
  FIFOL1 #(.width(32'd81)) s_xactor_f_rd_data(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(s_xactor_f_rd_data$D_IN),
					      .ENQ(s_xactor_f_rd_data$ENQ),
					      .DEQ(s_xactor_f_rd_data$DEQ),
					      .CLR(s_xactor_f_rd_data$CLR),
					      .D_OUT(s_xactor_f_rd_data$D_OUT),
					      .FULL_N(s_xactor_f_rd_data$FULL_N),
					      .EMPTY_N(s_xactor_f_rd_data$EMPTY_N));

  // submodule s_xactor_f_wr_addr
  FIFOL1 #(.width(32'd75)) s_xactor_f_wr_addr(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(s_xactor_f_wr_addr$D_IN),
					      .ENQ(s_xactor_f_wr_addr$ENQ),
					      .DEQ(s_xactor_f_wr_addr$DEQ),
					      .CLR(s_xactor_f_wr_addr$CLR),
					      .D_OUT(s_xactor_f_wr_addr$D_OUT),
					      .FULL_N(s_xactor_f_wr_addr$FULL_N),
					      .EMPTY_N(s_xactor_f_wr_addr$EMPTY_N));

  // submodule s_xactor_f_wr_data
  FIFOL1 #(.width(32'd77)) s_xactor_f_wr_data(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(s_xactor_f_wr_data$D_IN),
					      .ENQ(s_xactor_f_wr_data$ENQ),
					      .DEQ(s_xactor_f_wr_data$DEQ),
					      .CLR(s_xactor_f_wr_data$CLR),
					      .D_OUT(s_xactor_f_wr_data$D_OUT),
					      .FULL_N(s_xactor_f_wr_data$FULL_N),
					      .EMPTY_N(s_xactor_f_wr_data$EMPTY_N));

  // submodule s_xactor_f_wr_resp
  FIFOL1 #(.width(32'd16)) s_xactor_f_wr_resp(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(s_xactor_f_wr_resp$D_IN),
					      .ENQ(s_xactor_f_wr_resp$ENQ),
					      .DEQ(s_xactor_f_wr_resp$DEQ),
					      .CLR(s_xactor_f_wr_resp$CLR),
					      .D_OUT(s_xactor_f_wr_resp$D_OUT),
					      .FULL_N(s_xactor_f_wr_resp$FULL_N),
					      .EMPTY_N(s_xactor_f_wr_resp$EMPTY_N));

  // rule RL_capture_interrupt
  assign CAN_FIRE_RL_capture_interrupt = 1'd1 ;
  assign WILL_FIRE_RL_capture_interrupt = 1'd1 ;

  // rule RL_rl_wr_respond
  assign CAN_FIRE_RL_rl_wr_respond =
	     s_xactor_f_wr_addr$EMPTY_N && s_xactor_f_wr_data$EMPTY_N &&
	     s_xactor_f_wr_resp$FULL_N ;
  assign WILL_FIRE_RL_rl_wr_respond = CAN_FIRE_RL_rl_wr_respond ;

  // rule RL_rl_rd_respond
  assign CAN_FIRE_RL_rl_rd_respond =
	     s_xactor_f_rd_addr$EMPTY_N && s_xactor_f_rd_data$FULL_N ;
  assign WILL_FIRE_RL_rl_rd_respond = CAN_FIRE_RL_rl_rd_respond ;

  // inputs to muxes for submodule ports
  assign MUX_toplic_0$write_1__VAL_1 = !direction_reg_0 && datain_register_0 ;
  assign MUX_toplic_1$write_1__VAL_1 = !direction_reg_1 && datain_register_1 ;
  assign MUX_toplic_10$write_1__VAL_1 =
	     !direction_reg_10 && datain_register_10 ;
  assign MUX_toplic_11$write_1__VAL_1 =
	     !direction_reg_11 && datain_register_11 ;
  assign MUX_toplic_12$write_1__VAL_1 =
	     !direction_reg_12 && datain_register_12 ;
  assign MUX_toplic_13$write_1__VAL_1 =
	     !direction_reg_13 && datain_register_13 ;
  assign MUX_toplic_14$write_1__VAL_1 =
	     !direction_reg_14 && datain_register_14 ;
  assign MUX_toplic_15$write_1__VAL_1 =
	     !direction_reg_15 && datain_register_15 ;
  assign MUX_toplic_16$write_1__VAL_1 =
	     !direction_reg_16 && datain_register_16 ;
  assign MUX_toplic_17$write_1__VAL_1 =
	     !direction_reg_17 && datain_register_17 ;
  assign MUX_toplic_18$write_1__VAL_1 =
	     !direction_reg_18 && datain_register_18 ;
  assign MUX_toplic_19$write_1__VAL_1 =
	     !direction_reg_19 && datain_register_19 ;
  assign MUX_toplic_2$write_1__VAL_1 = !direction_reg_2 && datain_register_2 ;
  assign MUX_toplic_20$write_1__VAL_1 =
	     !direction_reg_20 && datain_register_20 ;
  assign MUX_toplic_21$write_1__VAL_1 =
	     !direction_reg_21 && datain_register_21 ;
  assign MUX_toplic_22$write_1__VAL_1 =
	     !direction_reg_22 && datain_register_22 ;
  assign MUX_toplic_23$write_1__VAL_1 =
	     !direction_reg_23 && datain_register_23 ;
  assign MUX_toplic_24$write_1__VAL_1 =
	     !direction_reg_24 && datain_register_24 ;
  assign MUX_toplic_25$write_1__VAL_1 =
	     !direction_reg_25 && datain_register_25 ;
  assign MUX_toplic_26$write_1__VAL_1 =
	     !direction_reg_26 && datain_register_26 ;
  assign MUX_toplic_27$write_1__VAL_1 =
	     !direction_reg_27 && datain_register_27 ;
  assign MUX_toplic_28$write_1__VAL_1 =
	     !direction_reg_28 && datain_register_28 ;
  assign MUX_toplic_29$write_1__VAL_1 =
	     !direction_reg_29 && datain_register_29 ;
  assign MUX_toplic_3$write_1__VAL_1 = !direction_reg_3 && datain_register_3 ;
  assign MUX_toplic_30$write_1__VAL_1 =
	     !direction_reg_30 && datain_register_30 ;
  assign MUX_toplic_31$write_1__VAL_1 =
	     !direction_reg_31 && datain_register_31 ;
  assign MUX_toplic_4$write_1__VAL_1 = !direction_reg_4 && datain_register_4 ;
  assign MUX_toplic_5$write_1__VAL_1 = !direction_reg_5 && datain_register_5 ;
  assign MUX_toplic_6$write_1__VAL_1 = !direction_reg_6 && datain_register_6 ;
  assign MUX_toplic_7$write_1__VAL_1 = !direction_reg_7 && datain_register_7 ;
  assign MUX_toplic_8$write_1__VAL_1 = !direction_reg_8 && datain_register_8 ;
  assign MUX_toplic_9$write_1__VAL_1 = !direction_reg_9 && datain_register_9 ;

  // register datain_register_0
  assign datain_register_0$D_IN = gpio_in_inp[0] ;
  assign datain_register_0$EN = 1'd1 ;

  // register datain_register_1
  assign datain_register_1$D_IN = gpio_in_inp[1] ;
  assign datain_register_1$EN = 1'd1 ;

  // register datain_register_10
  assign datain_register_10$D_IN = gpio_in_inp[10] ;
  assign datain_register_10$EN = 1'd1 ;

  // register datain_register_11
  assign datain_register_11$D_IN = gpio_in_inp[11] ;
  assign datain_register_11$EN = 1'd1 ;

  // register datain_register_12
  assign datain_register_12$D_IN = gpio_in_inp[12] ;
  assign datain_register_12$EN = 1'd1 ;

  // register datain_register_13
  assign datain_register_13$D_IN = gpio_in_inp[13] ;
  assign datain_register_13$EN = 1'd1 ;

  // register datain_register_14
  assign datain_register_14$D_IN = gpio_in_inp[14] ;
  assign datain_register_14$EN = 1'd1 ;

  // register datain_register_15
  assign datain_register_15$D_IN = gpio_in_inp[15] ;
  assign datain_register_15$EN = 1'd1 ;

  // register datain_register_16
  assign datain_register_16$D_IN = gpio_in_inp[16] ;
  assign datain_register_16$EN = 1'd1 ;

  // register datain_register_17
  assign datain_register_17$D_IN = gpio_in_inp[17] ;
  assign datain_register_17$EN = 1'd1 ;

  // register datain_register_18
  assign datain_register_18$D_IN = gpio_in_inp[18] ;
  assign datain_register_18$EN = 1'd1 ;

  // register datain_register_19
  assign datain_register_19$D_IN = gpio_in_inp[19] ;
  assign datain_register_19$EN = 1'd1 ;

  // register datain_register_2
  assign datain_register_2$D_IN = gpio_in_inp[2] ;
  assign datain_register_2$EN = 1'd1 ;

  // register datain_register_20
  assign datain_register_20$D_IN = gpio_in_inp[20] ;
  assign datain_register_20$EN = 1'd1 ;

  // register datain_register_21
  assign datain_register_21$D_IN = gpio_in_inp[21] ;
  assign datain_register_21$EN = 1'd1 ;

  // register datain_register_22
  assign datain_register_22$D_IN = gpio_in_inp[22] ;
  assign datain_register_22$EN = 1'd1 ;

  // register datain_register_23
  assign datain_register_23$D_IN = gpio_in_inp[23] ;
  assign datain_register_23$EN = 1'd1 ;

  // register datain_register_24
  assign datain_register_24$D_IN = gpio_in_inp[24] ;
  assign datain_register_24$EN = 1'd1 ;

  // register datain_register_25
  assign datain_register_25$D_IN = gpio_in_inp[25] ;
  assign datain_register_25$EN = 1'd1 ;

  // register datain_register_26
  assign datain_register_26$D_IN = gpio_in_inp[26] ;
  assign datain_register_26$EN = 1'd1 ;

  // register datain_register_27
  assign datain_register_27$D_IN = gpio_in_inp[27] ;
  assign datain_register_27$EN = 1'd1 ;

  // register datain_register_28
  assign datain_register_28$D_IN = gpio_in_inp[28] ;
  assign datain_register_28$EN = 1'd1 ;

  // register datain_register_29
  assign datain_register_29$D_IN = gpio_in_inp[29] ;
  assign datain_register_29$EN = 1'd1 ;

  // register datain_register_3
  assign datain_register_3$D_IN = gpio_in_inp[3] ;
  assign datain_register_3$EN = 1'd1 ;

  // register datain_register_30
  assign datain_register_30$D_IN = gpio_in_inp[30] ;
  assign datain_register_30$EN = 1'd1 ;

  // register datain_register_31
  assign datain_register_31$D_IN = gpio_in_inp[31] ;
  assign datain_register_31$EN = 1'd1 ;

  // register datain_register_4
  assign datain_register_4$D_IN = gpio_in_inp[4] ;
  assign datain_register_4$EN = 1'd1 ;

  // register datain_register_5
  assign datain_register_5$D_IN = gpio_in_inp[5] ;
  assign datain_register_5$EN = 1'd1 ;

  // register datain_register_6
  assign datain_register_6$D_IN = gpio_in_inp[6] ;
  assign datain_register_6$EN = 1'd1 ;

  // register datain_register_7
  assign datain_register_7$D_IN = gpio_in_inp[7] ;
  assign datain_register_7$EN = 1'd1 ;

  // register datain_register_8
  assign datain_register_8$D_IN = gpio_in_inp[8] ;
  assign datain_register_8$EN = 1'd1 ;

  // register datain_register_9
  assign datain_register_9$D_IN = gpio_in_inp[9] ;
  assign datain_register_9$EN = 1'd1 ;

  // register dataout_register_0
  assign dataout_register_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign dataout_register_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_1
  assign dataout_register_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign dataout_register_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_10
  assign dataout_register_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign dataout_register_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_11
  assign dataout_register_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign dataout_register_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_12
  assign dataout_register_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign dataout_register_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_13
  assign dataout_register_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign dataout_register_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_14
  assign dataout_register_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign dataout_register_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_15
  assign dataout_register_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign dataout_register_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_16
  assign dataout_register_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign dataout_register_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_17
  assign dataout_register_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign dataout_register_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_18
  assign dataout_register_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign dataout_register_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_19
  assign dataout_register_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign dataout_register_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_2
  assign dataout_register_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign dataout_register_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_20
  assign dataout_register_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign dataout_register_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_21
  assign dataout_register_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign dataout_register_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_22
  assign dataout_register_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign dataout_register_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_23
  assign dataout_register_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign dataout_register_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_24
  assign dataout_register_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign dataout_register_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_25
  assign dataout_register_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign dataout_register_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_26
  assign dataout_register_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign dataout_register_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_27
  assign dataout_register_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign dataout_register_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_28
  assign dataout_register_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign dataout_register_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_29
  assign dataout_register_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign dataout_register_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_3
  assign dataout_register_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign dataout_register_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_30
  assign dataout_register_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign dataout_register_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_31
  assign dataout_register_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign dataout_register_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_4
  assign dataout_register_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign dataout_register_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_5
  assign dataout_register_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign dataout_register_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_6
  assign dataout_register_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign dataout_register_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_7
  assign dataout_register_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign dataout_register_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_8
  assign dataout_register_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign dataout_register_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register dataout_register_9
  assign dataout_register_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign dataout_register_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h04 ;

  // register direction_reg_0
  assign direction_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign direction_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_1
  assign direction_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign direction_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_10
  assign direction_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign direction_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_11
  assign direction_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign direction_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_12
  assign direction_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign direction_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_13
  assign direction_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign direction_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_14
  assign direction_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign direction_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_15
  assign direction_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign direction_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_16
  assign direction_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign direction_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_17
  assign direction_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign direction_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_18
  assign direction_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign direction_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_19
  assign direction_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign direction_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_2
  assign direction_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign direction_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_20
  assign direction_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign direction_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_21
  assign direction_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign direction_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_22
  assign direction_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign direction_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_23
  assign direction_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign direction_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_24
  assign direction_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign direction_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_25
  assign direction_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign direction_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_26
  assign direction_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign direction_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_27
  assign direction_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign direction_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_28
  assign direction_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign direction_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_29
  assign direction_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign direction_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_3
  assign direction_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign direction_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_30
  assign direction_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign direction_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_31
  assign direction_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign direction_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_4
  assign direction_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign direction_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_5
  assign direction_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign direction_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_6
  assign direction_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign direction_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_7
  assign direction_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign direction_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_8
  assign direction_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign direction_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register direction_reg_9
  assign direction_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign direction_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0 ;

  // register drv0_reg_0
  assign drv0_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign drv0_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_1
  assign drv0_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign drv0_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_10
  assign drv0_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign drv0_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_11
  assign drv0_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign drv0_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_12
  assign drv0_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign drv0_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_13
  assign drv0_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign drv0_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_14
  assign drv0_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign drv0_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_15
  assign drv0_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign drv0_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_16
  assign drv0_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign drv0_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_17
  assign drv0_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign drv0_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_18
  assign drv0_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign drv0_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_19
  assign drv0_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign drv0_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_2
  assign drv0_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign drv0_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_20
  assign drv0_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign drv0_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_21
  assign drv0_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign drv0_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_22
  assign drv0_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign drv0_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_23
  assign drv0_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign drv0_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_24
  assign drv0_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign drv0_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_25
  assign drv0_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign drv0_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_26
  assign drv0_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign drv0_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_27
  assign drv0_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign drv0_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_28
  assign drv0_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign drv0_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_29
  assign drv0_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign drv0_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_3
  assign drv0_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign drv0_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_30
  assign drv0_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign drv0_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_31
  assign drv0_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign drv0_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_4
  assign drv0_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign drv0_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_5
  assign drv0_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign drv0_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_6
  assign drv0_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign drv0_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_7
  assign drv0_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign drv0_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_8
  assign drv0_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign drv0_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv0_reg_9
  assign drv0_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign drv0_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h08 ;

  // register drv1_reg_0
  assign drv1_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign drv1_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_1
  assign drv1_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign drv1_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_10
  assign drv1_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign drv1_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_11
  assign drv1_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign drv1_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_12
  assign drv1_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign drv1_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_13
  assign drv1_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign drv1_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_14
  assign drv1_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign drv1_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_15
  assign drv1_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign drv1_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_16
  assign drv1_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign drv1_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_17
  assign drv1_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign drv1_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_18
  assign drv1_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign drv1_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_19
  assign drv1_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign drv1_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_2
  assign drv1_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign drv1_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_20
  assign drv1_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign drv1_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_21
  assign drv1_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign drv1_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_22
  assign drv1_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign drv1_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_23
  assign drv1_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign drv1_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_24
  assign drv1_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign drv1_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_25
  assign drv1_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign drv1_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_26
  assign drv1_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign drv1_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_27
  assign drv1_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign drv1_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_28
  assign drv1_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign drv1_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_29
  assign drv1_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign drv1_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_3
  assign drv1_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign drv1_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_30
  assign drv1_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign drv1_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_31
  assign drv1_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign drv1_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_4
  assign drv1_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign drv1_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_5
  assign drv1_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign drv1_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_6
  assign drv1_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign drv1_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_7
  assign drv1_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign drv1_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_8
  assign drv1_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign drv1_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv1_reg_9
  assign drv1_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign drv1_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h0C ;

  // register drv2_reg_0
  assign drv2_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign drv2_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_1
  assign drv2_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign drv2_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_10
  assign drv2_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign drv2_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_11
  assign drv2_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign drv2_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_12
  assign drv2_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign drv2_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_13
  assign drv2_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign drv2_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_14
  assign drv2_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign drv2_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_15
  assign drv2_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign drv2_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_16
  assign drv2_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign drv2_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_17
  assign drv2_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign drv2_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_18
  assign drv2_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign drv2_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_19
  assign drv2_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign drv2_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_2
  assign drv2_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign drv2_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_20
  assign drv2_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign drv2_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_21
  assign drv2_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign drv2_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_22
  assign drv2_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign drv2_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_23
  assign drv2_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign drv2_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_24
  assign drv2_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign drv2_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_25
  assign drv2_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign drv2_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_26
  assign drv2_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign drv2_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_27
  assign drv2_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign drv2_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_28
  assign drv2_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign drv2_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_29
  assign drv2_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign drv2_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_3
  assign drv2_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign drv2_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_30
  assign drv2_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign drv2_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_31
  assign drv2_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign drv2_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_4
  assign drv2_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign drv2_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_5
  assign drv2_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign drv2_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_6
  assign drv2_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign drv2_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_7
  assign drv2_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign drv2_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_8
  assign drv2_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign drv2_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register drv2_reg_9
  assign drv2_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign drv2_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h10 ;

  // register pd_reg_0
  assign pd_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign pd_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_1
  assign pd_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign pd_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_10
  assign pd_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign pd_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_11
  assign pd_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign pd_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_12
  assign pd_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign pd_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_13
  assign pd_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign pd_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_14
  assign pd_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign pd_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_15
  assign pd_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign pd_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_16
  assign pd_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign pd_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_17
  assign pd_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign pd_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_18
  assign pd_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign pd_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_19
  assign pd_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign pd_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_2
  assign pd_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign pd_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_20
  assign pd_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign pd_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_21
  assign pd_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign pd_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_22
  assign pd_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign pd_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_23
  assign pd_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign pd_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_24
  assign pd_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign pd_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_25
  assign pd_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign pd_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_26
  assign pd_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign pd_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_27
  assign pd_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign pd_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_28
  assign pd_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign pd_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_29
  assign pd_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign pd_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_3
  assign pd_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign pd_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_30
  assign pd_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign pd_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_31
  assign pd_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign pd_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_4
  assign pd_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign pd_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_5
  assign pd_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign pd_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_6
  assign pd_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign pd_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_7
  assign pd_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign pd_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_8
  assign pd_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign pd_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register pd_reg_9
  assign pd_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign pd_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h14 ;

  // register ppen_reg_0
  assign ppen_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign ppen_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_1
  assign ppen_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign ppen_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_10
  assign ppen_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign ppen_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_11
  assign ppen_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign ppen_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_12
  assign ppen_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign ppen_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_13
  assign ppen_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign ppen_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_14
  assign ppen_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign ppen_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_15
  assign ppen_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign ppen_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_16
  assign ppen_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign ppen_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_17
  assign ppen_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign ppen_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_18
  assign ppen_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign ppen_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_19
  assign ppen_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign ppen_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_2
  assign ppen_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign ppen_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_20
  assign ppen_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign ppen_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_21
  assign ppen_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign ppen_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_22
  assign ppen_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign ppen_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_23
  assign ppen_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign ppen_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_24
  assign ppen_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign ppen_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_25
  assign ppen_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign ppen_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_26
  assign ppen_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign ppen_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_27
  assign ppen_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign ppen_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_28
  assign ppen_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign ppen_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_29
  assign ppen_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign ppen_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_3
  assign ppen_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign ppen_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_30
  assign ppen_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign ppen_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_31
  assign ppen_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign ppen_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_4
  assign ppen_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign ppen_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_5
  assign ppen_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign ppen_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_6
  assign ppen_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign ppen_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_7
  assign ppen_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign ppen_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_8
  assign ppen_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign ppen_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register ppen_reg_9
  assign ppen_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign ppen_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h18 ;

  // register prg_slew_reg_0
  assign prg_slew_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign prg_slew_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_1
  assign prg_slew_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign prg_slew_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_10
  assign prg_slew_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign prg_slew_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_11
  assign prg_slew_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign prg_slew_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_12
  assign prg_slew_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign prg_slew_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_13
  assign prg_slew_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign prg_slew_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_14
  assign prg_slew_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign prg_slew_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_15
  assign prg_slew_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign prg_slew_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_16
  assign prg_slew_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign prg_slew_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_17
  assign prg_slew_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign prg_slew_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_18
  assign prg_slew_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign prg_slew_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_19
  assign prg_slew_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign prg_slew_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_2
  assign prg_slew_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign prg_slew_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_20
  assign prg_slew_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign prg_slew_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_21
  assign prg_slew_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign prg_slew_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_22
  assign prg_slew_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign prg_slew_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_23
  assign prg_slew_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign prg_slew_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_24
  assign prg_slew_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign prg_slew_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_25
  assign prg_slew_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign prg_slew_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_26
  assign prg_slew_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign prg_slew_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_27
  assign prg_slew_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign prg_slew_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_28
  assign prg_slew_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign prg_slew_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_29
  assign prg_slew_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign prg_slew_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_3
  assign prg_slew_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign prg_slew_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_30
  assign prg_slew_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign prg_slew_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_31
  assign prg_slew_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign prg_slew_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_4
  assign prg_slew_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign prg_slew_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_5
  assign prg_slew_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign prg_slew_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_6
  assign prg_slew_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign prg_slew_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_7
  assign prg_slew_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign prg_slew_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_8
  assign prg_slew_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign prg_slew_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register prg_slew_reg_9
  assign prg_slew_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign prg_slew_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h1C ;

  // register puq_reg_0
  assign puq_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign puq_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_1
  assign puq_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign puq_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_10
  assign puq_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign puq_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_11
  assign puq_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign puq_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_12
  assign puq_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign puq_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_13
  assign puq_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign puq_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_14
  assign puq_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign puq_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_15
  assign puq_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign puq_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_16
  assign puq_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign puq_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_17
  assign puq_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign puq_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_18
  assign puq_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign puq_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_19
  assign puq_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign puq_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_2
  assign puq_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign puq_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_20
  assign puq_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign puq_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_21
  assign puq_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign puq_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_22
  assign puq_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign puq_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_23
  assign puq_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign puq_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_24
  assign puq_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign puq_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_25
  assign puq_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign puq_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_26
  assign puq_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign puq_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_27
  assign puq_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign puq_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_28
  assign puq_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign puq_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_29
  assign puq_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign puq_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_3
  assign puq_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign puq_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_30
  assign puq_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign puq_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_31
  assign puq_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign puq_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_4
  assign puq_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign puq_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_5
  assign puq_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign puq_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_6
  assign puq_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign puq_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_7
  assign puq_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign puq_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_8
  assign puq_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign puq_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register puq_reg_9
  assign puq_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign puq_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h20 ;

  // register pwrup_pull_en_reg_0
  assign pwrup_pull_en_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign pwrup_pull_en_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_1
  assign pwrup_pull_en_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign pwrup_pull_en_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_10
  assign pwrup_pull_en_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign pwrup_pull_en_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_11
  assign pwrup_pull_en_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign pwrup_pull_en_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_12
  assign pwrup_pull_en_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign pwrup_pull_en_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_13
  assign pwrup_pull_en_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign pwrup_pull_en_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_14
  assign pwrup_pull_en_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign pwrup_pull_en_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_15
  assign pwrup_pull_en_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign pwrup_pull_en_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_16
  assign pwrup_pull_en_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign pwrup_pull_en_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_17
  assign pwrup_pull_en_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign pwrup_pull_en_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_18
  assign pwrup_pull_en_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign pwrup_pull_en_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_19
  assign pwrup_pull_en_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign pwrup_pull_en_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_2
  assign pwrup_pull_en_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign pwrup_pull_en_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_20
  assign pwrup_pull_en_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign pwrup_pull_en_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_21
  assign pwrup_pull_en_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign pwrup_pull_en_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_22
  assign pwrup_pull_en_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign pwrup_pull_en_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_23
  assign pwrup_pull_en_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign pwrup_pull_en_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_24
  assign pwrup_pull_en_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign pwrup_pull_en_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_25
  assign pwrup_pull_en_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign pwrup_pull_en_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_26
  assign pwrup_pull_en_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign pwrup_pull_en_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_27
  assign pwrup_pull_en_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign pwrup_pull_en_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_28
  assign pwrup_pull_en_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign pwrup_pull_en_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_29
  assign pwrup_pull_en_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign pwrup_pull_en_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_3
  assign pwrup_pull_en_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign pwrup_pull_en_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_30
  assign pwrup_pull_en_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign pwrup_pull_en_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_31
  assign pwrup_pull_en_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign pwrup_pull_en_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_4
  assign pwrup_pull_en_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign pwrup_pull_en_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_5
  assign pwrup_pull_en_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign pwrup_pull_en_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_6
  assign pwrup_pull_en_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign pwrup_pull_en_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_7
  assign pwrup_pull_en_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign pwrup_pull_en_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_8
  assign pwrup_pull_en_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign pwrup_pull_en_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrup_pull_en_reg_9
  assign pwrup_pull_en_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign pwrup_pull_en_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h28 ;

  // register pwrupzhl_reg_0
  assign pwrupzhl_reg_0$D_IN = s_xactor_f_wr_data$D_OUT[13] ;
  assign pwrupzhl_reg_0$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_1
  assign pwrupzhl_reg_1$D_IN = s_xactor_f_wr_data$D_OUT[14] ;
  assign pwrupzhl_reg_1$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_10
  assign pwrupzhl_reg_10$D_IN = s_xactor_f_wr_data$D_OUT[23] ;
  assign pwrupzhl_reg_10$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_11
  assign pwrupzhl_reg_11$D_IN = s_xactor_f_wr_data$D_OUT[24] ;
  assign pwrupzhl_reg_11$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_12
  assign pwrupzhl_reg_12$D_IN = s_xactor_f_wr_data$D_OUT[25] ;
  assign pwrupzhl_reg_12$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_13
  assign pwrupzhl_reg_13$D_IN = s_xactor_f_wr_data$D_OUT[26] ;
  assign pwrupzhl_reg_13$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_14
  assign pwrupzhl_reg_14$D_IN = s_xactor_f_wr_data$D_OUT[27] ;
  assign pwrupzhl_reg_14$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_15
  assign pwrupzhl_reg_15$D_IN = s_xactor_f_wr_data$D_OUT[28] ;
  assign pwrupzhl_reg_15$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_16
  assign pwrupzhl_reg_16$D_IN = s_xactor_f_wr_data$D_OUT[29] ;
  assign pwrupzhl_reg_16$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_17
  assign pwrupzhl_reg_17$D_IN = s_xactor_f_wr_data$D_OUT[30] ;
  assign pwrupzhl_reg_17$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_18
  assign pwrupzhl_reg_18$D_IN = s_xactor_f_wr_data$D_OUT[31] ;
  assign pwrupzhl_reg_18$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_19
  assign pwrupzhl_reg_19$D_IN = s_xactor_f_wr_data$D_OUT[32] ;
  assign pwrupzhl_reg_19$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_2
  assign pwrupzhl_reg_2$D_IN = s_xactor_f_wr_data$D_OUT[15] ;
  assign pwrupzhl_reg_2$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_20
  assign pwrupzhl_reg_20$D_IN = s_xactor_f_wr_data$D_OUT[33] ;
  assign pwrupzhl_reg_20$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_21
  assign pwrupzhl_reg_21$D_IN = s_xactor_f_wr_data$D_OUT[34] ;
  assign pwrupzhl_reg_21$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_22
  assign pwrupzhl_reg_22$D_IN = s_xactor_f_wr_data$D_OUT[35] ;
  assign pwrupzhl_reg_22$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_23
  assign pwrupzhl_reg_23$D_IN = s_xactor_f_wr_data$D_OUT[36] ;
  assign pwrupzhl_reg_23$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_24
  assign pwrupzhl_reg_24$D_IN = s_xactor_f_wr_data$D_OUT[37] ;
  assign pwrupzhl_reg_24$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_25
  assign pwrupzhl_reg_25$D_IN = s_xactor_f_wr_data$D_OUT[38] ;
  assign pwrupzhl_reg_25$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_26
  assign pwrupzhl_reg_26$D_IN = s_xactor_f_wr_data$D_OUT[39] ;
  assign pwrupzhl_reg_26$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_27
  assign pwrupzhl_reg_27$D_IN = s_xactor_f_wr_data$D_OUT[40] ;
  assign pwrupzhl_reg_27$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_28
  assign pwrupzhl_reg_28$D_IN = s_xactor_f_wr_data$D_OUT[41] ;
  assign pwrupzhl_reg_28$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_29
  assign pwrupzhl_reg_29$D_IN = s_xactor_f_wr_data$D_OUT[42] ;
  assign pwrupzhl_reg_29$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_3
  assign pwrupzhl_reg_3$D_IN = s_xactor_f_wr_data$D_OUT[16] ;
  assign pwrupzhl_reg_3$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_30
  assign pwrupzhl_reg_30$D_IN = s_xactor_f_wr_data$D_OUT[43] ;
  assign pwrupzhl_reg_30$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_31
  assign pwrupzhl_reg_31$D_IN = s_xactor_f_wr_data$D_OUT[44] ;
  assign pwrupzhl_reg_31$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_4
  assign pwrupzhl_reg_4$D_IN = s_xactor_f_wr_data$D_OUT[17] ;
  assign pwrupzhl_reg_4$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_5
  assign pwrupzhl_reg_5$D_IN = s_xactor_f_wr_data$D_OUT[18] ;
  assign pwrupzhl_reg_5$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_6
  assign pwrupzhl_reg_6$D_IN = s_xactor_f_wr_data$D_OUT[19] ;
  assign pwrupzhl_reg_6$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_7
  assign pwrupzhl_reg_7$D_IN = s_xactor_f_wr_data$D_OUT[20] ;
  assign pwrupzhl_reg_7$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_8
  assign pwrupzhl_reg_8$D_IN = s_xactor_f_wr_data$D_OUT[21] ;
  assign pwrupzhl_reg_8$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register pwrupzhl_reg_9
  assign pwrupzhl_reg_9$D_IN = s_xactor_f_wr_data$D_OUT[22] ;
  assign pwrupzhl_reg_9$EN =
	     WILL_FIRE_RL_rl_wr_respond &&
	     s_xactor_f_wr_addr$D_OUT[48:43] == 6'h24 ;

  // register toplic_0
  assign toplic_0$D_IN = MUX_toplic_0$write_1__VAL_1 ;
  assign toplic_0$EN = 1'b1 ;

  // register toplic_1
  assign toplic_1$D_IN = MUX_toplic_1$write_1__VAL_1 ;
  assign toplic_1$EN = 1'b1 ;

  // register toplic_10
  assign toplic_10$D_IN = MUX_toplic_10$write_1__VAL_1 ;
  assign toplic_10$EN = 1'b1 ;

  // register toplic_11
  assign toplic_11$D_IN = MUX_toplic_11$write_1__VAL_1 ;
  assign toplic_11$EN = 1'b1 ;

  // register toplic_12
  assign toplic_12$D_IN = MUX_toplic_12$write_1__VAL_1 ;
  assign toplic_12$EN = 1'b1 ;

  // register toplic_13
  assign toplic_13$D_IN = MUX_toplic_13$write_1__VAL_1 ;
  assign toplic_13$EN = 1'b1 ;

  // register toplic_14
  assign toplic_14$D_IN = MUX_toplic_14$write_1__VAL_1 ;
  assign toplic_14$EN = 1'b1 ;

  // register toplic_15
  assign toplic_15$D_IN = MUX_toplic_15$write_1__VAL_1 ;
  assign toplic_15$EN = 1'b1 ;

  // register toplic_16
  assign toplic_16$D_IN = MUX_toplic_16$write_1__VAL_1 ;
  assign toplic_16$EN = 1'b1 ;

  // register toplic_17
  assign toplic_17$D_IN = MUX_toplic_17$write_1__VAL_1 ;
  assign toplic_17$EN = 1'b1 ;

  // register toplic_18
  assign toplic_18$D_IN = MUX_toplic_18$write_1__VAL_1 ;
  assign toplic_18$EN = 1'b1 ;

  // register toplic_19
  assign toplic_19$D_IN = MUX_toplic_19$write_1__VAL_1 ;
  assign toplic_19$EN = 1'b1 ;

  // register toplic_2
  assign toplic_2$D_IN = MUX_toplic_2$write_1__VAL_1 ;
  assign toplic_2$EN = 1'b1 ;

  // register toplic_20
  assign toplic_20$D_IN = MUX_toplic_20$write_1__VAL_1 ;
  assign toplic_20$EN = 1'b1 ;

  // register toplic_21
  assign toplic_21$D_IN = MUX_toplic_21$write_1__VAL_1 ;
  assign toplic_21$EN = 1'b1 ;

  // register toplic_22
  assign toplic_22$D_IN = MUX_toplic_22$write_1__VAL_1 ;
  assign toplic_22$EN = 1'b1 ;

  // register toplic_23
  assign toplic_23$D_IN = MUX_toplic_23$write_1__VAL_1 ;
  assign toplic_23$EN = 1'b1 ;

  // register toplic_24
  assign toplic_24$D_IN = MUX_toplic_24$write_1__VAL_1 ;
  assign toplic_24$EN = 1'b1 ;

  // register toplic_25
  assign toplic_25$D_IN = MUX_toplic_25$write_1__VAL_1 ;
  assign toplic_25$EN = 1'b1 ;

  // register toplic_26
  assign toplic_26$D_IN = MUX_toplic_26$write_1__VAL_1 ;
  assign toplic_26$EN = 1'b1 ;

  // register toplic_27
  assign toplic_27$D_IN = MUX_toplic_27$write_1__VAL_1 ;
  assign toplic_27$EN = 1'b1 ;

  // register toplic_28
  assign toplic_28$D_IN = MUX_toplic_28$write_1__VAL_1 ;
  assign toplic_28$EN = 1'b1 ;

  // register toplic_29
  assign toplic_29$D_IN = MUX_toplic_29$write_1__VAL_1 ;
  assign toplic_29$EN = 1'b1 ;

  // register toplic_3
  assign toplic_3$D_IN = MUX_toplic_3$write_1__VAL_1 ;
  assign toplic_3$EN = 1'b1 ;

  // register toplic_30
  assign toplic_30$D_IN = MUX_toplic_30$write_1__VAL_1 ;
  assign toplic_30$EN = 1'b1 ;

  // register toplic_31
  assign toplic_31$D_IN = MUX_toplic_31$write_1__VAL_1 ;
  assign toplic_31$EN = 1'b1 ;

  // register toplic_4
  assign toplic_4$D_IN = MUX_toplic_4$write_1__VAL_1 ;
  assign toplic_4$EN = 1'b1 ;

  // register toplic_5
  assign toplic_5$D_IN = MUX_toplic_5$write_1__VAL_1 ;
  assign toplic_5$EN = 1'b1 ;

  // register toplic_6
  assign toplic_6$D_IN = MUX_toplic_6$write_1__VAL_1 ;
  assign toplic_6$EN = 1'b1 ;

  // register toplic_7
  assign toplic_7$D_IN = MUX_toplic_7$write_1__VAL_1 ;
  assign toplic_7$EN = 1'b1 ;

  // register toplic_8
  assign toplic_8$D_IN = MUX_toplic_8$write_1__VAL_1 ;
  assign toplic_8$EN = 1'b1 ;

  // register toplic_9
  assign toplic_9$D_IN = MUX_toplic_9$write_1__VAL_1 ;
  assign toplic_9$EN = 1'b1 ;

  // submodule s_xactor_f_rd_addr
  assign s_xactor_f_rd_addr$D_IN =
	     { axi_slave_m_arvalid_araddr,
	       axi_slave_m_arvalid_arprot,
	       axi_slave_m_arvalid_aruser,
	       axi_slave_m_arvalid_arlen,
	       axi_slave_m_arvalid_arsize,
	       axi_slave_m_arvalid_arburst,
	       axi_slave_m_arvalid_arlock,
	       axi_slave_m_arvalid_arcache,
	       axi_slave_m_arvalid_arqos,
	       axi_slave_m_arvalid_arregion,
	       axi_slave_m_arvalid_arid } ;
  assign s_xactor_f_rd_addr$ENQ =
	     axi_slave_m_arvalid_arvalid && s_xactor_f_rd_addr$FULL_N ;
  assign s_xactor_f_rd_addr$DEQ =
	     s_xactor_f_rd_addr$EMPTY_N && s_xactor_f_rd_data$FULL_N ;
  assign s_xactor_f_rd_addr$CLR = 1'b0 ;

  // submodule s_xactor_f_rd_data
  assign s_xactor_f_rd_data$D_IN =
	     { CASE_s_xactor_f_rd_addrD_OUT_BITS_48_TO_43_0x_ETC__q13,
	       x_rdata__h60009,
	       11'd1024,
	       s_xactor_f_rd_addr$D_OUT[3:0] } ;
  assign s_xactor_f_rd_data$ENQ =
	     s_xactor_f_rd_addr$EMPTY_N && s_xactor_f_rd_data$FULL_N ;
  assign s_xactor_f_rd_data$DEQ =
	     axi_slave_m_rready_rready && s_xactor_f_rd_data$EMPTY_N ;
  assign s_xactor_f_rd_data$CLR = 1'b0 ;

  // submodule s_xactor_f_wr_addr
  assign s_xactor_f_wr_addr$D_IN =
	     { axi_slave_m_awvalid_awaddr,
	       axi_slave_m_awvalid_awprot,
	       axi_slave_m_awvalid_awuser,
	       axi_slave_m_awvalid_awlen,
	       axi_slave_m_awvalid_awsize,
	       axi_slave_m_awvalid_awburst,
	       axi_slave_m_awvalid_awlock,
	       axi_slave_m_awvalid_awcache,
	       axi_slave_m_awvalid_awqos,
	       axi_slave_m_awvalid_awregion,
	       axi_slave_m_awvalid_awid } ;
  assign s_xactor_f_wr_addr$ENQ =
	     EN_axi_slave_m_awvalid && axi_slave_m_awvalid_awvalid ;
  assign s_xactor_f_wr_addr$DEQ =
	     s_xactor_f_wr_addr$EMPTY_N && s_xactor_f_wr_data$EMPTY_N &&
	     s_xactor_f_wr_resp$FULL_N ;
  assign s_xactor_f_wr_addr$CLR = 1'b0 ;

  // submodule s_xactor_f_wr_data
  assign s_xactor_f_wr_data$D_IN =
	     { axi_slave_m_wvalid_wdata,
	       axi_slave_m_wvalid_wstrb,
	       axi_slave_m_wvalid_wid,
	       axi_slave_m_wvalid_wlast } ;
  assign s_xactor_f_wr_data$ENQ =
	     EN_axi_slave_m_wvalid && axi_slave_m_wvalid_wvalid ;
  assign s_xactor_f_wr_data$DEQ =
	     s_xactor_f_wr_addr$EMPTY_N && s_xactor_f_wr_data$EMPTY_N &&
	     s_xactor_f_wr_resp$FULL_N ;
  assign s_xactor_f_wr_data$CLR = 1'b0 ;

  // submodule s_xactor_f_wr_resp
  assign s_xactor_f_wr_resp$D_IN =
	     { CASE_s_xactor_f_wr_addrD_OUT_BITS_48_TO_43_0x_ETC__q1,
	       s_xactor_f_wr_addr$D_OUT[39:30],
	       s_xactor_f_wr_addr$D_OUT[3:0] } ;
  assign s_xactor_f_wr_resp$ENQ =
	     s_xactor_f_wr_addr$EMPTY_N && s_xactor_f_wr_data$EMPTY_N &&
	     s_xactor_f_wr_resp$FULL_N ;
  assign s_xactor_f_wr_resp$DEQ =
	     axi_slave_m_bready_bready && s_xactor_f_wr_resp$EMPTY_N ;
  assign s_xactor_f_wr_resp$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_datain_register_0_THEN_1_ELSE_0__q2 =
	     datain_register_0 ? 32'd1 : 32'd0 ;
  assign IF_direction_reg_0_THEN_1_ELSE_0__q3 =
	     direction_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_drv0_reg_0_THEN_1_ELSE_0__q4 = drv0_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_drv1_reg_0_THEN_1_ELSE_0__q5 = drv1_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_drv2_reg_0_THEN_1_ELSE_0__q6 = drv2_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_pd_reg_0_THEN_1_ELSE_0__q7 = pd_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_ppen_reg_0_THEN_1_ELSE_0__q8 = ppen_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_prg_slew_reg_0_THEN_1_ELSE_0__q9 =
	     prg_slew_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_puq_reg_0_THEN_1_ELSE_0__q10 = puq_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_pwrup_pull_en_reg_0_THEN_1_ELSE_0__q12 =
	     pwrup_pull_en_reg_0 ? 32'd1 : 32'd0 ;
  assign IF_pwrupzhl_reg_0_THEN_1_ELSE_0__q11 =
	     pwrupzhl_reg_0 ? 32'd1 : 32'd0 ;
  assign _theResult___fst_rdata__h59604 =
	     { direction_reg_31,
	       direction_reg_30,
	       direction_reg_29,
	       direction_reg_28,
	       direction_reg_27,
	       direction_reg_26,
	       direction_reg_25,
	       direction_reg_24,
	       direction_reg_23,
	       direction_reg_22,
	       direction_reg_21,
	       direction_reg_20,
	       direction_reg_19,
	       direction_reg_18,
	       direction_reg_17,
	       direction_reg_16,
	       direction_reg_15,
	       direction_reg_14,
	       direction_reg_13,
	       direction_reg_12,
	       direction_reg_11,
	       direction_reg_10,
	       direction_reg_9,
	       direction_reg_8,
	       direction_reg_7,
	       direction_reg_6,
	       direction_reg_5,
	       direction_reg_4,
	       direction_reg_3_read__3_CONCAT_direction_reg_2_ETC___d224,
	       direction_reg_31,
	       direction_reg_30,
	       direction_reg_29,
	       direction_reg_28,
	       direction_reg_27,
	       direction_reg_26,
	       direction_reg_25,
	       direction_reg_24,
	       direction_reg_23,
	       direction_reg_22,
	       direction_reg_21,
	       direction_reg_20,
	       direction_reg_19,
	       direction_reg_18,
	       direction_reg_17,
	       direction_reg_16,
	       direction_reg_15,
	       direction_reg_14,
	       direction_reg_13,
	       direction_reg_12,
	       direction_reg_11,
	       direction_reg_10,
	       direction_reg_9,
	       direction_reg_8,
	       direction_reg_7,
	       direction_reg_6,
	       direction_reg_5,
	       direction_reg_4,
	       direction_reg_3_read__3_CONCAT_direction_reg_2_ETC___d224 } ;
  assign _theResult___fst_rdata__h59639 =
	     { datain_register_31,
	       datain_register_30,
	       datain_register_29,
	       datain_register_28,
	       datain_register_27,
	       datain_register_26,
	       datain_register_25,
	       datain_register_24,
	       datain_register_23,
	       datain_register_22,
	       datain_register_21,
	       datain_register_20,
	       datain_register_19,
	       datain_register_18,
	       datain_register_17,
	       datain_register_16,
	       datain_register_15,
	       datain_register_14,
	       datain_register_13,
	       datain_register_12,
	       datain_register_11,
	       datain_register_10,
	       datain_register_9,
	       datain_register_8,
	       datain_register_7,
	       datain_register_6,
	       datain_register_5,
	       datain_register_4,
	       datain_register_3_read__5_CONCAT_datain_regist_ETC___d243,
	       datain_register_31,
	       datain_register_30,
	       datain_register_29,
	       datain_register_28,
	       datain_register_27,
	       datain_register_26,
	       datain_register_25,
	       datain_register_24,
	       datain_register_23,
	       datain_register_22,
	       datain_register_21,
	       datain_register_20,
	       datain_register_19,
	       datain_register_18,
	       datain_register_17,
	       datain_register_16,
	       datain_register_15,
	       datain_register_14,
	       datain_register_13,
	       datain_register_12,
	       datain_register_11,
	       datain_register_10,
	       datain_register_9,
	       datain_register_8,
	       datain_register_7,
	       datain_register_6,
	       datain_register_5,
	       datain_register_4,
	       datain_register_3_read__5_CONCAT_datain_regist_ETC___d243 } ;
  assign _theResult___fst_rdata__h59674 =
	     { drv0_reg_31,
	       drv0_reg_30,
	       drv0_reg_29,
	       drv0_reg_28,
	       drv0_reg_27,
	       drv0_reg_26,
	       drv0_reg_25,
	       drv0_reg_24,
	       drv0_reg_23,
	       drv0_reg_22,
	       drv0_reg_21,
	       drv0_reg_20,
	       drv0_reg_19,
	       drv0_reg_18,
	       drv0_reg_17,
	       drv0_reg_16,
	       drv0_reg_15,
	       drv0_reg_14,
	       drv0_reg_13,
	       drv0_reg_12,
	       drv0_reg_11,
	       drv0_reg_10,
	       drv0_reg_9,
	       drv0_reg_8,
	       drv0_reg_7,
	       drv0_reg_6,
	       drv0_reg_5,
	       drv0_reg_4,
	       drv0_reg_3_read__87_CONCAT_drv0_reg_2_read__88_ETC___d294,
	       drv0_reg_31,
	       drv0_reg_30,
	       drv0_reg_29,
	       drv0_reg_28,
	       drv0_reg_27,
	       drv0_reg_26,
	       drv0_reg_25,
	       drv0_reg_24,
	       drv0_reg_23,
	       drv0_reg_22,
	       drv0_reg_21,
	       drv0_reg_20,
	       drv0_reg_19,
	       drv0_reg_18,
	       drv0_reg_17,
	       drv0_reg_16,
	       drv0_reg_15,
	       drv0_reg_14,
	       drv0_reg_13,
	       drv0_reg_12,
	       drv0_reg_11,
	       drv0_reg_10,
	       drv0_reg_9,
	       drv0_reg_8,
	       drv0_reg_7,
	       drv0_reg_6,
	       drv0_reg_5,
	       drv0_reg_4,
	       drv0_reg_3_read__87_CONCAT_drv0_reg_2_read__88_ETC___d294 } ;
  assign _theResult___fst_rdata__h59709 =
	     { drv1_reg_31,
	       drv1_reg_30,
	       drv1_reg_29,
	       drv1_reg_28,
	       drv1_reg_27,
	       drv1_reg_26,
	       drv1_reg_25,
	       drv1_reg_24,
	       drv1_reg_23,
	       drv1_reg_22,
	       drv1_reg_21,
	       drv1_reg_20,
	       drv1_reg_19,
	       drv1_reg_18,
	       drv1_reg_17,
	       drv1_reg_16,
	       drv1_reg_15,
	       drv1_reg_14,
	       drv1_reg_13,
	       drv1_reg_12,
	       drv1_reg_11,
	       drv1_reg_10,
	       drv1_reg_9,
	       drv1_reg_8,
	       drv1_reg_7,
	       drv1_reg_6,
	       drv1_reg_5,
	       drv1_reg_4,
	       drv1_reg_3_read__38_CONCAT_drv1_reg_2_read__39_ETC___d345,
	       drv1_reg_31,
	       drv1_reg_30,
	       drv1_reg_29,
	       drv1_reg_28,
	       drv1_reg_27,
	       drv1_reg_26,
	       drv1_reg_25,
	       drv1_reg_24,
	       drv1_reg_23,
	       drv1_reg_22,
	       drv1_reg_21,
	       drv1_reg_20,
	       drv1_reg_19,
	       drv1_reg_18,
	       drv1_reg_17,
	       drv1_reg_16,
	       drv1_reg_15,
	       drv1_reg_14,
	       drv1_reg_13,
	       drv1_reg_12,
	       drv1_reg_11,
	       drv1_reg_10,
	       drv1_reg_9,
	       drv1_reg_8,
	       drv1_reg_7,
	       drv1_reg_6,
	       drv1_reg_5,
	       drv1_reg_4,
	       drv1_reg_3_read__38_CONCAT_drv1_reg_2_read__39_ETC___d345 } ;
  assign _theResult___fst_rdata__h59744 =
	     { drv2_reg_31,
	       drv2_reg_30,
	       drv2_reg_29,
	       drv2_reg_28,
	       drv2_reg_27,
	       drv2_reg_26,
	       drv2_reg_25,
	       drv2_reg_24,
	       drv2_reg_23,
	       drv2_reg_22,
	       drv2_reg_21,
	       drv2_reg_20,
	       drv2_reg_19,
	       drv2_reg_18,
	       drv2_reg_17,
	       drv2_reg_16,
	       drv2_reg_15,
	       drv2_reg_14,
	       drv2_reg_13,
	       drv2_reg_12,
	       drv2_reg_11,
	       drv2_reg_10,
	       drv2_reg_9,
	       drv2_reg_8,
	       drv2_reg_7,
	       drv2_reg_6,
	       drv2_reg_5,
	       drv2_reg_4,
	       drv2_reg_3_read__89_CONCAT_drv2_reg_2_read__90_ETC___d396,
	       drv2_reg_31,
	       drv2_reg_30,
	       drv2_reg_29,
	       drv2_reg_28,
	       drv2_reg_27,
	       drv2_reg_26,
	       drv2_reg_25,
	       drv2_reg_24,
	       drv2_reg_23,
	       drv2_reg_22,
	       drv2_reg_21,
	       drv2_reg_20,
	       drv2_reg_19,
	       drv2_reg_18,
	       drv2_reg_17,
	       drv2_reg_16,
	       drv2_reg_15,
	       drv2_reg_14,
	       drv2_reg_13,
	       drv2_reg_12,
	       drv2_reg_11,
	       drv2_reg_10,
	       drv2_reg_9,
	       drv2_reg_8,
	       drv2_reg_7,
	       drv2_reg_6,
	       drv2_reg_5,
	       drv2_reg_4,
	       drv2_reg_3_read__89_CONCAT_drv2_reg_2_read__90_ETC___d396 } ;
  assign _theResult___fst_rdata__h59779 =
	     { pd_reg_31,
	       pd_reg_30,
	       pd_reg_29,
	       pd_reg_28,
	       pd_reg_27,
	       pd_reg_26,
	       pd_reg_25,
	       pd_reg_24,
	       pd_reg_23,
	       pd_reg_22,
	       pd_reg_21,
	       pd_reg_20,
	       pd_reg_19,
	       pd_reg_18,
	       pd_reg_17,
	       pd_reg_16,
	       pd_reg_15,
	       pd_reg_14,
	       pd_reg_13,
	       pd_reg_12,
	       pd_reg_11,
	       pd_reg_10,
	       pd_reg_9,
	       pd_reg_8,
	       pd_reg_7,
	       pd_reg_6,
	       pd_reg_5,
	       pd_reg_4,
	       pd_reg_3_read__40_CONCAT_pd_reg_2_read__41_CON_ETC___d447,
	       pd_reg_31,
	       pd_reg_30,
	       pd_reg_29,
	       pd_reg_28,
	       pd_reg_27,
	       pd_reg_26,
	       pd_reg_25,
	       pd_reg_24,
	       pd_reg_23,
	       pd_reg_22,
	       pd_reg_21,
	       pd_reg_20,
	       pd_reg_19,
	       pd_reg_18,
	       pd_reg_17,
	       pd_reg_16,
	       pd_reg_15,
	       pd_reg_14,
	       pd_reg_13,
	       pd_reg_12,
	       pd_reg_11,
	       pd_reg_10,
	       pd_reg_9,
	       pd_reg_8,
	       pd_reg_7,
	       pd_reg_6,
	       pd_reg_5,
	       pd_reg_4,
	       pd_reg_3_read__40_CONCAT_pd_reg_2_read__41_CON_ETC___d447 } ;
  assign _theResult___fst_rdata__h59814 =
	     { ppen_reg_31,
	       ppen_reg_30,
	       ppen_reg_29,
	       ppen_reg_28,
	       ppen_reg_27,
	       ppen_reg_26,
	       ppen_reg_25,
	       ppen_reg_24,
	       ppen_reg_23,
	       ppen_reg_22,
	       ppen_reg_21,
	       ppen_reg_20,
	       ppen_reg_19,
	       ppen_reg_18,
	       ppen_reg_17,
	       ppen_reg_16,
	       ppen_reg_15,
	       ppen_reg_14,
	       ppen_reg_13,
	       ppen_reg_12,
	       ppen_reg_11,
	       ppen_reg_10,
	       ppen_reg_9,
	       ppen_reg_8,
	       ppen_reg_7,
	       ppen_reg_6,
	       ppen_reg_5,
	       ppen_reg_4,
	       ppen_reg_3_read__91_CONCAT_ppen_reg_2_read__92_ETC___d498,
	       ppen_reg_31,
	       ppen_reg_30,
	       ppen_reg_29,
	       ppen_reg_28,
	       ppen_reg_27,
	       ppen_reg_26,
	       ppen_reg_25,
	       ppen_reg_24,
	       ppen_reg_23,
	       ppen_reg_22,
	       ppen_reg_21,
	       ppen_reg_20,
	       ppen_reg_19,
	       ppen_reg_18,
	       ppen_reg_17,
	       ppen_reg_16,
	       ppen_reg_15,
	       ppen_reg_14,
	       ppen_reg_13,
	       ppen_reg_12,
	       ppen_reg_11,
	       ppen_reg_10,
	       ppen_reg_9,
	       ppen_reg_8,
	       ppen_reg_7,
	       ppen_reg_6,
	       ppen_reg_5,
	       ppen_reg_4,
	       ppen_reg_3_read__91_CONCAT_ppen_reg_2_read__92_ETC___d498 } ;
  assign _theResult___fst_rdata__h59849 =
	     { prg_slew_reg_31,
	       prg_slew_reg_30,
	       prg_slew_reg_29,
	       prg_slew_reg_28,
	       prg_slew_reg_27,
	       prg_slew_reg_26,
	       prg_slew_reg_25,
	       prg_slew_reg_24,
	       prg_slew_reg_23,
	       prg_slew_reg_22,
	       prg_slew_reg_21,
	       prg_slew_reg_20,
	       prg_slew_reg_19,
	       prg_slew_reg_18,
	       prg_slew_reg_17,
	       prg_slew_reg_16,
	       prg_slew_reg_15,
	       prg_slew_reg_14,
	       prg_slew_reg_13,
	       prg_slew_reg_12,
	       prg_slew_reg_11,
	       prg_slew_reg_10,
	       prg_slew_reg_9,
	       prg_slew_reg_8,
	       prg_slew_reg_7,
	       prg_slew_reg_6,
	       prg_slew_reg_5,
	       prg_slew_reg_4,
	       prg_slew_reg_3_read__42_CONCAT_prg_slew_reg_2__ETC___d549,
	       prg_slew_reg_31,
	       prg_slew_reg_30,
	       prg_slew_reg_29,
	       prg_slew_reg_28,
	       prg_slew_reg_27,
	       prg_slew_reg_26,
	       prg_slew_reg_25,
	       prg_slew_reg_24,
	       prg_slew_reg_23,
	       prg_slew_reg_22,
	       prg_slew_reg_21,
	       prg_slew_reg_20,
	       prg_slew_reg_19,
	       prg_slew_reg_18,
	       prg_slew_reg_17,
	       prg_slew_reg_16,
	       prg_slew_reg_15,
	       prg_slew_reg_14,
	       prg_slew_reg_13,
	       prg_slew_reg_12,
	       prg_slew_reg_11,
	       prg_slew_reg_10,
	       prg_slew_reg_9,
	       prg_slew_reg_8,
	       prg_slew_reg_7,
	       prg_slew_reg_6,
	       prg_slew_reg_5,
	       prg_slew_reg_4,
	       prg_slew_reg_3_read__42_CONCAT_prg_slew_reg_2__ETC___d549 } ;
  assign _theResult___fst_rdata__h59884 =
	     { puq_reg_31,
	       puq_reg_30,
	       puq_reg_29,
	       puq_reg_28,
	       puq_reg_27,
	       puq_reg_26,
	       puq_reg_25,
	       puq_reg_24,
	       puq_reg_23,
	       puq_reg_22,
	       puq_reg_21,
	       puq_reg_20,
	       puq_reg_19,
	       puq_reg_18,
	       puq_reg_17,
	       puq_reg_16,
	       puq_reg_15,
	       puq_reg_14,
	       puq_reg_13,
	       puq_reg_12,
	       puq_reg_11,
	       puq_reg_10,
	       puq_reg_9,
	       puq_reg_8,
	       puq_reg_7,
	       puq_reg_6,
	       puq_reg_5,
	       puq_reg_4,
	       puq_reg_3_read__93_CONCAT_puq_reg_2_read__94_C_ETC___d600,
	       puq_reg_31,
	       puq_reg_30,
	       puq_reg_29,
	       puq_reg_28,
	       puq_reg_27,
	       puq_reg_26,
	       puq_reg_25,
	       puq_reg_24,
	       puq_reg_23,
	       puq_reg_22,
	       puq_reg_21,
	       puq_reg_20,
	       puq_reg_19,
	       puq_reg_18,
	       puq_reg_17,
	       puq_reg_16,
	       puq_reg_15,
	       puq_reg_14,
	       puq_reg_13,
	       puq_reg_12,
	       puq_reg_11,
	       puq_reg_10,
	       puq_reg_9,
	       puq_reg_8,
	       puq_reg_7,
	       puq_reg_6,
	       puq_reg_5,
	       puq_reg_4,
	       puq_reg_3_read__93_CONCAT_puq_reg_2_read__94_C_ETC___d600 } ;
  assign _theResult___fst_rdata__h59919 =
	     { pwrupzhl_reg_31,
	       pwrupzhl_reg_30,
	       pwrupzhl_reg_29,
	       pwrupzhl_reg_28,
	       pwrupzhl_reg_27,
	       pwrupzhl_reg_26,
	       pwrupzhl_reg_25,
	       pwrupzhl_reg_24,
	       pwrupzhl_reg_23,
	       pwrupzhl_reg_22,
	       pwrupzhl_reg_21,
	       pwrupzhl_reg_20,
	       pwrupzhl_reg_19,
	       pwrupzhl_reg_18,
	       pwrupzhl_reg_17,
	       pwrupzhl_reg_16,
	       pwrupzhl_reg_15,
	       pwrupzhl_reg_14,
	       pwrupzhl_reg_13,
	       pwrupzhl_reg_12,
	       pwrupzhl_reg_11,
	       pwrupzhl_reg_10,
	       pwrupzhl_reg_9,
	       pwrupzhl_reg_8,
	       pwrupzhl_reg_7,
	       pwrupzhl_reg_6,
	       pwrupzhl_reg_5,
	       pwrupzhl_reg_4,
	       pwrupzhl_reg_3_read__44_CONCAT_pwrupzhl_reg_2__ETC___d651,
	       pwrupzhl_reg_31,
	       pwrupzhl_reg_30,
	       pwrupzhl_reg_29,
	       pwrupzhl_reg_28,
	       pwrupzhl_reg_27,
	       pwrupzhl_reg_26,
	       pwrupzhl_reg_25,
	       pwrupzhl_reg_24,
	       pwrupzhl_reg_23,
	       pwrupzhl_reg_22,
	       pwrupzhl_reg_21,
	       pwrupzhl_reg_20,
	       pwrupzhl_reg_19,
	       pwrupzhl_reg_18,
	       pwrupzhl_reg_17,
	       pwrupzhl_reg_16,
	       pwrupzhl_reg_15,
	       pwrupzhl_reg_14,
	       pwrupzhl_reg_13,
	       pwrupzhl_reg_12,
	       pwrupzhl_reg_11,
	       pwrupzhl_reg_10,
	       pwrupzhl_reg_9,
	       pwrupzhl_reg_8,
	       pwrupzhl_reg_7,
	       pwrupzhl_reg_6,
	       pwrupzhl_reg_5,
	       pwrupzhl_reg_4,
	       pwrupzhl_reg_3_read__44_CONCAT_pwrupzhl_reg_2__ETC___d651 } ;
  assign _theResult___fst_rdata__h59959 =
	     { pwrup_pull_en_reg_31,
	       pwrup_pull_en_reg_30,
	       pwrup_pull_en_reg_29,
	       pwrup_pull_en_reg_28,
	       pwrup_pull_en_reg_27,
	       pwrup_pull_en_reg_26,
	       pwrup_pull_en_reg_25,
	       pwrup_pull_en_reg_24,
	       pwrup_pull_en_reg_23,
	       pwrup_pull_en_reg_22,
	       pwrup_pull_en_reg_21,
	       pwrup_pull_en_reg_20,
	       pwrup_pull_en_reg_19,
	       pwrup_pull_en_reg_18,
	       pwrup_pull_en_reg_17,
	       pwrup_pull_en_reg_16,
	       pwrup_pull_en_reg_15,
	       pwrup_pull_en_reg_14,
	       pwrup_pull_en_reg_13,
	       pwrup_pull_en_reg_12,
	       pwrup_pull_en_reg_11,
	       pwrup_pull_en_reg_10,
	       pwrup_pull_en_reg_9,
	       pwrup_pull_en_reg_8,
	       pwrup_pull_en_reg_7,
	       pwrup_pull_en_reg_6,
	       pwrup_pull_en_reg_5,
	       pwrup_pull_en_reg_4,
	       pwrup_pull_en_reg_3_read__95_CONCAT_pwrup_pull_ETC___d702,
	       pwrup_pull_en_reg_31,
	       pwrup_pull_en_reg_30,
	       pwrup_pull_en_reg_29,
	       pwrup_pull_en_reg_28,
	       pwrup_pull_en_reg_27,
	       pwrup_pull_en_reg_26,
	       pwrup_pull_en_reg_25,
	       pwrup_pull_en_reg_24,
	       pwrup_pull_en_reg_23,
	       pwrup_pull_en_reg_22,
	       pwrup_pull_en_reg_21,
	       pwrup_pull_en_reg_20,
	       pwrup_pull_en_reg_19,
	       pwrup_pull_en_reg_18,
	       pwrup_pull_en_reg_17,
	       pwrup_pull_en_reg_16,
	       pwrup_pull_en_reg_15,
	       pwrup_pull_en_reg_14,
	       pwrup_pull_en_reg_13,
	       pwrup_pull_en_reg_12,
	       pwrup_pull_en_reg_11,
	       pwrup_pull_en_reg_10,
	       pwrup_pull_en_reg_9,
	       pwrup_pull_en_reg_8,
	       pwrup_pull_en_reg_7,
	       pwrup_pull_en_reg_6,
	       pwrup_pull_en_reg_5,
	       pwrup_pull_en_reg_4,
	       pwrup_pull_en_reg_3_read__95_CONCAT_pwrup_pull_ETC___d702 } ;
  assign datain_register_3_read__5_CONCAT_datain_regist_ETC___d243 =
	     { datain_register_3,
	       datain_register_2,
	       datain_register_1,
	       IF_datain_register_0_THEN_1_ELSE_0__q2[0] } ;
  assign direction_reg_3_read__3_CONCAT_direction_reg_2_ETC___d224 =
	     { direction_reg_3,
	       direction_reg_2,
	       direction_reg_1,
	       IF_direction_reg_0_THEN_1_ELSE_0__q3[0] } ;
  assign drv0_reg_3_read__87_CONCAT_drv0_reg_2_read__88_ETC___d294 =
	     { drv0_reg_3,
	       drv0_reg_2,
	       drv0_reg_1,
	       IF_drv0_reg_0_THEN_1_ELSE_0__q4[0] } ;
  assign drv1_reg_3_read__38_CONCAT_drv1_reg_2_read__39_ETC___d345 =
	     { drv1_reg_3,
	       drv1_reg_2,
	       drv1_reg_1,
	       IF_drv1_reg_0_THEN_1_ELSE_0__q5[0] } ;
  assign drv2_reg_3_read__89_CONCAT_drv2_reg_2_read__90_ETC___d396 =
	     { drv2_reg_3,
	       drv2_reg_2,
	       drv2_reg_1,
	       IF_drv2_reg_0_THEN_1_ELSE_0__q6[0] } ;
  assign pd_reg_3_read__40_CONCAT_pd_reg_2_read__41_CON_ETC___d447 =
	     { pd_reg_3,
	       pd_reg_2,
	       pd_reg_1,
	       IF_pd_reg_0_THEN_1_ELSE_0__q7[0] } ;
  assign ppen_reg_3_read__91_CONCAT_ppen_reg_2_read__92_ETC___d498 =
	     { ppen_reg_3,
	       ppen_reg_2,
	       ppen_reg_1,
	       IF_ppen_reg_0_THEN_1_ELSE_0__q8[0] } ;
  assign prg_slew_reg_3_read__42_CONCAT_prg_slew_reg_2__ETC___d549 =
	     { prg_slew_reg_3,
	       prg_slew_reg_2,
	       prg_slew_reg_1,
	       IF_prg_slew_reg_0_THEN_1_ELSE_0__q9[0] } ;
  assign puq_reg_3_read__93_CONCAT_puq_reg_2_read__94_C_ETC___d600 =
	     { puq_reg_3,
	       puq_reg_2,
	       puq_reg_1,
	       IF_puq_reg_0_THEN_1_ELSE_0__q10[0] } ;
  assign pwrup_pull_en_reg_3_read__95_CONCAT_pwrup_pull_ETC___d702 =
	     { pwrup_pull_en_reg_3,
	       pwrup_pull_en_reg_2,
	       pwrup_pull_en_reg_1,
	       IF_pwrup_pull_en_reg_0_THEN_1_ELSE_0__q12[0] } ;
  assign pwrupzhl_reg_3_read__44_CONCAT_pwrupzhl_reg_2__ETC___d651 =
	     { pwrupzhl_reg_3,
	       pwrupzhl_reg_2,
	       pwrupzhl_reg_1,
	       IF_pwrupzhl_reg_0_THEN_1_ELSE_0__q11[0] } ;
  always@(s_xactor_f_wr_addr$D_OUT)
  begin
    case (s_xactor_f_wr_addr$D_OUT[48:43])
      6'h0,
      6'h04,
      6'h08,
      6'h0C,
      6'h10,
      6'h14,
      6'h18,
      6'h1C,
      6'h20,
      6'h24,
      6'h28:
	  CASE_s_xactor_f_wr_addrD_OUT_BITS_48_TO_43_0x_ETC__q1 = 2'd0;
      default: CASE_s_xactor_f_wr_addrD_OUT_BITS_48_TO_43_0x_ETC__q1 = 2'd2;
    endcase
  end
  always@(s_xactor_f_rd_addr$D_OUT or
	  _theResult___fst_rdata__h59959 or
	  _theResult___fst_rdata__h59604 or
	  _theResult___fst_rdata__h59639 or
	  _theResult___fst_rdata__h59674 or
	  _theResult___fst_rdata__h59709 or
	  _theResult___fst_rdata__h59744 or
	  _theResult___fst_rdata__h59779 or
	  _theResult___fst_rdata__h59814 or
	  _theResult___fst_rdata__h59849 or
	  _theResult___fst_rdata__h59884 or _theResult___fst_rdata__h59919)
  begin
    case (s_xactor_f_rd_addr$D_OUT[48:43])
      6'h0: x_rdata__h60009 = _theResult___fst_rdata__h59604;
      6'h04: x_rdata__h60009 = _theResult___fst_rdata__h59639;
      6'h08: x_rdata__h60009 = _theResult___fst_rdata__h59674;
      6'h0C: x_rdata__h60009 = _theResult___fst_rdata__h59709;
      6'h10: x_rdata__h60009 = _theResult___fst_rdata__h59744;
      6'h14: x_rdata__h60009 = _theResult___fst_rdata__h59779;
      6'h18: x_rdata__h60009 = _theResult___fst_rdata__h59814;
      6'h1C: x_rdata__h60009 = _theResult___fst_rdata__h59849;
      6'h20: x_rdata__h60009 = _theResult___fst_rdata__h59884;
      6'h24: x_rdata__h60009 = _theResult___fst_rdata__h59919;
      default: x_rdata__h60009 = _theResult___fst_rdata__h59959;
    endcase
  end
  always@(s_xactor_f_rd_addr$D_OUT)
  begin
    case (s_xactor_f_rd_addr$D_OUT[48:43])
      6'h0,
      6'h04,
      6'h08,
      6'h0C,
      6'h10,
      6'h14,
      6'h18,
      6'h1C,
      6'h20,
      6'h24,
      6'h28:
	  CASE_s_xactor_f_rd_addrD_OUT_BITS_48_TO_43_0x_ETC__q13 = 2'd0;
      default: CASE_s_xactor_f_rd_addrD_OUT_BITS_48_TO_43_0x_ETC__q13 = 2'd2;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        datain_register_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	datain_register_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dataout_register_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	direction_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv0_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv0_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv1_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	drv2_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	drv2_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pd_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	ppen_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	prg_slew_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	prg_slew_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'b1;
	puq_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	puq_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrup_pull_en_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pwrupzhl_reg_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	toplic_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (datain_register_0$EN)
	  datain_register_0 <= `BSV_ASSIGNMENT_DELAY datain_register_0$D_IN;
	if (datain_register_1$EN)
	  datain_register_1 <= `BSV_ASSIGNMENT_DELAY datain_register_1$D_IN;
	if (datain_register_10$EN)
	  datain_register_10 <= `BSV_ASSIGNMENT_DELAY datain_register_10$D_IN;
	if (datain_register_11$EN)
	  datain_register_11 <= `BSV_ASSIGNMENT_DELAY datain_register_11$D_IN;
	if (datain_register_12$EN)
	  datain_register_12 <= `BSV_ASSIGNMENT_DELAY datain_register_12$D_IN;
	if (datain_register_13$EN)
	  datain_register_13 <= `BSV_ASSIGNMENT_DELAY datain_register_13$D_IN;
	if (datain_register_14$EN)
	  datain_register_14 <= `BSV_ASSIGNMENT_DELAY datain_register_14$D_IN;
	if (datain_register_15$EN)
	  datain_register_15 <= `BSV_ASSIGNMENT_DELAY datain_register_15$D_IN;
	if (datain_register_16$EN)
	  datain_register_16 <= `BSV_ASSIGNMENT_DELAY datain_register_16$D_IN;
	if (datain_register_17$EN)
	  datain_register_17 <= `BSV_ASSIGNMENT_DELAY datain_register_17$D_IN;
	if (datain_register_18$EN)
	  datain_register_18 <= `BSV_ASSIGNMENT_DELAY datain_register_18$D_IN;
	if (datain_register_19$EN)
	  datain_register_19 <= `BSV_ASSIGNMENT_DELAY datain_register_19$D_IN;
	if (datain_register_2$EN)
	  datain_register_2 <= `BSV_ASSIGNMENT_DELAY datain_register_2$D_IN;
	if (datain_register_20$EN)
	  datain_register_20 <= `BSV_ASSIGNMENT_DELAY datain_register_20$D_IN;
	if (datain_register_21$EN)
	  datain_register_21 <= `BSV_ASSIGNMENT_DELAY datain_register_21$D_IN;
	if (datain_register_22$EN)
	  datain_register_22 <= `BSV_ASSIGNMENT_DELAY datain_register_22$D_IN;
	if (datain_register_23$EN)
	  datain_register_23 <= `BSV_ASSIGNMENT_DELAY datain_register_23$D_IN;
	if (datain_register_24$EN)
	  datain_register_24 <= `BSV_ASSIGNMENT_DELAY datain_register_24$D_IN;
	if (datain_register_25$EN)
	  datain_register_25 <= `BSV_ASSIGNMENT_DELAY datain_register_25$D_IN;
	if (datain_register_26$EN)
	  datain_register_26 <= `BSV_ASSIGNMENT_DELAY datain_register_26$D_IN;
	if (datain_register_27$EN)
	  datain_register_27 <= `BSV_ASSIGNMENT_DELAY datain_register_27$D_IN;
	if (datain_register_28$EN)
	  datain_register_28 <= `BSV_ASSIGNMENT_DELAY datain_register_28$D_IN;
	if (datain_register_29$EN)
	  datain_register_29 <= `BSV_ASSIGNMENT_DELAY datain_register_29$D_IN;
	if (datain_register_3$EN)
	  datain_register_3 <= `BSV_ASSIGNMENT_DELAY datain_register_3$D_IN;
	if (datain_register_30$EN)
	  datain_register_30 <= `BSV_ASSIGNMENT_DELAY datain_register_30$D_IN;
	if (datain_register_31$EN)
	  datain_register_31 <= `BSV_ASSIGNMENT_DELAY datain_register_31$D_IN;
	if (datain_register_4$EN)
	  datain_register_4 <= `BSV_ASSIGNMENT_DELAY datain_register_4$D_IN;
	if (datain_register_5$EN)
	  datain_register_5 <= `BSV_ASSIGNMENT_DELAY datain_register_5$D_IN;
	if (datain_register_6$EN)
	  datain_register_6 <= `BSV_ASSIGNMENT_DELAY datain_register_6$D_IN;
	if (datain_register_7$EN)
	  datain_register_7 <= `BSV_ASSIGNMENT_DELAY datain_register_7$D_IN;
	if (datain_register_8$EN)
	  datain_register_8 <= `BSV_ASSIGNMENT_DELAY datain_register_8$D_IN;
	if (datain_register_9$EN)
	  datain_register_9 <= `BSV_ASSIGNMENT_DELAY datain_register_9$D_IN;
	if (dataout_register_0$EN)
	  dataout_register_0 <= `BSV_ASSIGNMENT_DELAY dataout_register_0$D_IN;
	if (dataout_register_1$EN)
	  dataout_register_1 <= `BSV_ASSIGNMENT_DELAY dataout_register_1$D_IN;
	if (dataout_register_10$EN)
	  dataout_register_10 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_10$D_IN;
	if (dataout_register_11$EN)
	  dataout_register_11 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_11$D_IN;
	if (dataout_register_12$EN)
	  dataout_register_12 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_12$D_IN;
	if (dataout_register_13$EN)
	  dataout_register_13 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_13$D_IN;
	if (dataout_register_14$EN)
	  dataout_register_14 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_14$D_IN;
	if (dataout_register_15$EN)
	  dataout_register_15 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_15$D_IN;
	if (dataout_register_16$EN)
	  dataout_register_16 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_16$D_IN;
	if (dataout_register_17$EN)
	  dataout_register_17 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_17$D_IN;
	if (dataout_register_18$EN)
	  dataout_register_18 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_18$D_IN;
	if (dataout_register_19$EN)
	  dataout_register_19 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_19$D_IN;
	if (dataout_register_2$EN)
	  dataout_register_2 <= `BSV_ASSIGNMENT_DELAY dataout_register_2$D_IN;
	if (dataout_register_20$EN)
	  dataout_register_20 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_20$D_IN;
	if (dataout_register_21$EN)
	  dataout_register_21 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_21$D_IN;
	if (dataout_register_22$EN)
	  dataout_register_22 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_22$D_IN;
	if (dataout_register_23$EN)
	  dataout_register_23 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_23$D_IN;
	if (dataout_register_24$EN)
	  dataout_register_24 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_24$D_IN;
	if (dataout_register_25$EN)
	  dataout_register_25 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_25$D_IN;
	if (dataout_register_26$EN)
	  dataout_register_26 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_26$D_IN;
	if (dataout_register_27$EN)
	  dataout_register_27 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_27$D_IN;
	if (dataout_register_28$EN)
	  dataout_register_28 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_28$D_IN;
	if (dataout_register_29$EN)
	  dataout_register_29 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_29$D_IN;
	if (dataout_register_3$EN)
	  dataout_register_3 <= `BSV_ASSIGNMENT_DELAY dataout_register_3$D_IN;
	if (dataout_register_30$EN)
	  dataout_register_30 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_30$D_IN;
	if (dataout_register_31$EN)
	  dataout_register_31 <= `BSV_ASSIGNMENT_DELAY
	      dataout_register_31$D_IN;
	if (dataout_register_4$EN)
	  dataout_register_4 <= `BSV_ASSIGNMENT_DELAY dataout_register_4$D_IN;
	if (dataout_register_5$EN)
	  dataout_register_5 <= `BSV_ASSIGNMENT_DELAY dataout_register_5$D_IN;
	if (dataout_register_6$EN)
	  dataout_register_6 <= `BSV_ASSIGNMENT_DELAY dataout_register_6$D_IN;
	if (dataout_register_7$EN)
	  dataout_register_7 <= `BSV_ASSIGNMENT_DELAY dataout_register_7$D_IN;
	if (dataout_register_8$EN)
	  dataout_register_8 <= `BSV_ASSIGNMENT_DELAY dataout_register_8$D_IN;
	if (dataout_register_9$EN)
	  dataout_register_9 <= `BSV_ASSIGNMENT_DELAY dataout_register_9$D_IN;
	if (direction_reg_0$EN)
	  direction_reg_0 <= `BSV_ASSIGNMENT_DELAY direction_reg_0$D_IN;
	if (direction_reg_1$EN)
	  direction_reg_1 <= `BSV_ASSIGNMENT_DELAY direction_reg_1$D_IN;
	if (direction_reg_10$EN)
	  direction_reg_10 <= `BSV_ASSIGNMENT_DELAY direction_reg_10$D_IN;
	if (direction_reg_11$EN)
	  direction_reg_11 <= `BSV_ASSIGNMENT_DELAY direction_reg_11$D_IN;
	if (direction_reg_12$EN)
	  direction_reg_12 <= `BSV_ASSIGNMENT_DELAY direction_reg_12$D_IN;
	if (direction_reg_13$EN)
	  direction_reg_13 <= `BSV_ASSIGNMENT_DELAY direction_reg_13$D_IN;
	if (direction_reg_14$EN)
	  direction_reg_14 <= `BSV_ASSIGNMENT_DELAY direction_reg_14$D_IN;
	if (direction_reg_15$EN)
	  direction_reg_15 <= `BSV_ASSIGNMENT_DELAY direction_reg_15$D_IN;
	if (direction_reg_16$EN)
	  direction_reg_16 <= `BSV_ASSIGNMENT_DELAY direction_reg_16$D_IN;
	if (direction_reg_17$EN)
	  direction_reg_17 <= `BSV_ASSIGNMENT_DELAY direction_reg_17$D_IN;
	if (direction_reg_18$EN)
	  direction_reg_18 <= `BSV_ASSIGNMENT_DELAY direction_reg_18$D_IN;
	if (direction_reg_19$EN)
	  direction_reg_19 <= `BSV_ASSIGNMENT_DELAY direction_reg_19$D_IN;
	if (direction_reg_2$EN)
	  direction_reg_2 <= `BSV_ASSIGNMENT_DELAY direction_reg_2$D_IN;
	if (direction_reg_20$EN)
	  direction_reg_20 <= `BSV_ASSIGNMENT_DELAY direction_reg_20$D_IN;
	if (direction_reg_21$EN)
	  direction_reg_21 <= `BSV_ASSIGNMENT_DELAY direction_reg_21$D_IN;
	if (direction_reg_22$EN)
	  direction_reg_22 <= `BSV_ASSIGNMENT_DELAY direction_reg_22$D_IN;
	if (direction_reg_23$EN)
	  direction_reg_23 <= `BSV_ASSIGNMENT_DELAY direction_reg_23$D_IN;
	if (direction_reg_24$EN)
	  direction_reg_24 <= `BSV_ASSIGNMENT_DELAY direction_reg_24$D_IN;
	if (direction_reg_25$EN)
	  direction_reg_25 <= `BSV_ASSIGNMENT_DELAY direction_reg_25$D_IN;
	if (direction_reg_26$EN)
	  direction_reg_26 <= `BSV_ASSIGNMENT_DELAY direction_reg_26$D_IN;
	if (direction_reg_27$EN)
	  direction_reg_27 <= `BSV_ASSIGNMENT_DELAY direction_reg_27$D_IN;
	if (direction_reg_28$EN)
	  direction_reg_28 <= `BSV_ASSIGNMENT_DELAY direction_reg_28$D_IN;
	if (direction_reg_29$EN)
	  direction_reg_29 <= `BSV_ASSIGNMENT_DELAY direction_reg_29$D_IN;
	if (direction_reg_3$EN)
	  direction_reg_3 <= `BSV_ASSIGNMENT_DELAY direction_reg_3$D_IN;
	if (direction_reg_30$EN)
	  direction_reg_30 <= `BSV_ASSIGNMENT_DELAY direction_reg_30$D_IN;
	if (direction_reg_31$EN)
	  direction_reg_31 <= `BSV_ASSIGNMENT_DELAY direction_reg_31$D_IN;
	if (direction_reg_4$EN)
	  direction_reg_4 <= `BSV_ASSIGNMENT_DELAY direction_reg_4$D_IN;
	if (direction_reg_5$EN)
	  direction_reg_5 <= `BSV_ASSIGNMENT_DELAY direction_reg_5$D_IN;
	if (direction_reg_6$EN)
	  direction_reg_6 <= `BSV_ASSIGNMENT_DELAY direction_reg_6$D_IN;
	if (direction_reg_7$EN)
	  direction_reg_7 <= `BSV_ASSIGNMENT_DELAY direction_reg_7$D_IN;
	if (direction_reg_8$EN)
	  direction_reg_8 <= `BSV_ASSIGNMENT_DELAY direction_reg_8$D_IN;
	if (direction_reg_9$EN)
	  direction_reg_9 <= `BSV_ASSIGNMENT_DELAY direction_reg_9$D_IN;
	if (drv0_reg_0$EN)
	  drv0_reg_0 <= `BSV_ASSIGNMENT_DELAY drv0_reg_0$D_IN;
	if (drv0_reg_1$EN)
	  drv0_reg_1 <= `BSV_ASSIGNMENT_DELAY drv0_reg_1$D_IN;
	if (drv0_reg_10$EN)
	  drv0_reg_10 <= `BSV_ASSIGNMENT_DELAY drv0_reg_10$D_IN;
	if (drv0_reg_11$EN)
	  drv0_reg_11 <= `BSV_ASSIGNMENT_DELAY drv0_reg_11$D_IN;
	if (drv0_reg_12$EN)
	  drv0_reg_12 <= `BSV_ASSIGNMENT_DELAY drv0_reg_12$D_IN;
	if (drv0_reg_13$EN)
	  drv0_reg_13 <= `BSV_ASSIGNMENT_DELAY drv0_reg_13$D_IN;
	if (drv0_reg_14$EN)
	  drv0_reg_14 <= `BSV_ASSIGNMENT_DELAY drv0_reg_14$D_IN;
	if (drv0_reg_15$EN)
	  drv0_reg_15 <= `BSV_ASSIGNMENT_DELAY drv0_reg_15$D_IN;
	if (drv0_reg_16$EN)
	  drv0_reg_16 <= `BSV_ASSIGNMENT_DELAY drv0_reg_16$D_IN;
	if (drv0_reg_17$EN)
	  drv0_reg_17 <= `BSV_ASSIGNMENT_DELAY drv0_reg_17$D_IN;
	if (drv0_reg_18$EN)
	  drv0_reg_18 <= `BSV_ASSIGNMENT_DELAY drv0_reg_18$D_IN;
	if (drv0_reg_19$EN)
	  drv0_reg_19 <= `BSV_ASSIGNMENT_DELAY drv0_reg_19$D_IN;
	if (drv0_reg_2$EN)
	  drv0_reg_2 <= `BSV_ASSIGNMENT_DELAY drv0_reg_2$D_IN;
	if (drv0_reg_20$EN)
	  drv0_reg_20 <= `BSV_ASSIGNMENT_DELAY drv0_reg_20$D_IN;
	if (drv0_reg_21$EN)
	  drv0_reg_21 <= `BSV_ASSIGNMENT_DELAY drv0_reg_21$D_IN;
	if (drv0_reg_22$EN)
	  drv0_reg_22 <= `BSV_ASSIGNMENT_DELAY drv0_reg_22$D_IN;
	if (drv0_reg_23$EN)
	  drv0_reg_23 <= `BSV_ASSIGNMENT_DELAY drv0_reg_23$D_IN;
	if (drv0_reg_24$EN)
	  drv0_reg_24 <= `BSV_ASSIGNMENT_DELAY drv0_reg_24$D_IN;
	if (drv0_reg_25$EN)
	  drv0_reg_25 <= `BSV_ASSIGNMENT_DELAY drv0_reg_25$D_IN;
	if (drv0_reg_26$EN)
	  drv0_reg_26 <= `BSV_ASSIGNMENT_DELAY drv0_reg_26$D_IN;
	if (drv0_reg_27$EN)
	  drv0_reg_27 <= `BSV_ASSIGNMENT_DELAY drv0_reg_27$D_IN;
	if (drv0_reg_28$EN)
	  drv0_reg_28 <= `BSV_ASSIGNMENT_DELAY drv0_reg_28$D_IN;
	if (drv0_reg_29$EN)
	  drv0_reg_29 <= `BSV_ASSIGNMENT_DELAY drv0_reg_29$D_IN;
	if (drv0_reg_3$EN)
	  drv0_reg_3 <= `BSV_ASSIGNMENT_DELAY drv0_reg_3$D_IN;
	if (drv0_reg_30$EN)
	  drv0_reg_30 <= `BSV_ASSIGNMENT_DELAY drv0_reg_30$D_IN;
	if (drv0_reg_31$EN)
	  drv0_reg_31 <= `BSV_ASSIGNMENT_DELAY drv0_reg_31$D_IN;
	if (drv0_reg_4$EN)
	  drv0_reg_4 <= `BSV_ASSIGNMENT_DELAY drv0_reg_4$D_IN;
	if (drv0_reg_5$EN)
	  drv0_reg_5 <= `BSV_ASSIGNMENT_DELAY drv0_reg_5$D_IN;
	if (drv0_reg_6$EN)
	  drv0_reg_6 <= `BSV_ASSIGNMENT_DELAY drv0_reg_6$D_IN;
	if (drv0_reg_7$EN)
	  drv0_reg_7 <= `BSV_ASSIGNMENT_DELAY drv0_reg_7$D_IN;
	if (drv0_reg_8$EN)
	  drv0_reg_8 <= `BSV_ASSIGNMENT_DELAY drv0_reg_8$D_IN;
	if (drv0_reg_9$EN)
	  drv0_reg_9 <= `BSV_ASSIGNMENT_DELAY drv0_reg_9$D_IN;
	if (drv1_reg_0$EN)
	  drv1_reg_0 <= `BSV_ASSIGNMENT_DELAY drv1_reg_0$D_IN;
	if (drv1_reg_1$EN)
	  drv1_reg_1 <= `BSV_ASSIGNMENT_DELAY drv1_reg_1$D_IN;
	if (drv1_reg_10$EN)
	  drv1_reg_10 <= `BSV_ASSIGNMENT_DELAY drv1_reg_10$D_IN;
	if (drv1_reg_11$EN)
	  drv1_reg_11 <= `BSV_ASSIGNMENT_DELAY drv1_reg_11$D_IN;
	if (drv1_reg_12$EN)
	  drv1_reg_12 <= `BSV_ASSIGNMENT_DELAY drv1_reg_12$D_IN;
	if (drv1_reg_13$EN)
	  drv1_reg_13 <= `BSV_ASSIGNMENT_DELAY drv1_reg_13$D_IN;
	if (drv1_reg_14$EN)
	  drv1_reg_14 <= `BSV_ASSIGNMENT_DELAY drv1_reg_14$D_IN;
	if (drv1_reg_15$EN)
	  drv1_reg_15 <= `BSV_ASSIGNMENT_DELAY drv1_reg_15$D_IN;
	if (drv1_reg_16$EN)
	  drv1_reg_16 <= `BSV_ASSIGNMENT_DELAY drv1_reg_16$D_IN;
	if (drv1_reg_17$EN)
	  drv1_reg_17 <= `BSV_ASSIGNMENT_DELAY drv1_reg_17$D_IN;
	if (drv1_reg_18$EN)
	  drv1_reg_18 <= `BSV_ASSIGNMENT_DELAY drv1_reg_18$D_IN;
	if (drv1_reg_19$EN)
	  drv1_reg_19 <= `BSV_ASSIGNMENT_DELAY drv1_reg_19$D_IN;
	if (drv1_reg_2$EN)
	  drv1_reg_2 <= `BSV_ASSIGNMENT_DELAY drv1_reg_2$D_IN;
	if (drv1_reg_20$EN)
	  drv1_reg_20 <= `BSV_ASSIGNMENT_DELAY drv1_reg_20$D_IN;
	if (drv1_reg_21$EN)
	  drv1_reg_21 <= `BSV_ASSIGNMENT_DELAY drv1_reg_21$D_IN;
	if (drv1_reg_22$EN)
	  drv1_reg_22 <= `BSV_ASSIGNMENT_DELAY drv1_reg_22$D_IN;
	if (drv1_reg_23$EN)
	  drv1_reg_23 <= `BSV_ASSIGNMENT_DELAY drv1_reg_23$D_IN;
	if (drv1_reg_24$EN)
	  drv1_reg_24 <= `BSV_ASSIGNMENT_DELAY drv1_reg_24$D_IN;
	if (drv1_reg_25$EN)
	  drv1_reg_25 <= `BSV_ASSIGNMENT_DELAY drv1_reg_25$D_IN;
	if (drv1_reg_26$EN)
	  drv1_reg_26 <= `BSV_ASSIGNMENT_DELAY drv1_reg_26$D_IN;
	if (drv1_reg_27$EN)
	  drv1_reg_27 <= `BSV_ASSIGNMENT_DELAY drv1_reg_27$D_IN;
	if (drv1_reg_28$EN)
	  drv1_reg_28 <= `BSV_ASSIGNMENT_DELAY drv1_reg_28$D_IN;
	if (drv1_reg_29$EN)
	  drv1_reg_29 <= `BSV_ASSIGNMENT_DELAY drv1_reg_29$D_IN;
	if (drv1_reg_3$EN)
	  drv1_reg_3 <= `BSV_ASSIGNMENT_DELAY drv1_reg_3$D_IN;
	if (drv1_reg_30$EN)
	  drv1_reg_30 <= `BSV_ASSIGNMENT_DELAY drv1_reg_30$D_IN;
	if (drv1_reg_31$EN)
	  drv1_reg_31 <= `BSV_ASSIGNMENT_DELAY drv1_reg_31$D_IN;
	if (drv1_reg_4$EN)
	  drv1_reg_4 <= `BSV_ASSIGNMENT_DELAY drv1_reg_4$D_IN;
	if (drv1_reg_5$EN)
	  drv1_reg_5 <= `BSV_ASSIGNMENT_DELAY drv1_reg_5$D_IN;
	if (drv1_reg_6$EN)
	  drv1_reg_6 <= `BSV_ASSIGNMENT_DELAY drv1_reg_6$D_IN;
	if (drv1_reg_7$EN)
	  drv1_reg_7 <= `BSV_ASSIGNMENT_DELAY drv1_reg_7$D_IN;
	if (drv1_reg_8$EN)
	  drv1_reg_8 <= `BSV_ASSIGNMENT_DELAY drv1_reg_8$D_IN;
	if (drv1_reg_9$EN)
	  drv1_reg_9 <= `BSV_ASSIGNMENT_DELAY drv1_reg_9$D_IN;
	if (drv2_reg_0$EN)
	  drv2_reg_0 <= `BSV_ASSIGNMENT_DELAY drv2_reg_0$D_IN;
	if (drv2_reg_1$EN)
	  drv2_reg_1 <= `BSV_ASSIGNMENT_DELAY drv2_reg_1$D_IN;
	if (drv2_reg_10$EN)
	  drv2_reg_10 <= `BSV_ASSIGNMENT_DELAY drv2_reg_10$D_IN;
	if (drv2_reg_11$EN)
	  drv2_reg_11 <= `BSV_ASSIGNMENT_DELAY drv2_reg_11$D_IN;
	if (drv2_reg_12$EN)
	  drv2_reg_12 <= `BSV_ASSIGNMENT_DELAY drv2_reg_12$D_IN;
	if (drv2_reg_13$EN)
	  drv2_reg_13 <= `BSV_ASSIGNMENT_DELAY drv2_reg_13$D_IN;
	if (drv2_reg_14$EN)
	  drv2_reg_14 <= `BSV_ASSIGNMENT_DELAY drv2_reg_14$D_IN;
	if (drv2_reg_15$EN)
	  drv2_reg_15 <= `BSV_ASSIGNMENT_DELAY drv2_reg_15$D_IN;
	if (drv2_reg_16$EN)
	  drv2_reg_16 <= `BSV_ASSIGNMENT_DELAY drv2_reg_16$D_IN;
	if (drv2_reg_17$EN)
	  drv2_reg_17 <= `BSV_ASSIGNMENT_DELAY drv2_reg_17$D_IN;
	if (drv2_reg_18$EN)
	  drv2_reg_18 <= `BSV_ASSIGNMENT_DELAY drv2_reg_18$D_IN;
	if (drv2_reg_19$EN)
	  drv2_reg_19 <= `BSV_ASSIGNMENT_DELAY drv2_reg_19$D_IN;
	if (drv2_reg_2$EN)
	  drv2_reg_2 <= `BSV_ASSIGNMENT_DELAY drv2_reg_2$D_IN;
	if (drv2_reg_20$EN)
	  drv2_reg_20 <= `BSV_ASSIGNMENT_DELAY drv2_reg_20$D_IN;
	if (drv2_reg_21$EN)
	  drv2_reg_21 <= `BSV_ASSIGNMENT_DELAY drv2_reg_21$D_IN;
	if (drv2_reg_22$EN)
	  drv2_reg_22 <= `BSV_ASSIGNMENT_DELAY drv2_reg_22$D_IN;
	if (drv2_reg_23$EN)
	  drv2_reg_23 <= `BSV_ASSIGNMENT_DELAY drv2_reg_23$D_IN;
	if (drv2_reg_24$EN)
	  drv2_reg_24 <= `BSV_ASSIGNMENT_DELAY drv2_reg_24$D_IN;
	if (drv2_reg_25$EN)
	  drv2_reg_25 <= `BSV_ASSIGNMENT_DELAY drv2_reg_25$D_IN;
	if (drv2_reg_26$EN)
	  drv2_reg_26 <= `BSV_ASSIGNMENT_DELAY drv2_reg_26$D_IN;
	if (drv2_reg_27$EN)
	  drv2_reg_27 <= `BSV_ASSIGNMENT_DELAY drv2_reg_27$D_IN;
	if (drv2_reg_28$EN)
	  drv2_reg_28 <= `BSV_ASSIGNMENT_DELAY drv2_reg_28$D_IN;
	if (drv2_reg_29$EN)
	  drv2_reg_29 <= `BSV_ASSIGNMENT_DELAY drv2_reg_29$D_IN;
	if (drv2_reg_3$EN)
	  drv2_reg_3 <= `BSV_ASSIGNMENT_DELAY drv2_reg_3$D_IN;
	if (drv2_reg_30$EN)
	  drv2_reg_30 <= `BSV_ASSIGNMENT_DELAY drv2_reg_30$D_IN;
	if (drv2_reg_31$EN)
	  drv2_reg_31 <= `BSV_ASSIGNMENT_DELAY drv2_reg_31$D_IN;
	if (drv2_reg_4$EN)
	  drv2_reg_4 <= `BSV_ASSIGNMENT_DELAY drv2_reg_4$D_IN;
	if (drv2_reg_5$EN)
	  drv2_reg_5 <= `BSV_ASSIGNMENT_DELAY drv2_reg_5$D_IN;
	if (drv2_reg_6$EN)
	  drv2_reg_6 <= `BSV_ASSIGNMENT_DELAY drv2_reg_6$D_IN;
	if (drv2_reg_7$EN)
	  drv2_reg_7 <= `BSV_ASSIGNMENT_DELAY drv2_reg_7$D_IN;
	if (drv2_reg_8$EN)
	  drv2_reg_8 <= `BSV_ASSIGNMENT_DELAY drv2_reg_8$D_IN;
	if (drv2_reg_9$EN)
	  drv2_reg_9 <= `BSV_ASSIGNMENT_DELAY drv2_reg_9$D_IN;
	if (pd_reg_0$EN) pd_reg_0 <= `BSV_ASSIGNMENT_DELAY pd_reg_0$D_IN;
	if (pd_reg_1$EN) pd_reg_1 <= `BSV_ASSIGNMENT_DELAY pd_reg_1$D_IN;
	if (pd_reg_10$EN) pd_reg_10 <= `BSV_ASSIGNMENT_DELAY pd_reg_10$D_IN;
	if (pd_reg_11$EN) pd_reg_11 <= `BSV_ASSIGNMENT_DELAY pd_reg_11$D_IN;
	if (pd_reg_12$EN) pd_reg_12 <= `BSV_ASSIGNMENT_DELAY pd_reg_12$D_IN;
	if (pd_reg_13$EN) pd_reg_13 <= `BSV_ASSIGNMENT_DELAY pd_reg_13$D_IN;
	if (pd_reg_14$EN) pd_reg_14 <= `BSV_ASSIGNMENT_DELAY pd_reg_14$D_IN;
	if (pd_reg_15$EN) pd_reg_15 <= `BSV_ASSIGNMENT_DELAY pd_reg_15$D_IN;
	if (pd_reg_16$EN) pd_reg_16 <= `BSV_ASSIGNMENT_DELAY pd_reg_16$D_IN;
	if (pd_reg_17$EN) pd_reg_17 <= `BSV_ASSIGNMENT_DELAY pd_reg_17$D_IN;
	if (pd_reg_18$EN) pd_reg_18 <= `BSV_ASSIGNMENT_DELAY pd_reg_18$D_IN;
	if (pd_reg_19$EN) pd_reg_19 <= `BSV_ASSIGNMENT_DELAY pd_reg_19$D_IN;
	if (pd_reg_2$EN) pd_reg_2 <= `BSV_ASSIGNMENT_DELAY pd_reg_2$D_IN;
	if (pd_reg_20$EN) pd_reg_20 <= `BSV_ASSIGNMENT_DELAY pd_reg_20$D_IN;
	if (pd_reg_21$EN) pd_reg_21 <= `BSV_ASSIGNMENT_DELAY pd_reg_21$D_IN;
	if (pd_reg_22$EN) pd_reg_22 <= `BSV_ASSIGNMENT_DELAY pd_reg_22$D_IN;
	if (pd_reg_23$EN) pd_reg_23 <= `BSV_ASSIGNMENT_DELAY pd_reg_23$D_IN;
	if (pd_reg_24$EN) pd_reg_24 <= `BSV_ASSIGNMENT_DELAY pd_reg_24$D_IN;
	if (pd_reg_25$EN) pd_reg_25 <= `BSV_ASSIGNMENT_DELAY pd_reg_25$D_IN;
	if (pd_reg_26$EN) pd_reg_26 <= `BSV_ASSIGNMENT_DELAY pd_reg_26$D_IN;
	if (pd_reg_27$EN) pd_reg_27 <= `BSV_ASSIGNMENT_DELAY pd_reg_27$D_IN;
	if (pd_reg_28$EN) pd_reg_28 <= `BSV_ASSIGNMENT_DELAY pd_reg_28$D_IN;
	if (pd_reg_29$EN) pd_reg_29 <= `BSV_ASSIGNMENT_DELAY pd_reg_29$D_IN;
	if (pd_reg_3$EN) pd_reg_3 <= `BSV_ASSIGNMENT_DELAY pd_reg_3$D_IN;
	if (pd_reg_30$EN) pd_reg_30 <= `BSV_ASSIGNMENT_DELAY pd_reg_30$D_IN;
	if (pd_reg_31$EN) pd_reg_31 <= `BSV_ASSIGNMENT_DELAY pd_reg_31$D_IN;
	if (pd_reg_4$EN) pd_reg_4 <= `BSV_ASSIGNMENT_DELAY pd_reg_4$D_IN;
	if (pd_reg_5$EN) pd_reg_5 <= `BSV_ASSIGNMENT_DELAY pd_reg_5$D_IN;
	if (pd_reg_6$EN) pd_reg_6 <= `BSV_ASSIGNMENT_DELAY pd_reg_6$D_IN;
	if (pd_reg_7$EN) pd_reg_7 <= `BSV_ASSIGNMENT_DELAY pd_reg_7$D_IN;
	if (pd_reg_8$EN) pd_reg_8 <= `BSV_ASSIGNMENT_DELAY pd_reg_8$D_IN;
	if (pd_reg_9$EN) pd_reg_9 <= `BSV_ASSIGNMENT_DELAY pd_reg_9$D_IN;
	if (ppen_reg_0$EN)
	  ppen_reg_0 <= `BSV_ASSIGNMENT_DELAY ppen_reg_0$D_IN;
	if (ppen_reg_1$EN)
	  ppen_reg_1 <= `BSV_ASSIGNMENT_DELAY ppen_reg_1$D_IN;
	if (ppen_reg_10$EN)
	  ppen_reg_10 <= `BSV_ASSIGNMENT_DELAY ppen_reg_10$D_IN;
	if (ppen_reg_11$EN)
	  ppen_reg_11 <= `BSV_ASSIGNMENT_DELAY ppen_reg_11$D_IN;
	if (ppen_reg_12$EN)
	  ppen_reg_12 <= `BSV_ASSIGNMENT_DELAY ppen_reg_12$D_IN;
	if (ppen_reg_13$EN)
	  ppen_reg_13 <= `BSV_ASSIGNMENT_DELAY ppen_reg_13$D_IN;
	if (ppen_reg_14$EN)
	  ppen_reg_14 <= `BSV_ASSIGNMENT_DELAY ppen_reg_14$D_IN;
	if (ppen_reg_15$EN)
	  ppen_reg_15 <= `BSV_ASSIGNMENT_DELAY ppen_reg_15$D_IN;
	if (ppen_reg_16$EN)
	  ppen_reg_16 <= `BSV_ASSIGNMENT_DELAY ppen_reg_16$D_IN;
	if (ppen_reg_17$EN)
	  ppen_reg_17 <= `BSV_ASSIGNMENT_DELAY ppen_reg_17$D_IN;
	if (ppen_reg_18$EN)
	  ppen_reg_18 <= `BSV_ASSIGNMENT_DELAY ppen_reg_18$D_IN;
	if (ppen_reg_19$EN)
	  ppen_reg_19 <= `BSV_ASSIGNMENT_DELAY ppen_reg_19$D_IN;
	if (ppen_reg_2$EN)
	  ppen_reg_2 <= `BSV_ASSIGNMENT_DELAY ppen_reg_2$D_IN;
	if (ppen_reg_20$EN)
	  ppen_reg_20 <= `BSV_ASSIGNMENT_DELAY ppen_reg_20$D_IN;
	if (ppen_reg_21$EN)
	  ppen_reg_21 <= `BSV_ASSIGNMENT_DELAY ppen_reg_21$D_IN;
	if (ppen_reg_22$EN)
	  ppen_reg_22 <= `BSV_ASSIGNMENT_DELAY ppen_reg_22$D_IN;
	if (ppen_reg_23$EN)
	  ppen_reg_23 <= `BSV_ASSIGNMENT_DELAY ppen_reg_23$D_IN;
	if (ppen_reg_24$EN)
	  ppen_reg_24 <= `BSV_ASSIGNMENT_DELAY ppen_reg_24$D_IN;
	if (ppen_reg_25$EN)
	  ppen_reg_25 <= `BSV_ASSIGNMENT_DELAY ppen_reg_25$D_IN;
	if (ppen_reg_26$EN)
	  ppen_reg_26 <= `BSV_ASSIGNMENT_DELAY ppen_reg_26$D_IN;
	if (ppen_reg_27$EN)
	  ppen_reg_27 <= `BSV_ASSIGNMENT_DELAY ppen_reg_27$D_IN;
	if (ppen_reg_28$EN)
	  ppen_reg_28 <= `BSV_ASSIGNMENT_DELAY ppen_reg_28$D_IN;
	if (ppen_reg_29$EN)
	  ppen_reg_29 <= `BSV_ASSIGNMENT_DELAY ppen_reg_29$D_IN;
	if (ppen_reg_3$EN)
	  ppen_reg_3 <= `BSV_ASSIGNMENT_DELAY ppen_reg_3$D_IN;
	if (ppen_reg_30$EN)
	  ppen_reg_30 <= `BSV_ASSIGNMENT_DELAY ppen_reg_30$D_IN;
	if (ppen_reg_31$EN)
	  ppen_reg_31 <= `BSV_ASSIGNMENT_DELAY ppen_reg_31$D_IN;
	if (ppen_reg_4$EN)
	  ppen_reg_4 <= `BSV_ASSIGNMENT_DELAY ppen_reg_4$D_IN;
	if (ppen_reg_5$EN)
	  ppen_reg_5 <= `BSV_ASSIGNMENT_DELAY ppen_reg_5$D_IN;
	if (ppen_reg_6$EN)
	  ppen_reg_6 <= `BSV_ASSIGNMENT_DELAY ppen_reg_6$D_IN;
	if (ppen_reg_7$EN)
	  ppen_reg_7 <= `BSV_ASSIGNMENT_DELAY ppen_reg_7$D_IN;
	if (ppen_reg_8$EN)
	  ppen_reg_8 <= `BSV_ASSIGNMENT_DELAY ppen_reg_8$D_IN;
	if (ppen_reg_9$EN)
	  ppen_reg_9 <= `BSV_ASSIGNMENT_DELAY ppen_reg_9$D_IN;
	if (prg_slew_reg_0$EN)
	  prg_slew_reg_0 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_0$D_IN;
	if (prg_slew_reg_1$EN)
	  prg_slew_reg_1 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_1$D_IN;
	if (prg_slew_reg_10$EN)
	  prg_slew_reg_10 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_10$D_IN;
	if (prg_slew_reg_11$EN)
	  prg_slew_reg_11 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_11$D_IN;
	if (prg_slew_reg_12$EN)
	  prg_slew_reg_12 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_12$D_IN;
	if (prg_slew_reg_13$EN)
	  prg_slew_reg_13 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_13$D_IN;
	if (prg_slew_reg_14$EN)
	  prg_slew_reg_14 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_14$D_IN;
	if (prg_slew_reg_15$EN)
	  prg_slew_reg_15 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_15$D_IN;
	if (prg_slew_reg_16$EN)
	  prg_slew_reg_16 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_16$D_IN;
	if (prg_slew_reg_17$EN)
	  prg_slew_reg_17 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_17$D_IN;
	if (prg_slew_reg_18$EN)
	  prg_slew_reg_18 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_18$D_IN;
	if (prg_slew_reg_19$EN)
	  prg_slew_reg_19 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_19$D_IN;
	if (prg_slew_reg_2$EN)
	  prg_slew_reg_2 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_2$D_IN;
	if (prg_slew_reg_20$EN)
	  prg_slew_reg_20 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_20$D_IN;
	if (prg_slew_reg_21$EN)
	  prg_slew_reg_21 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_21$D_IN;
	if (prg_slew_reg_22$EN)
	  prg_slew_reg_22 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_22$D_IN;
	if (prg_slew_reg_23$EN)
	  prg_slew_reg_23 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_23$D_IN;
	if (prg_slew_reg_24$EN)
	  prg_slew_reg_24 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_24$D_IN;
	if (prg_slew_reg_25$EN)
	  prg_slew_reg_25 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_25$D_IN;
	if (prg_slew_reg_26$EN)
	  prg_slew_reg_26 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_26$D_IN;
	if (prg_slew_reg_27$EN)
	  prg_slew_reg_27 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_27$D_IN;
	if (prg_slew_reg_28$EN)
	  prg_slew_reg_28 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_28$D_IN;
	if (prg_slew_reg_29$EN)
	  prg_slew_reg_29 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_29$D_IN;
	if (prg_slew_reg_3$EN)
	  prg_slew_reg_3 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_3$D_IN;
	if (prg_slew_reg_30$EN)
	  prg_slew_reg_30 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_30$D_IN;
	if (prg_slew_reg_31$EN)
	  prg_slew_reg_31 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_31$D_IN;
	if (prg_slew_reg_4$EN)
	  prg_slew_reg_4 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_4$D_IN;
	if (prg_slew_reg_5$EN)
	  prg_slew_reg_5 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_5$D_IN;
	if (prg_slew_reg_6$EN)
	  prg_slew_reg_6 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_6$D_IN;
	if (prg_slew_reg_7$EN)
	  prg_slew_reg_7 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_7$D_IN;
	if (prg_slew_reg_8$EN)
	  prg_slew_reg_8 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_8$D_IN;
	if (prg_slew_reg_9$EN)
	  prg_slew_reg_9 <= `BSV_ASSIGNMENT_DELAY prg_slew_reg_9$D_IN;
	if (puq_reg_0$EN) puq_reg_0 <= `BSV_ASSIGNMENT_DELAY puq_reg_0$D_IN;
	if (puq_reg_1$EN) puq_reg_1 <= `BSV_ASSIGNMENT_DELAY puq_reg_1$D_IN;
	if (puq_reg_10$EN)
	  puq_reg_10 <= `BSV_ASSIGNMENT_DELAY puq_reg_10$D_IN;
	if (puq_reg_11$EN)
	  puq_reg_11 <= `BSV_ASSIGNMENT_DELAY puq_reg_11$D_IN;
	if (puq_reg_12$EN)
	  puq_reg_12 <= `BSV_ASSIGNMENT_DELAY puq_reg_12$D_IN;
	if (puq_reg_13$EN)
	  puq_reg_13 <= `BSV_ASSIGNMENT_DELAY puq_reg_13$D_IN;
	if (puq_reg_14$EN)
	  puq_reg_14 <= `BSV_ASSIGNMENT_DELAY puq_reg_14$D_IN;
	if (puq_reg_15$EN)
	  puq_reg_15 <= `BSV_ASSIGNMENT_DELAY puq_reg_15$D_IN;
	if (puq_reg_16$EN)
	  puq_reg_16 <= `BSV_ASSIGNMENT_DELAY puq_reg_16$D_IN;
	if (puq_reg_17$EN)
	  puq_reg_17 <= `BSV_ASSIGNMENT_DELAY puq_reg_17$D_IN;
	if (puq_reg_18$EN)
	  puq_reg_18 <= `BSV_ASSIGNMENT_DELAY puq_reg_18$D_IN;
	if (puq_reg_19$EN)
	  puq_reg_19 <= `BSV_ASSIGNMENT_DELAY puq_reg_19$D_IN;
	if (puq_reg_2$EN) puq_reg_2 <= `BSV_ASSIGNMENT_DELAY puq_reg_2$D_IN;
	if (puq_reg_20$EN)
	  puq_reg_20 <= `BSV_ASSIGNMENT_DELAY puq_reg_20$D_IN;
	if (puq_reg_21$EN)
	  puq_reg_21 <= `BSV_ASSIGNMENT_DELAY puq_reg_21$D_IN;
	if (puq_reg_22$EN)
	  puq_reg_22 <= `BSV_ASSIGNMENT_DELAY puq_reg_22$D_IN;
	if (puq_reg_23$EN)
	  puq_reg_23 <= `BSV_ASSIGNMENT_DELAY puq_reg_23$D_IN;
	if (puq_reg_24$EN)
	  puq_reg_24 <= `BSV_ASSIGNMENT_DELAY puq_reg_24$D_IN;
	if (puq_reg_25$EN)
	  puq_reg_25 <= `BSV_ASSIGNMENT_DELAY puq_reg_25$D_IN;
	if (puq_reg_26$EN)
	  puq_reg_26 <= `BSV_ASSIGNMENT_DELAY puq_reg_26$D_IN;
	if (puq_reg_27$EN)
	  puq_reg_27 <= `BSV_ASSIGNMENT_DELAY puq_reg_27$D_IN;
	if (puq_reg_28$EN)
	  puq_reg_28 <= `BSV_ASSIGNMENT_DELAY puq_reg_28$D_IN;
	if (puq_reg_29$EN)
	  puq_reg_29 <= `BSV_ASSIGNMENT_DELAY puq_reg_29$D_IN;
	if (puq_reg_3$EN) puq_reg_3 <= `BSV_ASSIGNMENT_DELAY puq_reg_3$D_IN;
	if (puq_reg_30$EN)
	  puq_reg_30 <= `BSV_ASSIGNMENT_DELAY puq_reg_30$D_IN;
	if (puq_reg_31$EN)
	  puq_reg_31 <= `BSV_ASSIGNMENT_DELAY puq_reg_31$D_IN;
	if (puq_reg_4$EN) puq_reg_4 <= `BSV_ASSIGNMENT_DELAY puq_reg_4$D_IN;
	if (puq_reg_5$EN) puq_reg_5 <= `BSV_ASSIGNMENT_DELAY puq_reg_5$D_IN;
	if (puq_reg_6$EN) puq_reg_6 <= `BSV_ASSIGNMENT_DELAY puq_reg_6$D_IN;
	if (puq_reg_7$EN) puq_reg_7 <= `BSV_ASSIGNMENT_DELAY puq_reg_7$D_IN;
	if (puq_reg_8$EN) puq_reg_8 <= `BSV_ASSIGNMENT_DELAY puq_reg_8$D_IN;
	if (puq_reg_9$EN) puq_reg_9 <= `BSV_ASSIGNMENT_DELAY puq_reg_9$D_IN;
	if (pwrup_pull_en_reg_0$EN)
	  pwrup_pull_en_reg_0 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_0$D_IN;
	if (pwrup_pull_en_reg_1$EN)
	  pwrup_pull_en_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_1$D_IN;
	if (pwrup_pull_en_reg_10$EN)
	  pwrup_pull_en_reg_10 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_10$D_IN;
	if (pwrup_pull_en_reg_11$EN)
	  pwrup_pull_en_reg_11 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_11$D_IN;
	if (pwrup_pull_en_reg_12$EN)
	  pwrup_pull_en_reg_12 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_12$D_IN;
	if (pwrup_pull_en_reg_13$EN)
	  pwrup_pull_en_reg_13 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_13$D_IN;
	if (pwrup_pull_en_reg_14$EN)
	  pwrup_pull_en_reg_14 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_14$D_IN;
	if (pwrup_pull_en_reg_15$EN)
	  pwrup_pull_en_reg_15 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_15$D_IN;
	if (pwrup_pull_en_reg_16$EN)
	  pwrup_pull_en_reg_16 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_16$D_IN;
	if (pwrup_pull_en_reg_17$EN)
	  pwrup_pull_en_reg_17 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_17$D_IN;
	if (pwrup_pull_en_reg_18$EN)
	  pwrup_pull_en_reg_18 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_18$D_IN;
	if (pwrup_pull_en_reg_19$EN)
	  pwrup_pull_en_reg_19 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_19$D_IN;
	if (pwrup_pull_en_reg_2$EN)
	  pwrup_pull_en_reg_2 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_2$D_IN;
	if (pwrup_pull_en_reg_20$EN)
	  pwrup_pull_en_reg_20 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_20$D_IN;
	if (pwrup_pull_en_reg_21$EN)
	  pwrup_pull_en_reg_21 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_21$D_IN;
	if (pwrup_pull_en_reg_22$EN)
	  pwrup_pull_en_reg_22 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_22$D_IN;
	if (pwrup_pull_en_reg_23$EN)
	  pwrup_pull_en_reg_23 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_23$D_IN;
	if (pwrup_pull_en_reg_24$EN)
	  pwrup_pull_en_reg_24 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_24$D_IN;
	if (pwrup_pull_en_reg_25$EN)
	  pwrup_pull_en_reg_25 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_25$D_IN;
	if (pwrup_pull_en_reg_26$EN)
	  pwrup_pull_en_reg_26 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_26$D_IN;
	if (pwrup_pull_en_reg_27$EN)
	  pwrup_pull_en_reg_27 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_27$D_IN;
	if (pwrup_pull_en_reg_28$EN)
	  pwrup_pull_en_reg_28 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_28$D_IN;
	if (pwrup_pull_en_reg_29$EN)
	  pwrup_pull_en_reg_29 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_29$D_IN;
	if (pwrup_pull_en_reg_3$EN)
	  pwrup_pull_en_reg_3 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_3$D_IN;
	if (pwrup_pull_en_reg_30$EN)
	  pwrup_pull_en_reg_30 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_30$D_IN;
	if (pwrup_pull_en_reg_31$EN)
	  pwrup_pull_en_reg_31 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_31$D_IN;
	if (pwrup_pull_en_reg_4$EN)
	  pwrup_pull_en_reg_4 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_4$D_IN;
	if (pwrup_pull_en_reg_5$EN)
	  pwrup_pull_en_reg_5 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_5$D_IN;
	if (pwrup_pull_en_reg_6$EN)
	  pwrup_pull_en_reg_6 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_6$D_IN;
	if (pwrup_pull_en_reg_7$EN)
	  pwrup_pull_en_reg_7 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_7$D_IN;
	if (pwrup_pull_en_reg_8$EN)
	  pwrup_pull_en_reg_8 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_8$D_IN;
	if (pwrup_pull_en_reg_9$EN)
	  pwrup_pull_en_reg_9 <= `BSV_ASSIGNMENT_DELAY
	      pwrup_pull_en_reg_9$D_IN;
	if (pwrupzhl_reg_0$EN)
	  pwrupzhl_reg_0 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_0$D_IN;
	if (pwrupzhl_reg_1$EN)
	  pwrupzhl_reg_1 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_1$D_IN;
	if (pwrupzhl_reg_10$EN)
	  pwrupzhl_reg_10 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_10$D_IN;
	if (pwrupzhl_reg_11$EN)
	  pwrupzhl_reg_11 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_11$D_IN;
	if (pwrupzhl_reg_12$EN)
	  pwrupzhl_reg_12 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_12$D_IN;
	if (pwrupzhl_reg_13$EN)
	  pwrupzhl_reg_13 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_13$D_IN;
	if (pwrupzhl_reg_14$EN)
	  pwrupzhl_reg_14 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_14$D_IN;
	if (pwrupzhl_reg_15$EN)
	  pwrupzhl_reg_15 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_15$D_IN;
	if (pwrupzhl_reg_16$EN)
	  pwrupzhl_reg_16 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_16$D_IN;
	if (pwrupzhl_reg_17$EN)
	  pwrupzhl_reg_17 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_17$D_IN;
	if (pwrupzhl_reg_18$EN)
	  pwrupzhl_reg_18 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_18$D_IN;
	if (pwrupzhl_reg_19$EN)
	  pwrupzhl_reg_19 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_19$D_IN;
	if (pwrupzhl_reg_2$EN)
	  pwrupzhl_reg_2 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_2$D_IN;
	if (pwrupzhl_reg_20$EN)
	  pwrupzhl_reg_20 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_20$D_IN;
	if (pwrupzhl_reg_21$EN)
	  pwrupzhl_reg_21 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_21$D_IN;
	if (pwrupzhl_reg_22$EN)
	  pwrupzhl_reg_22 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_22$D_IN;
	if (pwrupzhl_reg_23$EN)
	  pwrupzhl_reg_23 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_23$D_IN;
	if (pwrupzhl_reg_24$EN)
	  pwrupzhl_reg_24 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_24$D_IN;
	if (pwrupzhl_reg_25$EN)
	  pwrupzhl_reg_25 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_25$D_IN;
	if (pwrupzhl_reg_26$EN)
	  pwrupzhl_reg_26 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_26$D_IN;
	if (pwrupzhl_reg_27$EN)
	  pwrupzhl_reg_27 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_27$D_IN;
	if (pwrupzhl_reg_28$EN)
	  pwrupzhl_reg_28 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_28$D_IN;
	if (pwrupzhl_reg_29$EN)
	  pwrupzhl_reg_29 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_29$D_IN;
	if (pwrupzhl_reg_3$EN)
	  pwrupzhl_reg_3 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_3$D_IN;
	if (pwrupzhl_reg_30$EN)
	  pwrupzhl_reg_30 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_30$D_IN;
	if (pwrupzhl_reg_31$EN)
	  pwrupzhl_reg_31 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_31$D_IN;
	if (pwrupzhl_reg_4$EN)
	  pwrupzhl_reg_4 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_4$D_IN;
	if (pwrupzhl_reg_5$EN)
	  pwrupzhl_reg_5 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_5$D_IN;
	if (pwrupzhl_reg_6$EN)
	  pwrupzhl_reg_6 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_6$D_IN;
	if (pwrupzhl_reg_7$EN)
	  pwrupzhl_reg_7 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_7$D_IN;
	if (pwrupzhl_reg_8$EN)
	  pwrupzhl_reg_8 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_8$D_IN;
	if (pwrupzhl_reg_9$EN)
	  pwrupzhl_reg_9 <= `BSV_ASSIGNMENT_DELAY pwrupzhl_reg_9$D_IN;
	if (toplic_0$EN) toplic_0 <= `BSV_ASSIGNMENT_DELAY toplic_0$D_IN;
	if (toplic_1$EN) toplic_1 <= `BSV_ASSIGNMENT_DELAY toplic_1$D_IN;
	if (toplic_10$EN) toplic_10 <= `BSV_ASSIGNMENT_DELAY toplic_10$D_IN;
	if (toplic_11$EN) toplic_11 <= `BSV_ASSIGNMENT_DELAY toplic_11$D_IN;
	if (toplic_12$EN) toplic_12 <= `BSV_ASSIGNMENT_DELAY toplic_12$D_IN;
	if (toplic_13$EN) toplic_13 <= `BSV_ASSIGNMENT_DELAY toplic_13$D_IN;
	if (toplic_14$EN) toplic_14 <= `BSV_ASSIGNMENT_DELAY toplic_14$D_IN;
	if (toplic_15$EN) toplic_15 <= `BSV_ASSIGNMENT_DELAY toplic_15$D_IN;
	if (toplic_16$EN) toplic_16 <= `BSV_ASSIGNMENT_DELAY toplic_16$D_IN;
	if (toplic_17$EN) toplic_17 <= `BSV_ASSIGNMENT_DELAY toplic_17$D_IN;
	if (toplic_18$EN) toplic_18 <= `BSV_ASSIGNMENT_DELAY toplic_18$D_IN;
	if (toplic_19$EN) toplic_19 <= `BSV_ASSIGNMENT_DELAY toplic_19$D_IN;
	if (toplic_2$EN) toplic_2 <= `BSV_ASSIGNMENT_DELAY toplic_2$D_IN;
	if (toplic_20$EN) toplic_20 <= `BSV_ASSIGNMENT_DELAY toplic_20$D_IN;
	if (toplic_21$EN) toplic_21 <= `BSV_ASSIGNMENT_DELAY toplic_21$D_IN;
	if (toplic_22$EN) toplic_22 <= `BSV_ASSIGNMENT_DELAY toplic_22$D_IN;
	if (toplic_23$EN) toplic_23 <= `BSV_ASSIGNMENT_DELAY toplic_23$D_IN;
	if (toplic_24$EN) toplic_24 <= `BSV_ASSIGNMENT_DELAY toplic_24$D_IN;
	if (toplic_25$EN) toplic_25 <= `BSV_ASSIGNMENT_DELAY toplic_25$D_IN;
	if (toplic_26$EN) toplic_26 <= `BSV_ASSIGNMENT_DELAY toplic_26$D_IN;
	if (toplic_27$EN) toplic_27 <= `BSV_ASSIGNMENT_DELAY toplic_27$D_IN;
	if (toplic_28$EN) toplic_28 <= `BSV_ASSIGNMENT_DELAY toplic_28$D_IN;
	if (toplic_29$EN) toplic_29 <= `BSV_ASSIGNMENT_DELAY toplic_29$D_IN;
	if (toplic_3$EN) toplic_3 <= `BSV_ASSIGNMENT_DELAY toplic_3$D_IN;
	if (toplic_30$EN) toplic_30 <= `BSV_ASSIGNMENT_DELAY toplic_30$D_IN;
	if (toplic_31$EN) toplic_31 <= `BSV_ASSIGNMENT_DELAY toplic_31$D_IN;
	if (toplic_4$EN) toplic_4 <= `BSV_ASSIGNMENT_DELAY toplic_4$D_IN;
	if (toplic_5$EN) toplic_5 <= `BSV_ASSIGNMENT_DELAY toplic_5$D_IN;
	if (toplic_6$EN) toplic_6 <= `BSV_ASSIGNMENT_DELAY toplic_6$D_IN;
	if (toplic_7$EN) toplic_7 <= `BSV_ASSIGNMENT_DELAY toplic_7$D_IN;
	if (toplic_8$EN) toplic_8 <= `BSV_ASSIGNMENT_DELAY toplic_8$D_IN;
	if (toplic_9$EN) toplic_9 <= `BSV_ASSIGNMENT_DELAY toplic_9$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    datain_register_0 = 1'h0;
    datain_register_1 = 1'h0;
    datain_register_10 = 1'h0;
    datain_register_11 = 1'h0;
    datain_register_12 = 1'h0;
    datain_register_13 = 1'h0;
    datain_register_14 = 1'h0;
    datain_register_15 = 1'h0;
    datain_register_16 = 1'h0;
    datain_register_17 = 1'h0;
    datain_register_18 = 1'h0;
    datain_register_19 = 1'h0;
    datain_register_2 = 1'h0;
    datain_register_20 = 1'h0;
    datain_register_21 = 1'h0;
    datain_register_22 = 1'h0;
    datain_register_23 = 1'h0;
    datain_register_24 = 1'h0;
    datain_register_25 = 1'h0;
    datain_register_26 = 1'h0;
    datain_register_27 = 1'h0;
    datain_register_28 = 1'h0;
    datain_register_29 = 1'h0;
    datain_register_3 = 1'h0;
    datain_register_30 = 1'h0;
    datain_register_31 = 1'h0;
    datain_register_4 = 1'h0;
    datain_register_5 = 1'h0;
    datain_register_6 = 1'h0;
    datain_register_7 = 1'h0;
    datain_register_8 = 1'h0;
    datain_register_9 = 1'h0;
    dataout_register_0 = 1'h0;
    dataout_register_1 = 1'h0;
    dataout_register_10 = 1'h0;
    dataout_register_11 = 1'h0;
    dataout_register_12 = 1'h0;
    dataout_register_13 = 1'h0;
    dataout_register_14 = 1'h0;
    dataout_register_15 = 1'h0;
    dataout_register_16 = 1'h0;
    dataout_register_17 = 1'h0;
    dataout_register_18 = 1'h0;
    dataout_register_19 = 1'h0;
    dataout_register_2 = 1'h0;
    dataout_register_20 = 1'h0;
    dataout_register_21 = 1'h0;
    dataout_register_22 = 1'h0;
    dataout_register_23 = 1'h0;
    dataout_register_24 = 1'h0;
    dataout_register_25 = 1'h0;
    dataout_register_26 = 1'h0;
    dataout_register_27 = 1'h0;
    dataout_register_28 = 1'h0;
    dataout_register_29 = 1'h0;
    dataout_register_3 = 1'h0;
    dataout_register_30 = 1'h0;
    dataout_register_31 = 1'h0;
    dataout_register_4 = 1'h0;
    dataout_register_5 = 1'h0;
    dataout_register_6 = 1'h0;
    dataout_register_7 = 1'h0;
    dataout_register_8 = 1'h0;
    dataout_register_9 = 1'h0;
    direction_reg_0 = 1'h0;
    direction_reg_1 = 1'h0;
    direction_reg_10 = 1'h0;
    direction_reg_11 = 1'h0;
    direction_reg_12 = 1'h0;
    direction_reg_13 = 1'h0;
    direction_reg_14 = 1'h0;
    direction_reg_15 = 1'h0;
    direction_reg_16 = 1'h0;
    direction_reg_17 = 1'h0;
    direction_reg_18 = 1'h0;
    direction_reg_19 = 1'h0;
    direction_reg_2 = 1'h0;
    direction_reg_20 = 1'h0;
    direction_reg_21 = 1'h0;
    direction_reg_22 = 1'h0;
    direction_reg_23 = 1'h0;
    direction_reg_24 = 1'h0;
    direction_reg_25 = 1'h0;
    direction_reg_26 = 1'h0;
    direction_reg_27 = 1'h0;
    direction_reg_28 = 1'h0;
    direction_reg_29 = 1'h0;
    direction_reg_3 = 1'h0;
    direction_reg_30 = 1'h0;
    direction_reg_31 = 1'h0;
    direction_reg_4 = 1'h0;
    direction_reg_5 = 1'h0;
    direction_reg_6 = 1'h0;
    direction_reg_7 = 1'h0;
    direction_reg_8 = 1'h0;
    direction_reg_9 = 1'h0;
    drv0_reg_0 = 1'h0;
    drv0_reg_1 = 1'h0;
    drv0_reg_10 = 1'h0;
    drv0_reg_11 = 1'h0;
    drv0_reg_12 = 1'h0;
    drv0_reg_13 = 1'h0;
    drv0_reg_14 = 1'h0;
    drv0_reg_15 = 1'h0;
    drv0_reg_16 = 1'h0;
    drv0_reg_17 = 1'h0;
    drv0_reg_18 = 1'h0;
    drv0_reg_19 = 1'h0;
    drv0_reg_2 = 1'h0;
    drv0_reg_20 = 1'h0;
    drv0_reg_21 = 1'h0;
    drv0_reg_22 = 1'h0;
    drv0_reg_23 = 1'h0;
    drv0_reg_24 = 1'h0;
    drv0_reg_25 = 1'h0;
    drv0_reg_26 = 1'h0;
    drv0_reg_27 = 1'h0;
    drv0_reg_28 = 1'h0;
    drv0_reg_29 = 1'h0;
    drv0_reg_3 = 1'h0;
    drv0_reg_30 = 1'h0;
    drv0_reg_31 = 1'h0;
    drv0_reg_4 = 1'h0;
    drv0_reg_5 = 1'h0;
    drv0_reg_6 = 1'h0;
    drv0_reg_7 = 1'h0;
    drv0_reg_8 = 1'h0;
    drv0_reg_9 = 1'h0;
    drv1_reg_0 = 1'h0;
    drv1_reg_1 = 1'h0;
    drv1_reg_10 = 1'h0;
    drv1_reg_11 = 1'h0;
    drv1_reg_12 = 1'h0;
    drv1_reg_13 = 1'h0;
    drv1_reg_14 = 1'h0;
    drv1_reg_15 = 1'h0;
    drv1_reg_16 = 1'h0;
    drv1_reg_17 = 1'h0;
    drv1_reg_18 = 1'h0;
    drv1_reg_19 = 1'h0;
    drv1_reg_2 = 1'h0;
    drv1_reg_20 = 1'h0;
    drv1_reg_21 = 1'h0;
    drv1_reg_22 = 1'h0;
    drv1_reg_23 = 1'h0;
    drv1_reg_24 = 1'h0;
    drv1_reg_25 = 1'h0;
    drv1_reg_26 = 1'h0;
    drv1_reg_27 = 1'h0;
    drv1_reg_28 = 1'h0;
    drv1_reg_29 = 1'h0;
    drv1_reg_3 = 1'h0;
    drv1_reg_30 = 1'h0;
    drv1_reg_31 = 1'h0;
    drv1_reg_4 = 1'h0;
    drv1_reg_5 = 1'h0;
    drv1_reg_6 = 1'h0;
    drv1_reg_7 = 1'h0;
    drv1_reg_8 = 1'h0;
    drv1_reg_9 = 1'h0;
    drv2_reg_0 = 1'h0;
    drv2_reg_1 = 1'h0;
    drv2_reg_10 = 1'h0;
    drv2_reg_11 = 1'h0;
    drv2_reg_12 = 1'h0;
    drv2_reg_13 = 1'h0;
    drv2_reg_14 = 1'h0;
    drv2_reg_15 = 1'h0;
    drv2_reg_16 = 1'h0;
    drv2_reg_17 = 1'h0;
    drv2_reg_18 = 1'h0;
    drv2_reg_19 = 1'h0;
    drv2_reg_2 = 1'h0;
    drv2_reg_20 = 1'h0;
    drv2_reg_21 = 1'h0;
    drv2_reg_22 = 1'h0;
    drv2_reg_23 = 1'h0;
    drv2_reg_24 = 1'h0;
    drv2_reg_25 = 1'h0;
    drv2_reg_26 = 1'h0;
    drv2_reg_27 = 1'h0;
    drv2_reg_28 = 1'h0;
    drv2_reg_29 = 1'h0;
    drv2_reg_3 = 1'h0;
    drv2_reg_30 = 1'h0;
    drv2_reg_31 = 1'h0;
    drv2_reg_4 = 1'h0;
    drv2_reg_5 = 1'h0;
    drv2_reg_6 = 1'h0;
    drv2_reg_7 = 1'h0;
    drv2_reg_8 = 1'h0;
    drv2_reg_9 = 1'h0;
    pd_reg_0 = 1'h0;
    pd_reg_1 = 1'h0;
    pd_reg_10 = 1'h0;
    pd_reg_11 = 1'h0;
    pd_reg_12 = 1'h0;
    pd_reg_13 = 1'h0;
    pd_reg_14 = 1'h0;
    pd_reg_15 = 1'h0;
    pd_reg_16 = 1'h0;
    pd_reg_17 = 1'h0;
    pd_reg_18 = 1'h0;
    pd_reg_19 = 1'h0;
    pd_reg_2 = 1'h0;
    pd_reg_20 = 1'h0;
    pd_reg_21 = 1'h0;
    pd_reg_22 = 1'h0;
    pd_reg_23 = 1'h0;
    pd_reg_24 = 1'h0;
    pd_reg_25 = 1'h0;
    pd_reg_26 = 1'h0;
    pd_reg_27 = 1'h0;
    pd_reg_28 = 1'h0;
    pd_reg_29 = 1'h0;
    pd_reg_3 = 1'h0;
    pd_reg_30 = 1'h0;
    pd_reg_31 = 1'h0;
    pd_reg_4 = 1'h0;
    pd_reg_5 = 1'h0;
    pd_reg_6 = 1'h0;
    pd_reg_7 = 1'h0;
    pd_reg_8 = 1'h0;
    pd_reg_9 = 1'h0;
    ppen_reg_0 = 1'h0;
    ppen_reg_1 = 1'h0;
    ppen_reg_10 = 1'h0;
    ppen_reg_11 = 1'h0;
    ppen_reg_12 = 1'h0;
    ppen_reg_13 = 1'h0;
    ppen_reg_14 = 1'h0;
    ppen_reg_15 = 1'h0;
    ppen_reg_16 = 1'h0;
    ppen_reg_17 = 1'h0;
    ppen_reg_18 = 1'h0;
    ppen_reg_19 = 1'h0;
    ppen_reg_2 = 1'h0;
    ppen_reg_20 = 1'h0;
    ppen_reg_21 = 1'h0;
    ppen_reg_22 = 1'h0;
    ppen_reg_23 = 1'h0;
    ppen_reg_24 = 1'h0;
    ppen_reg_25 = 1'h0;
    ppen_reg_26 = 1'h0;
    ppen_reg_27 = 1'h0;
    ppen_reg_28 = 1'h0;
    ppen_reg_29 = 1'h0;
    ppen_reg_3 = 1'h0;
    ppen_reg_30 = 1'h0;
    ppen_reg_31 = 1'h0;
    ppen_reg_4 = 1'h0;
    ppen_reg_5 = 1'h0;
    ppen_reg_6 = 1'h0;
    ppen_reg_7 = 1'h0;
    ppen_reg_8 = 1'h0;
    ppen_reg_9 = 1'h0;
    prg_slew_reg_0 = 1'h0;
    prg_slew_reg_1 = 1'h0;
    prg_slew_reg_10 = 1'h0;
    prg_slew_reg_11 = 1'h0;
    prg_slew_reg_12 = 1'h0;
    prg_slew_reg_13 = 1'h0;
    prg_slew_reg_14 = 1'h0;
    prg_slew_reg_15 = 1'h0;
    prg_slew_reg_16 = 1'h0;
    prg_slew_reg_17 = 1'h0;
    prg_slew_reg_18 = 1'h0;
    prg_slew_reg_19 = 1'h0;
    prg_slew_reg_2 = 1'h0;
    prg_slew_reg_20 = 1'h0;
    prg_slew_reg_21 = 1'h0;
    prg_slew_reg_22 = 1'h0;
    prg_slew_reg_23 = 1'h0;
    prg_slew_reg_24 = 1'h0;
    prg_slew_reg_25 = 1'h0;
    prg_slew_reg_26 = 1'h0;
    prg_slew_reg_27 = 1'h0;
    prg_slew_reg_28 = 1'h0;
    prg_slew_reg_29 = 1'h0;
    prg_slew_reg_3 = 1'h0;
    prg_slew_reg_30 = 1'h0;
    prg_slew_reg_31 = 1'h0;
    prg_slew_reg_4 = 1'h0;
    prg_slew_reg_5 = 1'h0;
    prg_slew_reg_6 = 1'h0;
    prg_slew_reg_7 = 1'h0;
    prg_slew_reg_8 = 1'h0;
    prg_slew_reg_9 = 1'h0;
    puq_reg_0 = 1'h0;
    puq_reg_1 = 1'h0;
    puq_reg_10 = 1'h0;
    puq_reg_11 = 1'h0;
    puq_reg_12 = 1'h0;
    puq_reg_13 = 1'h0;
    puq_reg_14 = 1'h0;
    puq_reg_15 = 1'h0;
    puq_reg_16 = 1'h0;
    puq_reg_17 = 1'h0;
    puq_reg_18 = 1'h0;
    puq_reg_19 = 1'h0;
    puq_reg_2 = 1'h0;
    puq_reg_20 = 1'h0;
    puq_reg_21 = 1'h0;
    puq_reg_22 = 1'h0;
    puq_reg_23 = 1'h0;
    puq_reg_24 = 1'h0;
    puq_reg_25 = 1'h0;
    puq_reg_26 = 1'h0;
    puq_reg_27 = 1'h0;
    puq_reg_28 = 1'h0;
    puq_reg_29 = 1'h0;
    puq_reg_3 = 1'h0;
    puq_reg_30 = 1'h0;
    puq_reg_31 = 1'h0;
    puq_reg_4 = 1'h0;
    puq_reg_5 = 1'h0;
    puq_reg_6 = 1'h0;
    puq_reg_7 = 1'h0;
    puq_reg_8 = 1'h0;
    puq_reg_9 = 1'h0;
    pwrup_pull_en_reg_0 = 1'h0;
    pwrup_pull_en_reg_1 = 1'h0;
    pwrup_pull_en_reg_10 = 1'h0;
    pwrup_pull_en_reg_11 = 1'h0;
    pwrup_pull_en_reg_12 = 1'h0;
    pwrup_pull_en_reg_13 = 1'h0;
    pwrup_pull_en_reg_14 = 1'h0;
    pwrup_pull_en_reg_15 = 1'h0;
    pwrup_pull_en_reg_16 = 1'h0;
    pwrup_pull_en_reg_17 = 1'h0;
    pwrup_pull_en_reg_18 = 1'h0;
    pwrup_pull_en_reg_19 = 1'h0;
    pwrup_pull_en_reg_2 = 1'h0;
    pwrup_pull_en_reg_20 = 1'h0;
    pwrup_pull_en_reg_21 = 1'h0;
    pwrup_pull_en_reg_22 = 1'h0;
    pwrup_pull_en_reg_23 = 1'h0;
    pwrup_pull_en_reg_24 = 1'h0;
    pwrup_pull_en_reg_25 = 1'h0;
    pwrup_pull_en_reg_26 = 1'h0;
    pwrup_pull_en_reg_27 = 1'h0;
    pwrup_pull_en_reg_28 = 1'h0;
    pwrup_pull_en_reg_29 = 1'h0;
    pwrup_pull_en_reg_3 = 1'h0;
    pwrup_pull_en_reg_30 = 1'h0;
    pwrup_pull_en_reg_31 = 1'h0;
    pwrup_pull_en_reg_4 = 1'h0;
    pwrup_pull_en_reg_5 = 1'h0;
    pwrup_pull_en_reg_6 = 1'h0;
    pwrup_pull_en_reg_7 = 1'h0;
    pwrup_pull_en_reg_8 = 1'h0;
    pwrup_pull_en_reg_9 = 1'h0;
    pwrupzhl_reg_0 = 1'h0;
    pwrupzhl_reg_1 = 1'h0;
    pwrupzhl_reg_10 = 1'h0;
    pwrupzhl_reg_11 = 1'h0;
    pwrupzhl_reg_12 = 1'h0;
    pwrupzhl_reg_13 = 1'h0;
    pwrupzhl_reg_14 = 1'h0;
    pwrupzhl_reg_15 = 1'h0;
    pwrupzhl_reg_16 = 1'h0;
    pwrupzhl_reg_17 = 1'h0;
    pwrupzhl_reg_18 = 1'h0;
    pwrupzhl_reg_19 = 1'h0;
    pwrupzhl_reg_2 = 1'h0;
    pwrupzhl_reg_20 = 1'h0;
    pwrupzhl_reg_21 = 1'h0;
    pwrupzhl_reg_22 = 1'h0;
    pwrupzhl_reg_23 = 1'h0;
    pwrupzhl_reg_24 = 1'h0;
    pwrupzhl_reg_25 = 1'h0;
    pwrupzhl_reg_26 = 1'h0;
    pwrupzhl_reg_27 = 1'h0;
    pwrupzhl_reg_28 = 1'h0;
    pwrupzhl_reg_29 = 1'h0;
    pwrupzhl_reg_3 = 1'h0;
    pwrupzhl_reg_30 = 1'h0;
    pwrupzhl_reg_31 = 1'h0;
    pwrupzhl_reg_4 = 1'h0;
    pwrupzhl_reg_5 = 1'h0;
    pwrupzhl_reg_6 = 1'h0;
    pwrupzhl_reg_7 = 1'h0;
    pwrupzhl_reg_8 = 1'h0;
    pwrupzhl_reg_9 = 1'h0;
    toplic_0 = 1'h0;
    toplic_1 = 1'h0;
    toplic_10 = 1'h0;
    toplic_11 = 1'h0;
    toplic_12 = 1'h0;
    toplic_13 = 1'h0;
    toplic_14 = 1'h0;
    toplic_15 = 1'h0;
    toplic_16 = 1'h0;
    toplic_17 = 1'h0;
    toplic_18 = 1'h0;
    toplic_19 = 1'h0;
    toplic_2 = 1'h0;
    toplic_20 = 1'h0;
    toplic_21 = 1'h0;
    toplic_22 = 1'h0;
    toplic_23 = 1'h0;
    toplic_24 = 1'h0;
    toplic_25 = 1'h0;
    toplic_26 = 1'h0;
    toplic_27 = 1'h0;
    toplic_28 = 1'h0;
    toplic_29 = 1'h0;
    toplic_3 = 1'h0;
    toplic_30 = 1'h0;
    toplic_31 = 1'h0;
    toplic_4 = 1'h0;
    toplic_5 = 1'h0;
    toplic_6 = 1'h0;
    toplic_7 = 1'h0;
    toplic_8 = 1'h0;
    toplic_9 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkgpio

