//
// Generated by Bluespec Compiler, version 2021.07-1-gaf77efcd (build af77efcd)
//
// On Mon Dec  6 11:47:41 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_inst_response_put          O     1 reg
// rx_from_stage0_deq_ena         O     1
// tx_to_stage2_enq_ena           O     1
// tx_to_stage2_enq_data          O   122
// tx_to_stage2_inst_enq_ena      O     1
// tx_to_stage2_inst_enq_data     O    32
// RDY_update_eEpoch              O     1 const
// RDY_update_wEpoch              O     1 const
// RDY_csr_misa_c                 O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// inst_response_put              I    41
// rx_from_stage0_notEmpty_b      I     1
// rx_from_stage0_first_deq_rdy_b  I     1
// rx_from_stage0_first_x         I    80
// tx_to_stage2_notFull_b         I     1 unused
// tx_to_stage2_enq_rdy_b         I     1
// tx_to_stage2_inst_notFull_b    I     1 unused
// tx_to_stage2_inst_enq_rdy_b    I     1
// csr_misa_c_c                   I     1
// EN_inst_response_put           I     1
// EN_update_eEpoch               I     1
// EN_update_wEpoch               I     1
// EN_csr_misa_c                  I     1
//
// Combinational paths from inputs to outputs:
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> rx_from_stage0_deq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_enq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_enq_data
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_inst_enq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_inst_enq_data
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage1(CLK,
		RST_N,

		inst_response_put,
		EN_inst_response_put,
		RDY_inst_response_put,

		rx_from_stage0_notEmpty_b,

		rx_from_stage0_first_deq_rdy_b,

		rx_from_stage0_first_x,

		rx_from_stage0_deq_ena,

		tx_to_stage2_notFull_b,

		tx_to_stage2_enq_rdy_b,

		tx_to_stage2_enq_ena,

		tx_to_stage2_enq_data,

		tx_to_stage2_inst_notFull_b,

		tx_to_stage2_inst_enq_rdy_b,

		tx_to_stage2_inst_enq_ena,

		tx_to_stage2_inst_enq_data,

		EN_update_eEpoch,
		RDY_update_eEpoch,

		EN_update_wEpoch,
		RDY_update_wEpoch,

		csr_misa_c_c,
		EN_csr_misa_c,
		RDY_csr_misa_c);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method inst_response_put
  input  [40 : 0] inst_response_put;
  input  EN_inst_response_put;
  output RDY_inst_response_put;

  // action method rx_from_stage0_notEmpty
  input  rx_from_stage0_notEmpty_b;

  // action method rx_from_stage0_first_deq_rdy
  input  rx_from_stage0_first_deq_rdy_b;

  // action method rx_from_stage0_first
  input  [79 : 0] rx_from_stage0_first_x;

  // value method rx_from_stage0_deq_ena
  output rx_from_stage0_deq_ena;

  // action method tx_to_stage2_notFull
  input  tx_to_stage2_notFull_b;

  // action method tx_to_stage2_enq_rdy
  input  tx_to_stage2_enq_rdy_b;

  // value method tx_to_stage2_enq_ena
  output tx_to_stage2_enq_ena;

  // value method tx_to_stage2_enq_data
  output [121 : 0] tx_to_stage2_enq_data;

  // action method tx_to_stage2_inst_notFull
  input  tx_to_stage2_inst_notFull_b;

  // action method tx_to_stage2_inst_enq_rdy
  input  tx_to_stage2_inst_enq_rdy_b;

  // value method tx_to_stage2_inst_enq_ena
  output tx_to_stage2_inst_enq_ena;

  // value method tx_to_stage2_inst_enq_data
  output [31 : 0] tx_to_stage2_inst_enq_data;

  // action method update_eEpoch
  input  EN_update_eEpoch;
  output RDY_update_eEpoch;

  // action method update_wEpoch
  input  EN_update_wEpoch;
  output RDY_update_wEpoch;

  // action method csr_misa_c
  input  csr_misa_c_c;
  input  EN_csr_misa_c;
  output RDY_csr_misa_c;

  // signals for module outputs
  wire [121 : 0] tx_to_stage2_enq_data;
  wire [31 : 0] tx_to_stage2_inst_enq_data;
  wire RDY_csr_misa_c,
       RDY_inst_response_put,
       RDY_update_eEpoch,
       RDY_update_wEpoch,
       rx_from_stage0_deq_ena,
       tx_to_stage2_enq_ena,
       tx_to_stage2_inst_enq_ena;

  // inlined wires
  wire ff_memory_response_dequeueing_whas, tx_w_ena_whas;

  // register rg_action
  reg rg_action;
  wire rg_action_D_IN, rg_action_EN;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_prev
  reg [96 : 0] rg_prev;
  wire [96 : 0] rg_prev_D_IN;
  wire rg_prev_EN;

  // register rg_receiving_upper
  reg rg_receiving_upper;
  wire rg_receiving_upper_D_IN, rg_receiving_upper_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // ports of submodule ff_memory_response_ff
  wire [40 : 0] ff_memory_response_ff_D_IN, ff_memory_response_ff_D_OUT;
  wire ff_memory_response_ff_CLR,
       ff_memory_response_ff_DEQ,
       ff_memory_response_ff_EMPTY_N,
       ff_memory_response_ff_ENQ,
       ff_memory_response_ff_FULL_N;

  // ports of submodule ff_memory_response_firstValid
  wire ff_memory_response_firstValid_D_IN,
       ff_memory_response_firstValid_EN,
       ff_memory_response_firstValid_Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_ff_memory_response_dequeue,
       CAN_FIRE_RL_ff_memory_response_enqueue,
       CAN_FIRE_RL_process_instruction,
       CAN_FIRE_csr_misa_c,
       CAN_FIRE_inst_response_put,
       CAN_FIRE_rx_from_stage0_first,
       CAN_FIRE_rx_from_stage0_first_deq_rdy,
       CAN_FIRE_rx_from_stage0_notEmpty,
       CAN_FIRE_tx_to_stage2_enq_rdy,
       CAN_FIRE_tx_to_stage2_inst_enq_rdy,
       CAN_FIRE_tx_to_stage2_inst_notFull,
       CAN_FIRE_tx_to_stage2_notFull,
       CAN_FIRE_update_eEpoch,
       CAN_FIRE_update_wEpoch,
       WILL_FIRE_RL_ff_memory_response_dequeue,
       WILL_FIRE_RL_ff_memory_response_enqueue,
       WILL_FIRE_RL_process_instruction,
       WILL_FIRE_csr_misa_c,
       WILL_FIRE_inst_response_put,
       WILL_FIRE_rx_from_stage0_first,
       WILL_FIRE_rx_from_stage0_first_deq_rdy,
       WILL_FIRE_rx_from_stage0_notEmpty,
       WILL_FIRE_tx_to_stage2_enq_rdy,
       WILL_FIRE_tx_to_stage2_inst_enq_rdy,
       WILL_FIRE_tx_to_stage2_inst_notFull,
       WILL_FIRE_tx_to_stage2_notFull,
       WILL_FIRE_update_eEpoch,
       WILL_FIRE_update_wEpoch;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d308;
  reg TASK_testplusargs___d309;
  reg TASK_testplusargs___d310;
  reg [63 : 0] v__h5076;
  reg TASK_testplusargs___d22;
  reg TASK_testplusargs___d23;
  reg TASK_testplusargs___d24;
  reg [63 : 0] v__h1744;
  reg TASK_testplusargs___d123;
  reg TASK_testplusargs___d124;
  reg TASK_testplusargs___d125;
  reg [63 : 0] v__h2369;
  reg TASK_testplusargs___d159;
  reg TASK_testplusargs___d160;
  reg TASK_testplusargs___d161;
  reg [63 : 0] v__h4047;
  reg TASK_testplusargs___d190;
  reg TASK_testplusargs___d191;
  reg TASK_testplusargs___d192;
  reg [63 : 0] v__h4344;
  reg TASK_testplusargs___d250;
  reg TASK_testplusargs___d251;
  reg TASK_testplusargs___d252;
  reg [63 : 0] v__h4834;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d259;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d263;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d269;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d271;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d276;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d278;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d290;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d298;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d301;
  reg TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d304;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d44;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d46;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d50;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d52;
  reg NOT_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff__ETC___d128;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d181;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d185;
  reg TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d196;
  reg TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d197;
  reg rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255;
  reg TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d316;
  reg TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d318;
  // synopsys translate_on

  // remaining internal signals
  wire [63 : 0] IF_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_m_ETC___d174,
		rx_from_stage0_first_x_BITS_79_TO_16__q1,
		x1_avValue_snd_snd_fst_address__h4111,
		x1_avValue_snd_snd_fst_address__h4119,
		x1_avValue_snd_snd_snd_fst_address__h4122,
		x1_avValue_snd_snd_snd_fst_address__h4125,
		x1_avValue_snd_snd_snd_pc__h3828,
		x1_avValue_snd_snd_snd_pc__h3832,
		x1_avValue_snd_snd_snd_snd_pc__h3726,
		x1_avValue_snd_snd_snd_snd_snd_pc__h3793,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3836,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3840,
		x_pc__h3641,
		y_avValue_snd_snd_fst_address__h4116;
  wire [31 : 0] IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71,
		final_instruction___1__h4629,
		final_instruction__h3610,
		pipedata_instruction__h4618,
		y_avValue_snd_snd_fst__h3807,
		y_avValue_snd_snd_snd_snd_fst__h3686,
		y_avValue_snd_snd_snd_snd_fst__h3688,
		y_avValue_snd_snd_snd_snd_fst__h3747,
		y_avValue_snd_snd_snd_snd_fst__h3749;
  wire [16 : 0] rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_CONCAT_IF_rg__ETC___d157;
  wire [15 : 0] IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d246,
		x1_avValue_snd_snd_snd_instruction__h3829,
		x1_avValue_snd_snd_snd_instruction__h3833,
		x1_avValue_snd_snd_snd_snd_instruction__h3727,
		x1_avValue_snd_snd_snd_snd_snd_instruction__h3794,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3837,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3841,
		x_instruction__h3642;
  wire [14 : 0] IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d153,
		IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d154,
		IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d155;
  wire [12 : 0] IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d244;
  wire [10 : 0] x1_avValue_snd_snd_fst_history__h4703;
  wire [5 : 0] cause__h3979;
  wire [1 : 0] curr_epoch__h1651,
	       x1_avValue_snd_fst_prediction__h4688,
	       x1_avValue_snd_fst_prediction__h4692,
	       x1_avValue_snd_snd_fst_prediction__h4696,
	       x1_avValue_snd_snd_fst_prediction__h4700,
	       x__h2655,
	       y__h2052,
	       y_avValue_snd_fst_prediction__h4684,
	       y_avValue_snd_snd_fst_prediction__h4671;
  wire IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d241,
       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d287,
       IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d118,
       IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d216,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d101,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d217,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d225,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d258,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d262,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d275,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d289,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d297,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d300,
       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d303,
       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d180,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d184,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223,
       IF_rg_prev_7_BIT_11_2_THEN_rg_prev_7_BITS_14_T_ETC___d95,
       IF_rx_fromstage0_w_data_whas__8_THEN_rx_fromst_ETC___d98,
       NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d111,
       NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203,
       NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d89,
       NOT_rg_receiving_upper_99_65_OR_IF_ff_memory_r_ETC___d268,
       ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19,
       rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87,
       rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62;

  // action method inst_response_put
  assign RDY_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign CAN_FIRE_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign WILL_FIRE_inst_response_put = EN_inst_response_put ;

  // action method rx_from_stage0_notEmpty
  assign CAN_FIRE_rx_from_stage0_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_notEmpty = 1'd1 ;

  // action method rx_from_stage0_first_deq_rdy
  assign CAN_FIRE_rx_from_stage0_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_first_deq_rdy = 1'd1 ;

  // action method rx_from_stage0_first
  assign CAN_FIRE_rx_from_stage0_first = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_first = 1'd1 ;

  // value method rx_from_stage0_deq_ena
  assign rx_from_stage0_deq_ena = ff_memory_response_dequeueing_whas ;

  // action method tx_to_stage2_notFull
  assign CAN_FIRE_tx_to_stage2_notFull = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_notFull = 1'd1 ;

  // action method tx_to_stage2_enq_rdy
  assign CAN_FIRE_tx_to_stage2_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_enq_rdy = 1'd1 ;

  // value method tx_to_stage2_enq_ena
  assign tx_to_stage2_enq_ena = tx_w_ena_whas ;

  // value method tx_to_stage2_enq_data
  assign tx_to_stage2_enq_data =
	     { IF_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_m_ETC___d174,
	       pipedata_instruction__h4618,
	       curr_epoch__h1651,
	       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d225,
	       cause__h3979,
	       rg_receiving_upper &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223,
	       IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d246 } ;

  // action method tx_to_stage2_inst_notFull
  assign CAN_FIRE_tx_to_stage2_inst_notFull = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_inst_notFull = 1'd1 ;

  // action method tx_to_stage2_inst_enq_rdy
  assign CAN_FIRE_tx_to_stage2_inst_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_inst_enq_rdy = 1'd1 ;

  // value method tx_to_stage2_inst_enq_ena
  assign tx_to_stage2_inst_enq_ena = tx_w_ena_whas ;

  // value method tx_to_stage2_inst_enq_data
  assign tx_to_stage2_inst_enq_data =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       y_avValue_snd_snd_snd_snd_fst__h3686 :
	       y_avValue_snd_snd_snd_snd_fst__h3688 ;

  // action method update_eEpoch
  assign RDY_update_eEpoch = 1'd1 ;
  assign CAN_FIRE_update_eEpoch = 1'd1 ;
  assign WILL_FIRE_update_eEpoch = EN_update_eEpoch ;

  // action method update_wEpoch
  assign RDY_update_wEpoch = 1'd1 ;
  assign CAN_FIRE_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_update_wEpoch = EN_update_wEpoch ;

  // action method csr_misa_c
  assign RDY_csr_misa_c = 1'd1 ;
  assign CAN_FIRE_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_csr_misa_c = EN_csr_misa_c ;

  // submodule ff_memory_response_ff
  FIFO2 #(.width(32'd41), .guarded(1'd0)) ff_memory_response_ff(.RST(RST_N),
								.CLK(CLK),
								.D_IN(ff_memory_response_ff_D_IN),
								.ENQ(ff_memory_response_ff_ENQ),
								.DEQ(ff_memory_response_ff_DEQ),
								.CLR(ff_memory_response_ff_CLR),
								.D_OUT(ff_memory_response_ff_D_OUT),
								.FULL_N(ff_memory_response_ff_FULL_N),
								.EMPTY_N(ff_memory_response_ff_EMPTY_N));

  // submodule ff_memory_response_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) ff_memory_response_firstValid(.CLK(CLK),
							 .D_IN(ff_memory_response_firstValid_D_IN),
							 .EN(ff_memory_response_firstValid_EN),
							 .Q_OUT(ff_memory_response_firstValid_Q_OUT));

  // rule RL_process_instruction
  assign CAN_FIRE_RL_process_instruction =
	     ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 &&
	     rx_from_stage0_notEmpty_b ;
  assign WILL_FIRE_RL_process_instruction = CAN_FIRE_RL_process_instruction ;

  // rule RL_ff_memory_response_enqueue
  assign CAN_FIRE_RL_ff_memory_response_enqueue =
	     EN_inst_response_put &&
	     (!ff_memory_response_dequeueing_whas ||
	      ff_memory_response_ff_EMPTY_N) ;
  assign WILL_FIRE_RL_ff_memory_response_enqueue =
	     CAN_FIRE_RL_ff_memory_response_enqueue ;

  // rule RL_ff_memory_response_dequeue
  assign CAN_FIRE_RL_ff_memory_response_dequeue =
	     ff_memory_response_dequeueing_whas &&
	     ff_memory_response_ff_EMPTY_N ;
  assign WILL_FIRE_RL_ff_memory_response_dequeue =
	     CAN_FIRE_RL_ff_memory_response_dequeue ;

  // inlined wires
  assign tx_w_ena_whas =
	     WILL_FIRE_RL_process_instruction &&
	     rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	     NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 ;
  assign ff_memory_response_dequeueing_whas =
	     WILL_FIRE_RL_process_instruction &&
	     (rg_prev[18:17] == 2'b11 || rg_action ||
	      !rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 ||
	      !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87) ;

  // register rg_action
  assign rg_action_D_IN =
	     !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ||
	     !rg_action &&
	     rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 ||
	     IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d118 ;
  assign rg_action_EN =
	     WILL_FIRE_RL_process_instruction &&
	     (NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d111 ||
	      !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87) ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN = ~rg_eEpoch ;
  assign rg_eEpoch_EN = EN_update_eEpoch ;

  // register rg_prev
  assign rg_prev_D_IN =
	     { x_pc__h3641,
	       x_instruction__h3642,
	       rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_CONCAT_IF_rg__ETC___d157 } ;
  assign rg_prev_EN = CAN_FIRE_RL_process_instruction ;

  // register rg_receiving_upper
  assign rg_receiving_upper_D_IN =
	     rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	     IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d101 ;
  assign rg_receiving_upper_EN =
	     WILL_FIRE_RL_process_instruction &&
	     NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d89 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_update_wEpoch ;

  // submodule ff_memory_response_ff
  assign ff_memory_response_ff_D_IN = inst_response_put ;
  assign ff_memory_response_ff_ENQ = CAN_FIRE_RL_ff_memory_response_enqueue ;
  assign ff_memory_response_ff_DEQ = CAN_FIRE_RL_ff_memory_response_dequeue ;
  assign ff_memory_response_ff_CLR = 1'b0 ;

  // submodule ff_memory_response_firstValid
  assign ff_memory_response_firstValid_D_IN = 1'd1 ;
  assign ff_memory_response_firstValid_EN =
	     ff_memory_response_dequeueing_whas ;

  // remaining internal signals
  module_fn_decompress instance_fn_decompress_0(.fn_decompress_inst(final_instruction__h3610[15:0]),
						.fn_decompress(final_instruction___1__h4629));
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d153 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       rg_prev[14:0] :
	       (csr_misa_c_c ? rx_from_stage0_first_x[14:0] : rg_prev[14:0]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d241 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       rx_from_stage0_first_x[12] :
	       (csr_misa_c_c ?
		  !rx_from_stage0_first_x[11] && rx_from_stage0_first_x[12] :
		  rx_from_stage0_first_x[12]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d287 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       !rx_from_stage0_first_x[12] :
	       (csr_misa_c_c ?
		  rx_from_stage0_first_x[11] || !rx_from_stage0_first_x[12] :
		  !rx_from_stage0_first_x[12]) ;
  assign IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d118 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] !=
	       2'b11 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	       2'b11 ||
	       !rx_from_stage0_first_x[11] &&
	       !IF_rx_fromstage0_w_data_whas__8_THEN_rx_fromst_ETC___d98 ;
  assign IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d154 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       ((IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
		 2'b11) ?
		  rx_from_stage0_first_x[14:0] :
		  rg_prev[14:0]) :
	       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d153 ;
  assign IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d216 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] !=
	       2'b11 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] !=
	       2'b11 &&
	       csr_misa_c_c ;
  assign IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d244 =
	     { (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
		 rx_from_stage0_first_x[11] && rx_from_stage0_first_x[12] :
		 IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d241,
	       rx_from_stage0_first_x[11:0] } ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d101 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] == 2'b11 &&
	       IF_rg_prev_7_BIT_11_2_THEN_rg_prev_7_BITS_14_T_ETC___d95 :
	       rx_from_stage0_first_x[15] && csr_misa_c_c ||
	       rx_from_stage0_first_x[11] ||
	       IF_rx_fromstage0_w_data_whas__8_THEN_rx_fromst_ETC___d98 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d155 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       ((rg_prev[18:17] == 2'b11) ?
		  rx_from_stage0_first_x[14:0] :
		  rg_prev[14:0]) :
	       IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d154 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d217 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] != 2'b11 :
	       IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d216 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d225 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d246 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       { rg_prev[18:17] != 2'b11,
		 x__h2655,
		 rg_prev[11] && rg_prev[12],
		 rg_prev[11:0] } :
	       { IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d216,
		 x1_avValue_snd_snd_fst_prediction__h4696,
		 IF_IF_rx_fromstage0_w_data_whas__8_THEN_rx_fro_ETC___d244 } ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d258 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] != 2'b11 ||
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d180 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d180 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d262 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d184 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d184 ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d275 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[18:17] == 2'b11 :
	       ((rx_from_stage0_first_x[15] && csr_misa_c_c) ?
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
		  2'b11 :
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
		  2'b11 ||
		  !csr_misa_c_c) ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d289 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       !rg_prev[11] || !rg_prev[12] :
	       ((rx_from_stage0_first_x[15] && csr_misa_c_c) ?
		  !rx_from_stage0_first_x[11] || !rx_from_stage0_first_x[12] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d287) ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d297 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[11] && rg_prev[12] :
	       ((rx_from_stage0_first_x[15] && csr_misa_c_c) ?
		  rx_from_stage0_first_x[11] && rx_from_stage0_first_x[12] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d241) ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d300 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       !rg_prev[11] :
	       !rx_from_stage0_first_x[11] ;
  assign IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d303 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[11] :
	       rx_from_stage0_first_x[11] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d180 =
	     ff_memory_response_ff_EMPTY_N ?
	       !ff_memory_response_ff_D_OUT[8] :
	       EN_inst_response_put && !inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d184 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[8] :
	       !EN_inst_response_put || inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[8] :
	       inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[40:9] :
	       inst_response_put[40:9] ;
  assign IF_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_m_ETC___d174 =
	     rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ?
	       x1_avValue_snd_snd_snd_fst_address__h4125 :
	       rx_from_stage0_first_x[79:16] ;
  assign IF_rg_prev_7_BIT_11_2_THEN_rg_prev_7_BITS_14_T_ETC___d95 =
	     x__h2655 <= 2'd1 ;
  assign IF_rx_fromstage0_w_data_whas__8_THEN_rx_fromst_ETC___d98 =
	     rx_from_stage0_first_x[14:13] <= 2'd1 ;
  assign NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d111 =
	     !rg_action &&
	     rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 &&
	     (!IF_rg_prev_7_BIT_11_2_THEN_rg_prev_7_BITS_14_T_ETC___d95 ||
	      rg_prev[18:17] != 2'b11) ||
	     (rg_action ||
	      !rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) &&
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11 ||
	      csr_misa_c_c) ;
  assign NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 =
	     !rg_action &&
	     rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 ||
	     !rx_from_stage0_first_x[15] ||
	     !csr_misa_c_c ||
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] !=
	     2'b11 ;
  assign NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d89 =
	     !rg_action &&
	     rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 ||
	     rx_from_stage0_first_x[15] && csr_misa_c_c &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
	     2'b11 ||
	     !rx_from_stage0_first_x[15] &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] !=
	     2'b11 &&
	     csr_misa_c_c ||
	     !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ;
  assign NOT_rg_receiving_upper_99_65_OR_IF_ff_memory_r_ETC___d268 =
	     !rg_receiving_upper ||
	     (ff_memory_response_ff_EMPTY_N ?
		!ff_memory_response_ff_D_OUT[8] :
		!inst_response_put[8]) ;
  assign cause__h3979 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[7:2] :
	       inst_response_put[7:2] ;
  assign curr_epoch__h1651 = { rg_eEpoch, rg_wEpoch } ;
  assign ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 =
	     ff_memory_response_firstValid_Q_OUT &&
	     (ff_memory_response_ff_EMPTY_N || EN_inst_response_put) &&
	     rx_from_stage0_first_deq_rdy_b &&
	     EN_csr_misa_c &&
	     tx_to_stage2_inst_enq_rdy_b &&
	     tx_to_stage2_enq_rdy_b ;
  assign final_instruction__h3610 = tx_to_stage2_inst_enq_data ;
  assign pipedata_instruction__h4618 =
	     (rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	      IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d217) ?
	       final_instruction___1__h4629 :
	       final_instruction__h3610 ;
  assign rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_CONCAT_IF_rg__ETC___d157 =
	     { curr_epoch__h1651,
	       rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ?
		 IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d155 :
		 rg_prev[14:0] } ;
  assign rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 =
	     curr_epoch__h1651 == y__h2052 ;
  assign rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62 =
	     rg_prev[16:15] == curr_epoch__h1651 ;
  assign rx_from_stage0_first_x_BITS_79_TO_16__q1 =
	     rx_from_stage0_first_x[79:16] ;
  assign x1_avValue_snd_fst_prediction__h4688 =
	     csr_misa_c_c ?
	       y_avValue_snd_fst_prediction__h4684 :
	       rx_from_stage0_first_x[14:13] ;
  assign x1_avValue_snd_fst_prediction__h4692 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       rx_from_stage0_first_x[14:13] :
	       x1_avValue_snd_fst_prediction__h4688 ;
  assign x1_avValue_snd_snd_fst_address__h4111 =
	     { rg_prev[96:35], 1'd1, rg_prev[33] } ;
  assign x1_avValue_snd_snd_fst_address__h4119 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
	      2'b11) ?
	       rx_from_stage0_first_x[79:16] :
	       y_avValue_snd_snd_fst_address__h4116 ;
  assign x1_avValue_snd_snd_fst_history__h4703 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       rg_prev[10:0] :
	       rx_from_stage0_first_x[10:0] ;
  assign x1_avValue_snd_snd_fst_prediction__h4696 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       y_avValue_snd_snd_fst_prediction__h4671 :
	       x1_avValue_snd_fst_prediction__h4692 ;
  assign x1_avValue_snd_snd_fst_prediction__h4700 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       x__h2655 :
	       x1_avValue_snd_snd_fst_prediction__h4696 ;
  assign x1_avValue_snd_snd_snd_fst_address__h4122 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       x1_avValue_snd_snd_fst_address__h4119 :
	       rx_from_stage0_first_x[79:16] ;
  assign x1_avValue_snd_snd_snd_fst_address__h4125 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       x1_avValue_snd_snd_fst_address__h4111 :
	       x1_avValue_snd_snd_snd_fst_address__h4122 ;
  assign x1_avValue_snd_snd_snd_instruction__h3829 =
	     csr_misa_c_c ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[31:16] :
	       rg_prev[32:17] ;
  assign x1_avValue_snd_snd_snd_instruction__h3833 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       rg_prev[32:17] :
	       x1_avValue_snd_snd_snd_instruction__h3829 ;
  assign x1_avValue_snd_snd_snd_pc__h3828 =
	     csr_misa_c_c ? rx_from_stage0_first_x[79:16] : rg_prev[96:33] ;
  assign x1_avValue_snd_snd_snd_pc__h3832 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       rg_prev[96:33] :
	       x1_avValue_snd_snd_snd_pc__h3828 ;
  assign x1_avValue_snd_snd_snd_snd_instruction__h3727 =
	     (rg_prev[18:17] == 2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[31:16] :
	       rg_prev[32:17] ;
  assign x1_avValue_snd_snd_snd_snd_pc__h3726 =
	     (rg_prev[18:17] == 2'b11) ?
	       rx_from_stage0_first_x[79:16] :
	       rg_prev[96:33] ;
  assign x1_avValue_snd_snd_snd_snd_snd_instruction__h3794 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[31:16] :
	       rg_prev[32:17] ;
  assign x1_avValue_snd_snd_snd_snd_snd_pc__h3793 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[17:16] ==
	      2'b11) ?
	       rx_from_stage0_first_x[79:16] :
	       rg_prev[96:33] ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3837 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_instruction__h3794 :
	       x1_avValue_snd_snd_snd_instruction__h3833 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3841 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       x1_avValue_snd_snd_snd_snd_instruction__h3727 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3837 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3836 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_pc__h3793 :
	       x1_avValue_snd_snd_snd_pc__h3832 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3840 =
	     (!rg_action &&
	      rg_prev_7_BITS_16_TO_15_8_EQ_rg_eEpoch_9_CONCA_ETC___d62) ?
	       x1_avValue_snd_snd_snd_snd_pc__h3726 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3836 ;
  assign x__h2655 = rg_prev[11] ? rg_prev[14:13] : 2'd1 ;
  assign x_instruction__h3642 =
	     rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3841 :
	       rg_prev[32:17] ;
  assign x_pc__h3641 =
	     rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3840 :
	       rg_prev[96:33] ;
  assign y__h2052 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[1:0] :
	       inst_response_put[1:0] ;
  assign y_avValue_snd_fst_prediction__h4684 =
	     rx_from_stage0_first_x[11] ?
	       2'd1 :
	       rx_from_stage0_first_x[14:13] ;
  assign y_avValue_snd_snd_fst__h3807 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[15:0] } ;
  assign y_avValue_snd_snd_fst_address__h4116 =
	     { rx_from_stage0_first_x_BITS_79_TO_16__q1[63:2],
	       1'd1,
	       rx_from_stage0_first_x_BITS_79_TO_16__q1[0] } ;
  assign y_avValue_snd_snd_fst_prediction__h4671 =
	     rx_from_stage0_first_x[11] ?
	       rx_from_stage0_first_x[14:13] :
	       2'd1 ;
  assign y_avValue_snd_snd_snd_snd_fst__h3686 =
	     { (rg_prev[18:17] == 2'b11) ?
		 IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[15:0] :
		 16'd0,
	       rg_prev[32:17] } ;
  assign y_avValue_snd_snd_snd_snd_fst__h3688 =
	     (rx_from_stage0_first_x[15] && csr_misa_c_c) ?
	       y_avValue_snd_snd_snd_snd_fst__h3747 :
	       y_avValue_snd_snd_snd_snd_fst__h3749 ;
  assign y_avValue_snd_snd_snd_snd_fst__h3747 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[31:16] } ;
  assign y_avValue_snd_snd_snd_snd_fst__h3749 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71[1:0] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71 :
	       y_avValue_snd_snd_fst__h3807 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_action <= `BSV_ASSIGNMENT_DELAY 1'd1;
	rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_prev <= `BSV_ASSIGNMENT_DELAY
	    97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_action_EN) rg_action <= `BSV_ASSIGNMENT_DELAY rg_action_D_IN;
	if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
	if (rg_prev_EN) rg_prev <= `BSV_ASSIGNMENT_DELAY rg_prev_D_IN;
	if (rg_receiving_upper_EN)
	  rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY rg_receiving_upper_D_IN;
	if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_action = 1'h0;
    rg_eEpoch = 1'h0;
    rg_prev = 97'h0AAAAAAAAAAAAAAAAAAAAAAAA;
    rg_receiving_upper = 1'h0;
    rg_wEpoch = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d308 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d309 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d310 = $test$plusargs("l3");
	  #0;
	end
    TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d316 =
	(TASK_testplusargs___d308 ||
	 TASK_testplusargs___d309 && TASK_testplusargs___d310) &&
	inst_response_put[8];
    TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d318 =
	(TASK_testplusargs___d308 ||
	 TASK_testplusargs___d309 && TASK_testplusargs___d310) &&
	!inst_response_put[8];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  v__h5076 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("[%10d", v__h5076, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("core:%2d ", hartid, "STAGE1: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("FetchResponse { ", "instr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("'h%h", inst_response_put[40:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d316)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  TASK_testplusargs_08_OR_TASK_testplusargs_09_A_ETC___d318)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("'h%h", inst_response_put[7:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("'h%h", inst_response_put[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d308 ||
	   TASK_testplusargs___d309 && TASK_testplusargs___d310))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d22 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d23 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d24 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	!rx_from_stage0_first_x[15];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	rx_from_stage0_first_x[15];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d44 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	!rx_from_stage0_first_x[12];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d46 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	rx_from_stage0_first_x[12];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d52 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	rx_from_stage0_first_x[11];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d50 =
	(TASK_testplusargs___d22 ||
	 TASK_testplusargs___d23 && TASK_testplusargs___d24) &&
	!rx_from_stage0_first_x[11];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h1744 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("[%10d", v__h1744, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("core:%2d ", hartid, "STAGE1 : Prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("Stage0PC { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("'h%h", rx_from_stage0_first_x[79:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(", ", "discard: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("'h%h", rx_from_stage0_first_x[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d44)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d46)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d50)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d52)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("'h%h", rx_from_stage0_first_x[10:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d22 ||
	   TASK_testplusargs___d23 && TASK_testplusargs___d24))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87)
	begin
	  TASK_testplusargs___d123 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87)
	begin
	  TASK_testplusargs___d124 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87)
	begin
	  TASK_testplusargs___d125 = $test$plusargs("l1");
	  #0;
	end
    NOT_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff__ETC___d128 =
	!rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	(TASK_testplusargs___d123 ||
	 TASK_testplusargs___d124 && TASK_testplusargs___d125);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87)
	begin
	  v__h2369 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff__ETC___d128)
	$write("[%10d", v__h2369, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff__ETC___d128)
	$write("core:%2d ", hartid, "STAGE1 : Dropping Instruction");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff__ETC___d128)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d159 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d160 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d161 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d181 =
	(TASK_testplusargs___d159 ||
	 TASK_testplusargs___d160 && TASK_testplusargs___d161) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d180;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d185 =
	(TASK_testplusargs___d159 ||
	 TASK_testplusargs___d160 && TASK_testplusargs___d161) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d184;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4047 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("[%10d", v__h4047, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("core:%2d ",
	       hartid,
	       "STAGE1 : PC:%h: ",
	       IF_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_m_ETC___d174);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("FetchResponse { ", "instr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("'h%h",
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d71);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d181)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d185)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("'h%h", cause__h3979);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("'h%h", y__h2052, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d159 ||
	   TASK_testplusargs___d160 && TASK_testplusargs___d161))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d190 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d191 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d192 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d196 =
	(TASK_testplusargs___d190 ||
	 TASK_testplusargs___d191 && TASK_testplusargs___d192) &&
	rg_action;
    TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d197 =
	(TASK_testplusargs___d190 ||
	 TASK_testplusargs___d191 && TASK_testplusargs___d192) &&
	!rg_action;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4344 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d190 ||
	   TASK_testplusargs___d191 && TASK_testplusargs___d192))
	$write("[%10d", v__h4344, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d190 ||
	   TASK_testplusargs___d191 && TASK_testplusargs___d192))
	$write("core:%2d ", hartid, "STAGE1 : rg_action: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d196)
	$write("None");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_90_OR_TASK_testplusargs_91_A_ETC___d197)
	$write("CheckPrev");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d190 ||
	   TASK_testplusargs___d191 && TASK_testplusargs___d192))
	$write(" misa[c]:%b discard:%b rg_receiving_upper:%b",
	       csr_misa_c_c,
	       rx_from_stage0_first_x[15],
	       rg_receiving_upper);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d190 ||
	   TASK_testplusargs___d191 && TASK_testplusargs___d192))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203)
	begin
	  TASK_testplusargs___d250 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203)
	begin
	  TASK_testplusargs___d251 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203)
	begin
	  TASK_testplusargs___d252 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d259 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d258;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d263 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d262;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d269 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	NOT_rg_receiving_upper_99_65_OR_IF_ff_memory_r_ETC___d268;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d271 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	rg_receiving_upper &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d223;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d276 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d275;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d278 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d217;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d290 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d289;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d298 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d297;
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d301 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d300;
    rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255 =
	rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252);
    TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d304 =
	(TASK_testplusargs___d250 ||
	 TASK_testplusargs___d251 && TASK_testplusargs___d252) &&
	IF_NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO__ETC___d303;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203)
	begin
	  v__h4834 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("[%10d", v__h4834, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("core:%2d ", hartid, "STAGE1 : Enquing: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("PIPE1 { ", "program_counter: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h",
	       IF_rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_m_ETC___d174);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "instruction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h", pipedata_instruction__h4618);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h", curr_epoch__h1651);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d259)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d263)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h", cause__h3979);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "upper_err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d269)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d271)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "compressed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d276)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d278)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h", x1_avValue_snd_snd_fst_prediction__h4700);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d290)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d298)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d301)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d87 &&
	  NOT_rg_action_5_6_AND_rg_prev_7_BITS_16_TO_15__ETC___d203 &&
	  TASK_testplusargs_50_OR_TASK_testplusargs_51_A_ETC___d304)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("'h%h", x1_avValue_snd_snd_fst_history__h4703, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_9_CONCAT_rg_wEpoch_0_1_EQ_IF_ff_memo_ETC___d255)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage1

