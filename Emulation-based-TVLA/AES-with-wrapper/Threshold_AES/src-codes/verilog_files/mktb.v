//
// Generated by Bluespec Compiler, version 2021.07-1-gaf77efcd (build af77efcd)
//
// On Sat Apr  9 16:51:34 IST 2022
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mktb(CLK,
	    RST_N);
  input  CLK;
  input  RST_N;

  // register i
  reg [7 : 0] i;
  wire [7 : 0] i$D_IN;
  wire i$EN;

  // ports of submodule mod
  wire [7 : 0] mod$getbyte, mod$getbyte_in;
  wire mod$EN_getbyte;

  // submodule mod
  mkinv_sbox_threshold mod(.seed_1(16'h0004),
			   .seed_2(24'h000002),
			   .seed_3(24'h000001),
			   .CLK(CLK),
			   .RST_N(RST_N),
			   .getbyte_in(mod$getbyte_in),
			   .EN_getbyte(mod$EN_getbyte),
			   .getbyte(mod$getbyte),
			   .RDY_getbyte());

  // register i
  assign i$D_IN = i + 8'd1 ;
  assign i$EN = 1'd1 ;

  // submodule mod
  assign mod$getbyte_in = i ;
  assign mod$EN_getbyte = 1'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        i <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (i$EN) i <= `BSV_ASSIGNMENT_DELAY i$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    i = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE) $display("%h out", mod$getbyte);
    if (RST_N != `BSV_RESET_VALUE) if (i == 8'hFF) $finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mktb

